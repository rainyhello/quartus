// megafunction wizard: %ALTFP_ATAN%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: altfp_atan 

// ============================================================
// File Name: ip_atan.v
// Megafunction Name(s):
// 			altfp_atan
//
// Simulation Library Files(s):
// 			lpm
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 13.1.0 Build 162 10/23/2013 SJ Full Version
// ************************************************************


//Copyright (C) 1991-2013 Altera Corporation
//Your use of Altera Corporation's design tools, logic functions 
//and other software and tools, and its AMPP partner logic 
//functions, and any output files from any of the foregoing 
//(including device programming or simulation files), and any 
//associated documentation or information are expressly subject 
//to the terms and conditions of the Altera Program License 
//Subscription Agreement, Altera MegaCore Function License 
//Agreement, or other applicable license agreement, including, 
//without limitation, that your use is for the sole purpose of 
//programming logic devices manufactured by Altera and sold by 
//Altera or its authorized distributors.  Please refer to the 
//applicable agreement for further details.


//altfp_atan CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone III" PIPELINE=34 ROUNDING="TO_NEAREST" WIDTH_EXP=8 WIDTH_MAN=23 aclr clk_en clock data result
//VERSION_BEGIN 13.1 cbx_altfp_atan 2013:10:23:18:05:48:SJ cbx_altpriority_encoder 2013:10:23:18:05:48:SJ cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_lpm_clshift 2013:10:23:18:05:48:SJ cbx_lpm_mult 2013:10:23:18:05:48:SJ cbx_lpm_mux 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



//altfp_atan_clz36 CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone III" leading mantissa
//VERSION_BEGIN 13.1 cbx_altfp_atan 2013:10:23:18:05:48:SJ cbx_altpriority_encoder 2013:10:23:18:05:48:SJ cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_lpm_clshift 2013:10:23:18:05:48:SJ cbx_lpm_mult 2013:10:23:18:05:48:SJ cbx_lpm_mux 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END


//altfp_atan_pos52 CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone III" start=0 ingroup position
//VERSION_BEGIN 13.1 cbx_altfp_atan 2013:10:23:18:05:48:SJ cbx_altpriority_encoder 2013:10:23:18:05:48:SJ cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_lpm_clshift 2013:10:23:18:05:48:SJ cbx_lpm_mult 2013:10:23:18:05:48:SJ cbx_lpm_mux 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END

//synthesis_resources = lpm_mux 1 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ip_atan_altfp_atan_pos52_kl8
	( 
	ingroup,
	position) ;
	input   [5:0]  ingroup;
	output   [5:0]  position;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [5:0]  ingroup;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [5:0]   wire_mux1_result;
	wire  [5:0]  position_0_w;
	wire  [5:0]  position_10_w;
	wire  [5:0]  position_11_w;
	wire  [5:0]  position_12_w;
	wire  [5:0]  position_13_w;
	wire  [5:0]  position_14_w;
	wire  [5:0]  position_15_w;
	wire  [5:0]  position_16_w;
	wire  [5:0]  position_17_w;
	wire  [5:0]  position_18_w;
	wire  [5:0]  position_19_w;
	wire  [5:0]  position_1_w;
	wire  [5:0]  position_20_w;
	wire  [5:0]  position_21_w;
	wire  [5:0]  position_22_w;
	wire  [5:0]  position_23_w;
	wire  [5:0]  position_24_w;
	wire  [5:0]  position_25_w;
	wire  [5:0]  position_26_w;
	wire  [5:0]  position_27_w;
	wire  [5:0]  position_28_w;
	wire  [5:0]  position_29_w;
	wire  [5:0]  position_2_w;
	wire  [5:0]  position_30_w;
	wire  [5:0]  position_31_w;
	wire  [5:0]  position_32_w;
	wire  [5:0]  position_33_w;
	wire  [5:0]  position_34_w;
	wire  [5:0]  position_35_w;
	wire  [5:0]  position_36_w;
	wire  [5:0]  position_37_w;
	wire  [5:0]  position_38_w;
	wire  [5:0]  position_39_w;
	wire  [5:0]  position_3_w;
	wire  [5:0]  position_40_w;
	wire  [5:0]  position_41_w;
	wire  [5:0]  position_42_w;
	wire  [5:0]  position_43_w;
	wire  [5:0]  position_44_w;
	wire  [5:0]  position_45_w;
	wire  [5:0]  position_46_w;
	wire  [5:0]  position_47_w;
	wire  [5:0]  position_48_w;
	wire  [5:0]  position_49_w;
	wire  [5:0]  position_4_w;
	wire  [5:0]  position_50_w;
	wire  [5:0]  position_51_w;
	wire  [5:0]  position_52_w;
	wire  [5:0]  position_53_w;
	wire  [5:0]  position_54_w;
	wire  [5:0]  position_55_w;
	wire  [5:0]  position_56_w;
	wire  [5:0]  position_57_w;
	wire  [5:0]  position_58_w;
	wire  [5:0]  position_59_w;
	wire  [5:0]  position_5_w;
	wire  [5:0]  position_60_w;
	wire  [5:0]  position_61_w;
	wire  [5:0]  position_62_w;
	wire  [5:0]  position_63_w;
	wire  [5:0]  position_6_w;
	wire  [5:0]  position_7_w;
	wire  [5:0]  position_8_w;
	wire  [5:0]  position_9_w;

	lpm_mux   mux1
	( 
	.data({position_63_w, position_62_w, position_61_w, position_60_w, position_59_w, position_58_w, position_57_w, position_56_w, position_55_w, position_54_w, position_53_w, position_52_w, position_51_w, position_50_w, position_49_w, position_48_w, position_47_w, position_46_w, position_45_w, position_44_w, position_43_w, position_42_w, position_41_w, position_40_w, position_39_w, position_38_w, position_37_w, position_36_w, position_35_w, position_34_w, position_33_w, position_32_w, position_31_w, position_30_w, position_29_w, position_28_w, position_27_w, position_26_w, position_25_w, position_24_w, position_23_w, position_22_w, position_21_w, position_20_w, position_19_w, position_18_w, position_17_w, position_16_w, position_15_w, position_14_w, position_13_w, position_12_w, position_11_w, position_10_w, position_9_w, position_8_w, position_7_w, position_6_w, position_5_w, position_4_w, position_3_w, position_2_w, position_1_w, position_0_w}),
	.result(wire_mux1_result),
	.sel(ingroup)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		mux1.lpm_size = 64,
		mux1.lpm_width = 6,
		mux1.lpm_widths = 6,
		mux1.lpm_type = "lpm_mux";
	assign
		position = wire_mux1_result,
		position_0_w = {6{1'b0}},
		position_10_w = position_8_w,
		position_11_w = position_8_w,
		position_12_w = position_8_w,
		position_13_w = position_8_w,
		position_14_w = position_8_w,
		position_15_w = position_8_w,
		position_16_w = 6'b000001,
		position_17_w = position_16_w,
		position_18_w = position_16_w,
		position_19_w = position_16_w,
		position_1_w = 6'b000101,
		position_20_w = position_16_w,
		position_21_w = position_16_w,
		position_22_w = position_16_w,
		position_23_w = position_16_w,
		position_24_w = position_16_w,
		position_25_w = position_16_w,
		position_26_w = position_16_w,
		position_27_w = position_16_w,
		position_28_w = position_16_w,
		position_29_w = position_16_w,
		position_2_w = 6'b000100,
		position_30_w = position_16_w,
		position_31_w = position_16_w,
		position_32_w = {6{1'b0}},
		position_33_w = position_32_w,
		position_34_w = position_32_w,
		position_35_w = position_32_w,
		position_36_w = position_32_w,
		position_37_w = position_32_w,
		position_38_w = position_32_w,
		position_39_w = position_32_w,
		position_3_w = position_2_w,
		position_40_w = position_32_w,
		position_41_w = position_32_w,
		position_42_w = position_32_w,
		position_43_w = position_32_w,
		position_44_w = position_32_w,
		position_45_w = position_32_w,
		position_46_w = position_32_w,
		position_47_w = position_32_w,
		position_48_w = position_32_w,
		position_49_w = position_32_w,
		position_4_w = 6'b000011,
		position_50_w = position_32_w,
		position_51_w = position_32_w,
		position_52_w = position_32_w,
		position_53_w = position_32_w,
		position_54_w = position_32_w,
		position_55_w = position_32_w,
		position_56_w = position_32_w,
		position_57_w = position_32_w,
		position_58_w = position_32_w,
		position_59_w = position_32_w,
		position_5_w = position_4_w,
		position_60_w = position_32_w,
		position_61_w = position_32_w,
		position_62_w = position_32_w,
		position_63_w = position_32_w,
		position_6_w = position_4_w,
		position_7_w = position_4_w,
		position_8_w = 6'b000010,
		position_9_w = position_8_w;
endmodule //ip_atan_altfp_atan_pos52_kl8


//altfp_atan_pos52 CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone III" start=6 ingroup position
//VERSION_BEGIN 13.1 cbx_altfp_atan 2013:10:23:18:05:48:SJ cbx_altpriority_encoder 2013:10:23:18:05:48:SJ cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_lpm_clshift 2013:10:23:18:05:48:SJ cbx_lpm_mult 2013:10:23:18:05:48:SJ cbx_lpm_mux 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END

//synthesis_resources = lpm_mux 1 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ip_atan_altfp_atan_pos52_ql8
	( 
	ingroup,
	position) ;
	input   [5:0]  ingroup;
	output   [5:0]  position;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [5:0]  ingroup;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [5:0]   wire_mux2_result;
	wire  [5:0]  position_0_w;
	wire  [5:0]  position_10_w;
	wire  [5:0]  position_11_w;
	wire  [5:0]  position_12_w;
	wire  [5:0]  position_13_w;
	wire  [5:0]  position_14_w;
	wire  [5:0]  position_15_w;
	wire  [5:0]  position_16_w;
	wire  [5:0]  position_17_w;
	wire  [5:0]  position_18_w;
	wire  [5:0]  position_19_w;
	wire  [5:0]  position_1_w;
	wire  [5:0]  position_20_w;
	wire  [5:0]  position_21_w;
	wire  [5:0]  position_22_w;
	wire  [5:0]  position_23_w;
	wire  [5:0]  position_24_w;
	wire  [5:0]  position_25_w;
	wire  [5:0]  position_26_w;
	wire  [5:0]  position_27_w;
	wire  [5:0]  position_28_w;
	wire  [5:0]  position_29_w;
	wire  [5:0]  position_2_w;
	wire  [5:0]  position_30_w;
	wire  [5:0]  position_31_w;
	wire  [5:0]  position_32_w;
	wire  [5:0]  position_33_w;
	wire  [5:0]  position_34_w;
	wire  [5:0]  position_35_w;
	wire  [5:0]  position_36_w;
	wire  [5:0]  position_37_w;
	wire  [5:0]  position_38_w;
	wire  [5:0]  position_39_w;
	wire  [5:0]  position_3_w;
	wire  [5:0]  position_40_w;
	wire  [5:0]  position_41_w;
	wire  [5:0]  position_42_w;
	wire  [5:0]  position_43_w;
	wire  [5:0]  position_44_w;
	wire  [5:0]  position_45_w;
	wire  [5:0]  position_46_w;
	wire  [5:0]  position_47_w;
	wire  [5:0]  position_48_w;
	wire  [5:0]  position_49_w;
	wire  [5:0]  position_4_w;
	wire  [5:0]  position_50_w;
	wire  [5:0]  position_51_w;
	wire  [5:0]  position_52_w;
	wire  [5:0]  position_53_w;
	wire  [5:0]  position_54_w;
	wire  [5:0]  position_55_w;
	wire  [5:0]  position_56_w;
	wire  [5:0]  position_57_w;
	wire  [5:0]  position_58_w;
	wire  [5:0]  position_59_w;
	wire  [5:0]  position_5_w;
	wire  [5:0]  position_60_w;
	wire  [5:0]  position_61_w;
	wire  [5:0]  position_62_w;
	wire  [5:0]  position_63_w;
	wire  [5:0]  position_6_w;
	wire  [5:0]  position_7_w;
	wire  [5:0]  position_8_w;
	wire  [5:0]  position_9_w;

	lpm_mux   mux2
	( 
	.data({position_63_w, position_62_w, position_61_w, position_60_w, position_59_w, position_58_w, position_57_w, position_56_w, position_55_w, position_54_w, position_53_w, position_52_w, position_51_w, position_50_w, position_49_w, position_48_w, position_47_w, position_46_w, position_45_w, position_44_w, position_43_w, position_42_w, position_41_w, position_40_w, position_39_w, position_38_w, position_37_w, position_36_w, position_35_w, position_34_w, position_33_w, position_32_w, position_31_w, position_30_w, position_29_w, position_28_w, position_27_w, position_26_w, position_25_w, position_24_w, position_23_w, position_22_w, position_21_w, position_20_w, position_19_w, position_18_w, position_17_w, position_16_w, position_15_w, position_14_w, position_13_w, position_12_w, position_11_w, position_10_w, position_9_w, position_8_w, position_7_w, position_6_w, position_5_w, position_4_w, position_3_w, position_2_w, position_1_w, position_0_w}),
	.result(wire_mux2_result),
	.sel(ingroup)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		mux2.lpm_size = 64,
		mux2.lpm_width = 6,
		mux2.lpm_widths = 6,
		mux2.lpm_type = "lpm_mux";
	assign
		position = wire_mux2_result,
		position_0_w = {6{1'b0}},
		position_10_w = position_8_w,
		position_11_w = position_8_w,
		position_12_w = position_8_w,
		position_13_w = position_8_w,
		position_14_w = position_8_w,
		position_15_w = position_8_w,
		position_16_w = 6'b000111,
		position_17_w = position_16_w,
		position_18_w = position_16_w,
		position_19_w = position_16_w,
		position_1_w = 6'b001011,
		position_20_w = position_16_w,
		position_21_w = position_16_w,
		position_22_w = position_16_w,
		position_23_w = position_16_w,
		position_24_w = position_16_w,
		position_25_w = position_16_w,
		position_26_w = position_16_w,
		position_27_w = position_16_w,
		position_28_w = position_16_w,
		position_29_w = position_16_w,
		position_2_w = 6'b001010,
		position_30_w = position_16_w,
		position_31_w = position_16_w,
		position_32_w = 6'b000110,
		position_33_w = position_32_w,
		position_34_w = position_32_w,
		position_35_w = position_32_w,
		position_36_w = position_32_w,
		position_37_w = position_32_w,
		position_38_w = position_32_w,
		position_39_w = position_32_w,
		position_3_w = position_2_w,
		position_40_w = position_32_w,
		position_41_w = position_32_w,
		position_42_w = position_32_w,
		position_43_w = position_32_w,
		position_44_w = position_32_w,
		position_45_w = position_32_w,
		position_46_w = position_32_w,
		position_47_w = position_32_w,
		position_48_w = position_32_w,
		position_49_w = position_32_w,
		position_4_w = 6'b001001,
		position_50_w = position_32_w,
		position_51_w = position_32_w,
		position_52_w = position_32_w,
		position_53_w = position_32_w,
		position_54_w = position_32_w,
		position_55_w = position_32_w,
		position_56_w = position_32_w,
		position_57_w = position_32_w,
		position_58_w = position_32_w,
		position_59_w = position_32_w,
		position_5_w = position_4_w,
		position_60_w = position_32_w,
		position_61_w = position_32_w,
		position_62_w = position_32_w,
		position_63_w = position_32_w,
		position_6_w = position_4_w,
		position_7_w = position_4_w,
		position_8_w = 6'b001000,
		position_9_w = position_8_w;
endmodule //ip_atan_altfp_atan_pos52_ql8


//altfp_atan_pos52 CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone III" start=12 ingroup position
//VERSION_BEGIN 13.1 cbx_altfp_atan 2013:10:23:18:05:48:SJ cbx_altpriority_encoder 2013:10:23:18:05:48:SJ cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_lpm_clshift 2013:10:23:18:05:48:SJ cbx_lpm_mult 2013:10:23:18:05:48:SJ cbx_lpm_mux 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END

//synthesis_resources = lpm_mux 1 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ip_atan_altfp_atan_pos52_7n8
	( 
	ingroup,
	position) ;
	input   [5:0]  ingroup;
	output   [5:0]  position;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [5:0]  ingroup;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [5:0]   wire_mux3_result;
	wire  [5:0]  position_0_w;
	wire  [5:0]  position_10_w;
	wire  [5:0]  position_11_w;
	wire  [5:0]  position_12_w;
	wire  [5:0]  position_13_w;
	wire  [5:0]  position_14_w;
	wire  [5:0]  position_15_w;
	wire  [5:0]  position_16_w;
	wire  [5:0]  position_17_w;
	wire  [5:0]  position_18_w;
	wire  [5:0]  position_19_w;
	wire  [5:0]  position_1_w;
	wire  [5:0]  position_20_w;
	wire  [5:0]  position_21_w;
	wire  [5:0]  position_22_w;
	wire  [5:0]  position_23_w;
	wire  [5:0]  position_24_w;
	wire  [5:0]  position_25_w;
	wire  [5:0]  position_26_w;
	wire  [5:0]  position_27_w;
	wire  [5:0]  position_28_w;
	wire  [5:0]  position_29_w;
	wire  [5:0]  position_2_w;
	wire  [5:0]  position_30_w;
	wire  [5:0]  position_31_w;
	wire  [5:0]  position_32_w;
	wire  [5:0]  position_33_w;
	wire  [5:0]  position_34_w;
	wire  [5:0]  position_35_w;
	wire  [5:0]  position_36_w;
	wire  [5:0]  position_37_w;
	wire  [5:0]  position_38_w;
	wire  [5:0]  position_39_w;
	wire  [5:0]  position_3_w;
	wire  [5:0]  position_40_w;
	wire  [5:0]  position_41_w;
	wire  [5:0]  position_42_w;
	wire  [5:0]  position_43_w;
	wire  [5:0]  position_44_w;
	wire  [5:0]  position_45_w;
	wire  [5:0]  position_46_w;
	wire  [5:0]  position_47_w;
	wire  [5:0]  position_48_w;
	wire  [5:0]  position_49_w;
	wire  [5:0]  position_4_w;
	wire  [5:0]  position_50_w;
	wire  [5:0]  position_51_w;
	wire  [5:0]  position_52_w;
	wire  [5:0]  position_53_w;
	wire  [5:0]  position_54_w;
	wire  [5:0]  position_55_w;
	wire  [5:0]  position_56_w;
	wire  [5:0]  position_57_w;
	wire  [5:0]  position_58_w;
	wire  [5:0]  position_59_w;
	wire  [5:0]  position_5_w;
	wire  [5:0]  position_60_w;
	wire  [5:0]  position_61_w;
	wire  [5:0]  position_62_w;
	wire  [5:0]  position_63_w;
	wire  [5:0]  position_6_w;
	wire  [5:0]  position_7_w;
	wire  [5:0]  position_8_w;
	wire  [5:0]  position_9_w;

	lpm_mux   mux3
	( 
	.data({position_63_w, position_62_w, position_61_w, position_60_w, position_59_w, position_58_w, position_57_w, position_56_w, position_55_w, position_54_w, position_53_w, position_52_w, position_51_w, position_50_w, position_49_w, position_48_w, position_47_w, position_46_w, position_45_w, position_44_w, position_43_w, position_42_w, position_41_w, position_40_w, position_39_w, position_38_w, position_37_w, position_36_w, position_35_w, position_34_w, position_33_w, position_32_w, position_31_w, position_30_w, position_29_w, position_28_w, position_27_w, position_26_w, position_25_w, position_24_w, position_23_w, position_22_w, position_21_w, position_20_w, position_19_w, position_18_w, position_17_w, position_16_w, position_15_w, position_14_w, position_13_w, position_12_w, position_11_w, position_10_w, position_9_w, position_8_w, position_7_w, position_6_w, position_5_w, position_4_w, position_3_w, position_2_w, position_1_w, position_0_w}),
	.result(wire_mux3_result),
	.sel(ingroup)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		mux3.lpm_size = 64,
		mux3.lpm_width = 6,
		mux3.lpm_widths = 6,
		mux3.lpm_type = "lpm_mux";
	assign
		position = wire_mux3_result,
		position_0_w = {6{1'b0}},
		position_10_w = position_8_w,
		position_11_w = position_8_w,
		position_12_w = position_8_w,
		position_13_w = position_8_w,
		position_14_w = position_8_w,
		position_15_w = position_8_w,
		position_16_w = 6'b001101,
		position_17_w = position_16_w,
		position_18_w = position_16_w,
		position_19_w = position_16_w,
		position_1_w = 6'b010001,
		position_20_w = position_16_w,
		position_21_w = position_16_w,
		position_22_w = position_16_w,
		position_23_w = position_16_w,
		position_24_w = position_16_w,
		position_25_w = position_16_w,
		position_26_w = position_16_w,
		position_27_w = position_16_w,
		position_28_w = position_16_w,
		position_29_w = position_16_w,
		position_2_w = 6'b010000,
		position_30_w = position_16_w,
		position_31_w = position_16_w,
		position_32_w = 6'b001100,
		position_33_w = position_32_w,
		position_34_w = position_32_w,
		position_35_w = position_32_w,
		position_36_w = position_32_w,
		position_37_w = position_32_w,
		position_38_w = position_32_w,
		position_39_w = position_32_w,
		position_3_w = position_2_w,
		position_40_w = position_32_w,
		position_41_w = position_32_w,
		position_42_w = position_32_w,
		position_43_w = position_32_w,
		position_44_w = position_32_w,
		position_45_w = position_32_w,
		position_46_w = position_32_w,
		position_47_w = position_32_w,
		position_48_w = position_32_w,
		position_49_w = position_32_w,
		position_4_w = 6'b001111,
		position_50_w = position_32_w,
		position_51_w = position_32_w,
		position_52_w = position_32_w,
		position_53_w = position_32_w,
		position_54_w = position_32_w,
		position_55_w = position_32_w,
		position_56_w = position_32_w,
		position_57_w = position_32_w,
		position_58_w = position_32_w,
		position_59_w = position_32_w,
		position_5_w = position_4_w,
		position_60_w = position_32_w,
		position_61_w = position_32_w,
		position_62_w = position_32_w,
		position_63_w = position_32_w,
		position_6_w = position_4_w,
		position_7_w = position_4_w,
		position_8_w = 6'b001110,
		position_9_w = position_8_w;
endmodule //ip_atan_altfp_atan_pos52_7n8


//altfp_atan_pos52 CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone III" start=18 ingroup position
//VERSION_BEGIN 13.1 cbx_altfp_atan 2013:10:23:18:05:48:SJ cbx_altpriority_encoder 2013:10:23:18:05:48:SJ cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_lpm_clshift 2013:10:23:18:05:48:SJ cbx_lpm_mult 2013:10:23:18:05:48:SJ cbx_lpm_mux 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END

//synthesis_resources = lpm_mux 1 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ip_atan_altfp_atan_pos52_dn8
	( 
	ingroup,
	position) ;
	input   [5:0]  ingroup;
	output   [5:0]  position;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [5:0]  ingroup;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [5:0]   wire_mux4_result;
	wire  [5:0]  position_0_w;
	wire  [5:0]  position_10_w;
	wire  [5:0]  position_11_w;
	wire  [5:0]  position_12_w;
	wire  [5:0]  position_13_w;
	wire  [5:0]  position_14_w;
	wire  [5:0]  position_15_w;
	wire  [5:0]  position_16_w;
	wire  [5:0]  position_17_w;
	wire  [5:0]  position_18_w;
	wire  [5:0]  position_19_w;
	wire  [5:0]  position_1_w;
	wire  [5:0]  position_20_w;
	wire  [5:0]  position_21_w;
	wire  [5:0]  position_22_w;
	wire  [5:0]  position_23_w;
	wire  [5:0]  position_24_w;
	wire  [5:0]  position_25_w;
	wire  [5:0]  position_26_w;
	wire  [5:0]  position_27_w;
	wire  [5:0]  position_28_w;
	wire  [5:0]  position_29_w;
	wire  [5:0]  position_2_w;
	wire  [5:0]  position_30_w;
	wire  [5:0]  position_31_w;
	wire  [5:0]  position_32_w;
	wire  [5:0]  position_33_w;
	wire  [5:0]  position_34_w;
	wire  [5:0]  position_35_w;
	wire  [5:0]  position_36_w;
	wire  [5:0]  position_37_w;
	wire  [5:0]  position_38_w;
	wire  [5:0]  position_39_w;
	wire  [5:0]  position_3_w;
	wire  [5:0]  position_40_w;
	wire  [5:0]  position_41_w;
	wire  [5:0]  position_42_w;
	wire  [5:0]  position_43_w;
	wire  [5:0]  position_44_w;
	wire  [5:0]  position_45_w;
	wire  [5:0]  position_46_w;
	wire  [5:0]  position_47_w;
	wire  [5:0]  position_48_w;
	wire  [5:0]  position_49_w;
	wire  [5:0]  position_4_w;
	wire  [5:0]  position_50_w;
	wire  [5:0]  position_51_w;
	wire  [5:0]  position_52_w;
	wire  [5:0]  position_53_w;
	wire  [5:0]  position_54_w;
	wire  [5:0]  position_55_w;
	wire  [5:0]  position_56_w;
	wire  [5:0]  position_57_w;
	wire  [5:0]  position_58_w;
	wire  [5:0]  position_59_w;
	wire  [5:0]  position_5_w;
	wire  [5:0]  position_60_w;
	wire  [5:0]  position_61_w;
	wire  [5:0]  position_62_w;
	wire  [5:0]  position_63_w;
	wire  [5:0]  position_6_w;
	wire  [5:0]  position_7_w;
	wire  [5:0]  position_8_w;
	wire  [5:0]  position_9_w;

	lpm_mux   mux4
	( 
	.data({position_63_w, position_62_w, position_61_w, position_60_w, position_59_w, position_58_w, position_57_w, position_56_w, position_55_w, position_54_w, position_53_w, position_52_w, position_51_w, position_50_w, position_49_w, position_48_w, position_47_w, position_46_w, position_45_w, position_44_w, position_43_w, position_42_w, position_41_w, position_40_w, position_39_w, position_38_w, position_37_w, position_36_w, position_35_w, position_34_w, position_33_w, position_32_w, position_31_w, position_30_w, position_29_w, position_28_w, position_27_w, position_26_w, position_25_w, position_24_w, position_23_w, position_22_w, position_21_w, position_20_w, position_19_w, position_18_w, position_17_w, position_16_w, position_15_w, position_14_w, position_13_w, position_12_w, position_11_w, position_10_w, position_9_w, position_8_w, position_7_w, position_6_w, position_5_w, position_4_w, position_3_w, position_2_w, position_1_w, position_0_w}),
	.result(wire_mux4_result),
	.sel(ingroup)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		mux4.lpm_size = 64,
		mux4.lpm_width = 6,
		mux4.lpm_widths = 6,
		mux4.lpm_type = "lpm_mux";
	assign
		position = wire_mux4_result,
		position_0_w = {6{1'b0}},
		position_10_w = position_8_w,
		position_11_w = position_8_w,
		position_12_w = position_8_w,
		position_13_w = position_8_w,
		position_14_w = position_8_w,
		position_15_w = position_8_w,
		position_16_w = 6'b010011,
		position_17_w = position_16_w,
		position_18_w = position_16_w,
		position_19_w = position_16_w,
		position_1_w = 6'b010111,
		position_20_w = position_16_w,
		position_21_w = position_16_w,
		position_22_w = position_16_w,
		position_23_w = position_16_w,
		position_24_w = position_16_w,
		position_25_w = position_16_w,
		position_26_w = position_16_w,
		position_27_w = position_16_w,
		position_28_w = position_16_w,
		position_29_w = position_16_w,
		position_2_w = 6'b010110,
		position_30_w = position_16_w,
		position_31_w = position_16_w,
		position_32_w = 6'b010010,
		position_33_w = position_32_w,
		position_34_w = position_32_w,
		position_35_w = position_32_w,
		position_36_w = position_32_w,
		position_37_w = position_32_w,
		position_38_w = position_32_w,
		position_39_w = position_32_w,
		position_3_w = position_2_w,
		position_40_w = position_32_w,
		position_41_w = position_32_w,
		position_42_w = position_32_w,
		position_43_w = position_32_w,
		position_44_w = position_32_w,
		position_45_w = position_32_w,
		position_46_w = position_32_w,
		position_47_w = position_32_w,
		position_48_w = position_32_w,
		position_49_w = position_32_w,
		position_4_w = 6'b010101,
		position_50_w = position_32_w,
		position_51_w = position_32_w,
		position_52_w = position_32_w,
		position_53_w = position_32_w,
		position_54_w = position_32_w,
		position_55_w = position_32_w,
		position_56_w = position_32_w,
		position_57_w = position_32_w,
		position_58_w = position_32_w,
		position_59_w = position_32_w,
		position_5_w = position_4_w,
		position_60_w = position_32_w,
		position_61_w = position_32_w,
		position_62_w = position_32_w,
		position_63_w = position_32_w,
		position_6_w = position_4_w,
		position_7_w = position_4_w,
		position_8_w = 6'b010100,
		position_9_w = position_8_w;
endmodule //ip_atan_altfp_atan_pos52_dn8


//altfp_atan_pos52 CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone III" start=24 ingroup position
//VERSION_BEGIN 13.1 cbx_altfp_atan 2013:10:23:18:05:48:SJ cbx_altpriority_encoder 2013:10:23:18:05:48:SJ cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_lpm_clshift 2013:10:23:18:05:48:SJ cbx_lpm_mult 2013:10:23:18:05:48:SJ cbx_lpm_mux 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END

//synthesis_resources = lpm_mux 1 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ip_atan_altfp_atan_pos52_an8
	( 
	ingroup,
	position) ;
	input   [5:0]  ingroup;
	output   [5:0]  position;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [5:0]  ingroup;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [5:0]   wire_mux5_result;
	wire  [5:0]  position_0_w;
	wire  [5:0]  position_10_w;
	wire  [5:0]  position_11_w;
	wire  [5:0]  position_12_w;
	wire  [5:0]  position_13_w;
	wire  [5:0]  position_14_w;
	wire  [5:0]  position_15_w;
	wire  [5:0]  position_16_w;
	wire  [5:0]  position_17_w;
	wire  [5:0]  position_18_w;
	wire  [5:0]  position_19_w;
	wire  [5:0]  position_1_w;
	wire  [5:0]  position_20_w;
	wire  [5:0]  position_21_w;
	wire  [5:0]  position_22_w;
	wire  [5:0]  position_23_w;
	wire  [5:0]  position_24_w;
	wire  [5:0]  position_25_w;
	wire  [5:0]  position_26_w;
	wire  [5:0]  position_27_w;
	wire  [5:0]  position_28_w;
	wire  [5:0]  position_29_w;
	wire  [5:0]  position_2_w;
	wire  [5:0]  position_30_w;
	wire  [5:0]  position_31_w;
	wire  [5:0]  position_32_w;
	wire  [5:0]  position_33_w;
	wire  [5:0]  position_34_w;
	wire  [5:0]  position_35_w;
	wire  [5:0]  position_36_w;
	wire  [5:0]  position_37_w;
	wire  [5:0]  position_38_w;
	wire  [5:0]  position_39_w;
	wire  [5:0]  position_3_w;
	wire  [5:0]  position_40_w;
	wire  [5:0]  position_41_w;
	wire  [5:0]  position_42_w;
	wire  [5:0]  position_43_w;
	wire  [5:0]  position_44_w;
	wire  [5:0]  position_45_w;
	wire  [5:0]  position_46_w;
	wire  [5:0]  position_47_w;
	wire  [5:0]  position_48_w;
	wire  [5:0]  position_49_w;
	wire  [5:0]  position_4_w;
	wire  [5:0]  position_50_w;
	wire  [5:0]  position_51_w;
	wire  [5:0]  position_52_w;
	wire  [5:0]  position_53_w;
	wire  [5:0]  position_54_w;
	wire  [5:0]  position_55_w;
	wire  [5:0]  position_56_w;
	wire  [5:0]  position_57_w;
	wire  [5:0]  position_58_w;
	wire  [5:0]  position_59_w;
	wire  [5:0]  position_5_w;
	wire  [5:0]  position_60_w;
	wire  [5:0]  position_61_w;
	wire  [5:0]  position_62_w;
	wire  [5:0]  position_63_w;
	wire  [5:0]  position_6_w;
	wire  [5:0]  position_7_w;
	wire  [5:0]  position_8_w;
	wire  [5:0]  position_9_w;

	lpm_mux   mux5
	( 
	.data({position_63_w, position_62_w, position_61_w, position_60_w, position_59_w, position_58_w, position_57_w, position_56_w, position_55_w, position_54_w, position_53_w, position_52_w, position_51_w, position_50_w, position_49_w, position_48_w, position_47_w, position_46_w, position_45_w, position_44_w, position_43_w, position_42_w, position_41_w, position_40_w, position_39_w, position_38_w, position_37_w, position_36_w, position_35_w, position_34_w, position_33_w, position_32_w, position_31_w, position_30_w, position_29_w, position_28_w, position_27_w, position_26_w, position_25_w, position_24_w, position_23_w, position_22_w, position_21_w, position_20_w, position_19_w, position_18_w, position_17_w, position_16_w, position_15_w, position_14_w, position_13_w, position_12_w, position_11_w, position_10_w, position_9_w, position_8_w, position_7_w, position_6_w, position_5_w, position_4_w, position_3_w, position_2_w, position_1_w, position_0_w}),
	.result(wire_mux5_result),
	.sel(ingroup)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		mux5.lpm_size = 64,
		mux5.lpm_width = 6,
		mux5.lpm_widths = 6,
		mux5.lpm_type = "lpm_mux";
	assign
		position = wire_mux5_result,
		position_0_w = {6{1'b0}},
		position_10_w = position_8_w,
		position_11_w = position_8_w,
		position_12_w = position_8_w,
		position_13_w = position_8_w,
		position_14_w = position_8_w,
		position_15_w = position_8_w,
		position_16_w = 6'b011001,
		position_17_w = position_16_w,
		position_18_w = position_16_w,
		position_19_w = position_16_w,
		position_1_w = 6'b011101,
		position_20_w = position_16_w,
		position_21_w = position_16_w,
		position_22_w = position_16_w,
		position_23_w = position_16_w,
		position_24_w = position_16_w,
		position_25_w = position_16_w,
		position_26_w = position_16_w,
		position_27_w = position_16_w,
		position_28_w = position_16_w,
		position_29_w = position_16_w,
		position_2_w = 6'b011100,
		position_30_w = position_16_w,
		position_31_w = position_16_w,
		position_32_w = 6'b011000,
		position_33_w = position_32_w,
		position_34_w = position_32_w,
		position_35_w = position_32_w,
		position_36_w = position_32_w,
		position_37_w = position_32_w,
		position_38_w = position_32_w,
		position_39_w = position_32_w,
		position_3_w = position_2_w,
		position_40_w = position_32_w,
		position_41_w = position_32_w,
		position_42_w = position_32_w,
		position_43_w = position_32_w,
		position_44_w = position_32_w,
		position_45_w = position_32_w,
		position_46_w = position_32_w,
		position_47_w = position_32_w,
		position_48_w = position_32_w,
		position_49_w = position_32_w,
		position_4_w = 6'b011011,
		position_50_w = position_32_w,
		position_51_w = position_32_w,
		position_52_w = position_32_w,
		position_53_w = position_32_w,
		position_54_w = position_32_w,
		position_55_w = position_32_w,
		position_56_w = position_32_w,
		position_57_w = position_32_w,
		position_58_w = position_32_w,
		position_59_w = position_32_w,
		position_5_w = position_4_w,
		position_60_w = position_32_w,
		position_61_w = position_32_w,
		position_62_w = position_32_w,
		position_63_w = position_32_w,
		position_6_w = position_4_w,
		position_7_w = position_4_w,
		position_8_w = 6'b011010,
		position_9_w = position_8_w;
endmodule //ip_atan_altfp_atan_pos52_an8


//altfp_atan_pos52 CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone III" start=30 ingroup position
//VERSION_BEGIN 13.1 cbx_altfp_atan 2013:10:23:18:05:48:SJ cbx_altpriority_encoder 2013:10:23:18:05:48:SJ cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_lpm_clshift 2013:10:23:18:05:48:SJ cbx_lpm_mult 2013:10:23:18:05:48:SJ cbx_lpm_mux 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END

//synthesis_resources = lpm_mux 1 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ip_atan_altfp_atan_pos52_8n8
	( 
	ingroup,
	position) ;
	input   [5:0]  ingroup;
	output   [5:0]  position;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [5:0]  ingroup;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [5:0]   wire_mux6_result;
	wire  [5:0]  position_0_w;
	wire  [5:0]  position_10_w;
	wire  [5:0]  position_11_w;
	wire  [5:0]  position_12_w;
	wire  [5:0]  position_13_w;
	wire  [5:0]  position_14_w;
	wire  [5:0]  position_15_w;
	wire  [5:0]  position_16_w;
	wire  [5:0]  position_17_w;
	wire  [5:0]  position_18_w;
	wire  [5:0]  position_19_w;
	wire  [5:0]  position_1_w;
	wire  [5:0]  position_20_w;
	wire  [5:0]  position_21_w;
	wire  [5:0]  position_22_w;
	wire  [5:0]  position_23_w;
	wire  [5:0]  position_24_w;
	wire  [5:0]  position_25_w;
	wire  [5:0]  position_26_w;
	wire  [5:0]  position_27_w;
	wire  [5:0]  position_28_w;
	wire  [5:0]  position_29_w;
	wire  [5:0]  position_2_w;
	wire  [5:0]  position_30_w;
	wire  [5:0]  position_31_w;
	wire  [5:0]  position_32_w;
	wire  [5:0]  position_33_w;
	wire  [5:0]  position_34_w;
	wire  [5:0]  position_35_w;
	wire  [5:0]  position_36_w;
	wire  [5:0]  position_37_w;
	wire  [5:0]  position_38_w;
	wire  [5:0]  position_39_w;
	wire  [5:0]  position_3_w;
	wire  [5:0]  position_40_w;
	wire  [5:0]  position_41_w;
	wire  [5:0]  position_42_w;
	wire  [5:0]  position_43_w;
	wire  [5:0]  position_44_w;
	wire  [5:0]  position_45_w;
	wire  [5:0]  position_46_w;
	wire  [5:0]  position_47_w;
	wire  [5:0]  position_48_w;
	wire  [5:0]  position_49_w;
	wire  [5:0]  position_4_w;
	wire  [5:0]  position_50_w;
	wire  [5:0]  position_51_w;
	wire  [5:0]  position_52_w;
	wire  [5:0]  position_53_w;
	wire  [5:0]  position_54_w;
	wire  [5:0]  position_55_w;
	wire  [5:0]  position_56_w;
	wire  [5:0]  position_57_w;
	wire  [5:0]  position_58_w;
	wire  [5:0]  position_59_w;
	wire  [5:0]  position_5_w;
	wire  [5:0]  position_60_w;
	wire  [5:0]  position_61_w;
	wire  [5:0]  position_62_w;
	wire  [5:0]  position_63_w;
	wire  [5:0]  position_6_w;
	wire  [5:0]  position_7_w;
	wire  [5:0]  position_8_w;
	wire  [5:0]  position_9_w;

	lpm_mux   mux6
	( 
	.data({position_63_w, position_62_w, position_61_w, position_60_w, position_59_w, position_58_w, position_57_w, position_56_w, position_55_w, position_54_w, position_53_w, position_52_w, position_51_w, position_50_w, position_49_w, position_48_w, position_47_w, position_46_w, position_45_w, position_44_w, position_43_w, position_42_w, position_41_w, position_40_w, position_39_w, position_38_w, position_37_w, position_36_w, position_35_w, position_34_w, position_33_w, position_32_w, position_31_w, position_30_w, position_29_w, position_28_w, position_27_w, position_26_w, position_25_w, position_24_w, position_23_w, position_22_w, position_21_w, position_20_w, position_19_w, position_18_w, position_17_w, position_16_w, position_15_w, position_14_w, position_13_w, position_12_w, position_11_w, position_10_w, position_9_w, position_8_w, position_7_w, position_6_w, position_5_w, position_4_w, position_3_w, position_2_w, position_1_w, position_0_w}),
	.result(wire_mux6_result),
	.sel(ingroup)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		mux6.lpm_size = 64,
		mux6.lpm_width = 6,
		mux6.lpm_widths = 6,
		mux6.lpm_type = "lpm_mux";
	assign
		position = wire_mux6_result,
		position_0_w = {6{1'b0}},
		position_10_w = position_8_w,
		position_11_w = position_8_w,
		position_12_w = position_8_w,
		position_13_w = position_8_w,
		position_14_w = position_8_w,
		position_15_w = position_8_w,
		position_16_w = 6'b011111,
		position_17_w = position_16_w,
		position_18_w = position_16_w,
		position_19_w = position_16_w,
		position_1_w = 6'b100011,
		position_20_w = position_16_w,
		position_21_w = position_16_w,
		position_22_w = position_16_w,
		position_23_w = position_16_w,
		position_24_w = position_16_w,
		position_25_w = position_16_w,
		position_26_w = position_16_w,
		position_27_w = position_16_w,
		position_28_w = position_16_w,
		position_29_w = position_16_w,
		position_2_w = 6'b100010,
		position_30_w = position_16_w,
		position_31_w = position_16_w,
		position_32_w = 6'b011110,
		position_33_w = position_32_w,
		position_34_w = position_32_w,
		position_35_w = position_32_w,
		position_36_w = position_32_w,
		position_37_w = position_32_w,
		position_38_w = position_32_w,
		position_39_w = position_32_w,
		position_3_w = position_2_w,
		position_40_w = position_32_w,
		position_41_w = position_32_w,
		position_42_w = position_32_w,
		position_43_w = position_32_w,
		position_44_w = position_32_w,
		position_45_w = position_32_w,
		position_46_w = position_32_w,
		position_47_w = position_32_w,
		position_48_w = position_32_w,
		position_49_w = position_32_w,
		position_4_w = 6'b100001,
		position_50_w = position_32_w,
		position_51_w = position_32_w,
		position_52_w = position_32_w,
		position_53_w = position_32_w,
		position_54_w = position_32_w,
		position_55_w = position_32_w,
		position_56_w = position_32_w,
		position_57_w = position_32_w,
		position_58_w = position_32_w,
		position_59_w = position_32_w,
		position_5_w = position_4_w,
		position_60_w = position_32_w,
		position_61_w = position_32_w,
		position_62_w = position_32_w,
		position_63_w = position_32_w,
		position_6_w = position_4_w,
		position_7_w = position_4_w,
		position_8_w = 6'b100000,
		position_9_w = position_8_w;
endmodule //ip_atan_altfp_atan_pos52_8n8

//synthesis_resources = lpm_mux 6 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ip_atan_altfp_atan_clz36_dt7
	( 
	leading,
	mantissa) ;
	output   [5:0]  leading;
	input   [35:0]  mantissa;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [35:0]  mantissa;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [5:0]   wire_pos52_0_position;
	wire  [5:0]   wire_pos52_1_position;
	wire  [5:0]   wire_pos52_2_position;
	wire  [5:0]   wire_pos52_3_position;
	wire  [5:0]   wire_pos52_4_position;
	wire  [5:0]   wire_pos52_5_position;
	wire  [5:0]  firstzero_w;
	wire  [5:0]  position_0_w;
	wire  [5:0]  position_1_w;
	wire  [5:0]  position_2_w;
	wire  [5:0]  position_3_w;
	wire  [5:0]  position_4_w;
	wire  [5:0]  position_5_w;
	wire  [5:0]  positionmux_0_w;
	wire  [5:0]  positionmux_1_w;
	wire  [5:0]  positionmux_2_w;
	wire  [5:0]  positionmux_3_w;
	wire  [5:0]  positionmux_4_w;
	wire  [5:0]  positionmux_5_w;
	wire  [5:0]  zerogroup_w;

	ip_atan_altfp_atan_pos52_kl8   pos52_0
	( 
	.ingroup(mantissa[35:30]),
	.position(wire_pos52_0_position));
	ip_atan_altfp_atan_pos52_ql8   pos52_1
	( 
	.ingroup(mantissa[29:24]),
	.position(wire_pos52_1_position));
	ip_atan_altfp_atan_pos52_7n8   pos52_2
	( 
	.ingroup(mantissa[23:18]),
	.position(wire_pos52_2_position));
	ip_atan_altfp_atan_pos52_dn8   pos52_3
	( 
	.ingroup(mantissa[17:12]),
	.position(wire_pos52_3_position));
	ip_atan_altfp_atan_pos52_an8   pos52_4
	( 
	.ingroup(mantissa[11:6]),
	.position(wire_pos52_4_position));
	ip_atan_altfp_atan_pos52_8n8   pos52_5
	( 
	.ingroup(mantissa[5:0]),
	.position(wire_pos52_5_position));
	assign
		firstzero_w = {((((((~ zerogroup_w[0]) & (~ zerogroup_w[1])) & (~ zerogroup_w[2])) & (~ zerogroup_w[3])) & (~ zerogroup_w[4])) & zerogroup_w[5]), (((((~ zerogroup_w[0]) & (~ zerogroup_w[1])) & (~ zerogroup_w[2])) & (~ zerogroup_w[3])) & zerogroup_w[4]), ((((~ zerogroup_w[0]) & (~ zerogroup_w[1])) & (~ zerogroup_w[2])) & zerogroup_w[3]), (((~ zerogroup_w[0]) & (~ zerogroup_w[1])) & zerogroup_w[2]), ((~ zerogroup_w[0]) & zerogroup_w[1]), zerogroup_w[0]},
		leading = positionmux_5_w,
		position_0_w = wire_pos52_0_position,
		position_1_w = wire_pos52_1_position,
		position_2_w = wire_pos52_2_position,
		position_3_w = wire_pos52_3_position,
		position_4_w = wire_pos52_4_position,
		position_5_w = wire_pos52_5_position,
		positionmux_0_w = {(position_0_w[5] & firstzero_w[0]), (position_0_w[4] & firstzero_w[0]), (position_0_w[3] & firstzero_w[0]), (position_0_w[2] & firstzero_w[0]), (position_0_w[1] & firstzero_w[0]), (position_0_w[0] & firstzero_w[0])},
		positionmux_1_w = {(positionmux_0_w[5] | (position_1_w[5] & firstzero_w[1])), (positionmux_0_w[4] | (position_1_w[4] & firstzero_w[1])), (positionmux_0_w[3] | (position_1_w[3] & firstzero_w[1])), (positionmux_0_w[2] | (position_1_w[2] & firstzero_w[1])), (positionmux_0_w[1] | (position_1_w[1] & firstzero_w[1])), (positionmux_0_w[0] | (position_1_w[0] & firstzero_w[1]))},
		positionmux_2_w = {(positionmux_1_w[5] | (position_2_w[5] & firstzero_w[2])), (positionmux_1_w[4] | (position_2_w[4] & firstzero_w[2])), (positionmux_1_w[3] | (position_2_w[3] & firstzero_w[2])), (positionmux_1_w[2] | (position_2_w[2] & firstzero_w[2])), (positionmux_1_w[1] | (position_2_w[1] & firstzero_w[2])), (positionmux_1_w[0] | (position_2_w[0] & firstzero_w[2]))},
		positionmux_3_w = {(positionmux_2_w[5] | (position_3_w[5] & firstzero_w[3])), (positionmux_2_w[4] | (position_3_w[4] & firstzero_w[3])), (positionmux_2_w[3] | (position_3_w[3] & firstzero_w[3])), (positionmux_2_w[2] | (position_3_w[2] & firstzero_w[3])), (positionmux_2_w[1] | (position_3_w[1] & firstzero_w[3])), (positionmux_2_w[0] | (position_3_w[0] & firstzero_w[3]))},
		positionmux_4_w = {(positionmux_3_w[5] | (position_4_w[5] & firstzero_w[4])), (positionmux_3_w[4] | (position_4_w[4] & firstzero_w[4])), (positionmux_3_w[3] | (position_4_w[3] & firstzero_w[4])), (positionmux_3_w[2] | (position_4_w[2] & firstzero_w[4])), (positionmux_3_w[1] | (position_4_w[1] & firstzero_w[4])), (positionmux_3_w[0] | (position_4_w[0] & firstzero_w[4]))},
		positionmux_5_w = {(positionmux_4_w[5] | (position_5_w[5] & firstzero_w[5])), (positionmux_4_w[4] | (position_5_w[4] & firstzero_w[5])), (positionmux_4_w[3] | (position_5_w[3] & firstzero_w[5])), (positionmux_4_w[2] | (position_5_w[2] & firstzero_w[5])), (positionmux_4_w[1] | (position_5_w[1] & firstzero_w[5])), (positionmux_4_w[0] | (position_5_w[0] & firstzero_w[5]))},
		zerogroup_w = {(((((mantissa[5] | mantissa[4]) | mantissa[3]) | mantissa[2]) | mantissa[1]) | mantissa[0]), (((((mantissa[11] | mantissa[10]) | mantissa[9]) | mantissa[8]) | mantissa[7]) | mantissa[6]), (((((mantissa[17] | mantissa[16]) | mantissa[15]) | mantissa[14]) | mantissa[13]) | mantissa[12]), (((((mantissa[23] | mantissa[22]) | mantissa[21]) | mantissa[20]) | mantissa[19]) | mantissa[18]), (((((mantissa[29] | mantissa[28]) | mantissa[27]) | mantissa[26]) | mantissa[25]) | mantissa[24]), (((((mantissa[35] | mantissa[34]) | mantissa[33]) | mantissa[32]) | mantissa[31]) | mantissa[30])};
endmodule //ip_atan_altfp_atan_clz36_dt7


//altfp_atan_del CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone III" pipes=15 width=36 aa aclr cc clk_en clock
//VERSION_BEGIN 13.1 cbx_altfp_atan 2013:10:23:18:05:48:SJ cbx_altpriority_encoder 2013:10:23:18:05:48:SJ cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_lpm_clshift 2013:10:23:18:05:48:SJ cbx_lpm_mult 2013:10:23:18:05:48:SJ cbx_lpm_mux 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END

//synthesis_resources = reg 540 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ip_atan_altfp_atan_del_8m9
	( 
	aa,
	aclr,
	cc,
	clk_en,
	clock) ;
	input   [35:0]  aa;
	input   aclr;
	output   [35:0]  cc;
	input   clk_en;
	input   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [35:0]  aa;
	tri0   aclr;
	tri1   clk_en;
	tri0   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[35:0]	input_delay_ff_0;
	reg	[35:0]	input_delay_ff_1;
	reg	[35:0]	input_delay_ff_10;
	reg	[35:0]	input_delay_ff_11;
	reg	[35:0]	input_delay_ff_12;
	reg	[35:0]	input_delay_ff_13;
	reg	[35:0]	input_delay_ff_14;
	reg	[35:0]	input_delay_ff_2;
	reg	[35:0]	input_delay_ff_3;
	reg	[35:0]	input_delay_ff_4;
	reg	[35:0]	input_delay_ff_5;
	reg	[35:0]	input_delay_ff_6;
	reg	[35:0]	input_delay_ff_7;
	reg	[35:0]	input_delay_ff_8;
	reg	[35:0]	input_delay_ff_9;
	wire  [35:0]  input_number_delay_w;
	wire  [35:0]  input_number_w;

	// synopsys translate_off
	initial
		input_delay_ff_0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_0 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_0 <= input_number_w;
	// synopsys translate_off
	initial
		input_delay_ff_1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_1 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_1 <= input_delay_ff_0;
	// synopsys translate_off
	initial
		input_delay_ff_10 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_10 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_10 <= input_delay_ff_9;
	// synopsys translate_off
	initial
		input_delay_ff_11 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_11 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_11 <= input_delay_ff_10;
	// synopsys translate_off
	initial
		input_delay_ff_12 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_12 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_12 <= input_delay_ff_11;
	// synopsys translate_off
	initial
		input_delay_ff_13 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_13 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_13 <= input_delay_ff_12;
	// synopsys translate_off
	initial
		input_delay_ff_14 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_14 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_14 <= input_delay_ff_13;
	// synopsys translate_off
	initial
		input_delay_ff_2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_2 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_2 <= input_delay_ff_1;
	// synopsys translate_off
	initial
		input_delay_ff_3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_3 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_3 <= input_delay_ff_2;
	// synopsys translate_off
	initial
		input_delay_ff_4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_4 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_4 <= input_delay_ff_3;
	// synopsys translate_off
	initial
		input_delay_ff_5 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_5 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_5 <= input_delay_ff_4;
	// synopsys translate_off
	initial
		input_delay_ff_6 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_6 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_6 <= input_delay_ff_5;
	// synopsys translate_off
	initial
		input_delay_ff_7 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_7 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_7 <= input_delay_ff_6;
	// synopsys translate_off
	initial
		input_delay_ff_8 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_8 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_8 <= input_delay_ff_7;
	// synopsys translate_off
	initial
		input_delay_ff_9 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_9 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_9 <= input_delay_ff_8;
	assign
		cc = input_number_delay_w,
		input_number_delay_w = input_delay_ff_14,
		input_number_w = aa;
endmodule //ip_atan_altfp_atan_del_8m9


//altfp_atan_del CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone III" pipes=18 width=36 aa aclr cc clk_en clock
//VERSION_BEGIN 13.1 cbx_altfp_atan 2013:10:23:18:05:48:SJ cbx_altpriority_encoder 2013:10:23:18:05:48:SJ cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_lpm_clshift 2013:10:23:18:05:48:SJ cbx_lpm_mult 2013:10:23:18:05:48:SJ cbx_lpm_mux 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END

//synthesis_resources = reg 648 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ip_atan_altfp_atan_del_bm9
	( 
	aa,
	aclr,
	cc,
	clk_en,
	clock) ;
	input   [35:0]  aa;
	input   aclr;
	output   [35:0]  cc;
	input   clk_en;
	input   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [35:0]  aa;
	tri0   aclr;
	tri1   clk_en;
	tri0   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[35:0]	input_delay_ff_0;
	reg	[35:0]	input_delay_ff_1;
	reg	[35:0]	input_delay_ff_10;
	reg	[35:0]	input_delay_ff_11;
	reg	[35:0]	input_delay_ff_12;
	reg	[35:0]	input_delay_ff_13;
	reg	[35:0]	input_delay_ff_14;
	reg	[35:0]	input_delay_ff_15;
	reg	[35:0]	input_delay_ff_16;
	reg	[35:0]	input_delay_ff_17;
	reg	[35:0]	input_delay_ff_2;
	reg	[35:0]	input_delay_ff_3;
	reg	[35:0]	input_delay_ff_4;
	reg	[35:0]	input_delay_ff_5;
	reg	[35:0]	input_delay_ff_6;
	reg	[35:0]	input_delay_ff_7;
	reg	[35:0]	input_delay_ff_8;
	reg	[35:0]	input_delay_ff_9;
	wire  [35:0]  input_number_delay_w;
	wire  [35:0]  input_number_w;

	// synopsys translate_off
	initial
		input_delay_ff_0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_0 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_0 <= input_number_w;
	// synopsys translate_off
	initial
		input_delay_ff_1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_1 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_1 <= input_delay_ff_0;
	// synopsys translate_off
	initial
		input_delay_ff_10 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_10 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_10 <= input_delay_ff_9;
	// synopsys translate_off
	initial
		input_delay_ff_11 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_11 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_11 <= input_delay_ff_10;
	// synopsys translate_off
	initial
		input_delay_ff_12 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_12 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_12 <= input_delay_ff_11;
	// synopsys translate_off
	initial
		input_delay_ff_13 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_13 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_13 <= input_delay_ff_12;
	// synopsys translate_off
	initial
		input_delay_ff_14 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_14 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_14 <= input_delay_ff_13;
	// synopsys translate_off
	initial
		input_delay_ff_15 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_15 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_15 <= input_delay_ff_14;
	// synopsys translate_off
	initial
		input_delay_ff_16 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_16 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_16 <= input_delay_ff_15;
	// synopsys translate_off
	initial
		input_delay_ff_17 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_17 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_17 <= input_delay_ff_16;
	// synopsys translate_off
	initial
		input_delay_ff_2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_2 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_2 <= input_delay_ff_1;
	// synopsys translate_off
	initial
		input_delay_ff_3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_3 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_3 <= input_delay_ff_2;
	// synopsys translate_off
	initial
		input_delay_ff_4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_4 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_4 <= input_delay_ff_3;
	// synopsys translate_off
	initial
		input_delay_ff_5 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_5 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_5 <= input_delay_ff_4;
	// synopsys translate_off
	initial
		input_delay_ff_6 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_6 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_6 <= input_delay_ff_5;
	// synopsys translate_off
	initial
		input_delay_ff_7 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_7 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_7 <= input_delay_ff_6;
	// synopsys translate_off
	initial
		input_delay_ff_8 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_8 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_8 <= input_delay_ff_7;
	// synopsys translate_off
	initial
		input_delay_ff_9 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_9 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_9 <= input_delay_ff_8;
	assign
		cc = input_number_delay_w,
		input_number_delay_w = input_delay_ff_17,
		input_number_w = aa;
endmodule //ip_atan_altfp_atan_del_bm9


//altfp_atan_del CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone III" pipes=12 width=36 aa aclr cc clk_en clock
//VERSION_BEGIN 13.1 cbx_altfp_atan 2013:10:23:18:05:48:SJ cbx_altpriority_encoder 2013:10:23:18:05:48:SJ cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_lpm_clshift 2013:10:23:18:05:48:SJ cbx_lpm_mult 2013:10:23:18:05:48:SJ cbx_lpm_mux 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END

//synthesis_resources = reg 432 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ip_atan_altfp_atan_del_5m9
	( 
	aa,
	aclr,
	cc,
	clk_en,
	clock) ;
	input   [35:0]  aa;
	input   aclr;
	output   [35:0]  cc;
	input   clk_en;
	input   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [35:0]  aa;
	tri0   aclr;
	tri1   clk_en;
	tri0   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[35:0]	input_delay_ff_0;
	reg	[35:0]	input_delay_ff_1;
	reg	[35:0]	input_delay_ff_10;
	reg	[35:0]	input_delay_ff_11;
	reg	[35:0]	input_delay_ff_2;
	reg	[35:0]	input_delay_ff_3;
	reg	[35:0]	input_delay_ff_4;
	reg	[35:0]	input_delay_ff_5;
	reg	[35:0]	input_delay_ff_6;
	reg	[35:0]	input_delay_ff_7;
	reg	[35:0]	input_delay_ff_8;
	reg	[35:0]	input_delay_ff_9;
	wire  [35:0]  input_number_delay_w;
	wire  [35:0]  input_number_w;

	// synopsys translate_off
	initial
		input_delay_ff_0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_0 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_0 <= input_number_w;
	// synopsys translate_off
	initial
		input_delay_ff_1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_1 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_1 <= input_delay_ff_0;
	// synopsys translate_off
	initial
		input_delay_ff_10 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_10 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_10 <= input_delay_ff_9;
	// synopsys translate_off
	initial
		input_delay_ff_11 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_11 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_11 <= input_delay_ff_10;
	// synopsys translate_off
	initial
		input_delay_ff_2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_2 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_2 <= input_delay_ff_1;
	// synopsys translate_off
	initial
		input_delay_ff_3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_3 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_3 <= input_delay_ff_2;
	// synopsys translate_off
	initial
		input_delay_ff_4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_4 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_4 <= input_delay_ff_3;
	// synopsys translate_off
	initial
		input_delay_ff_5 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_5 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_5 <= input_delay_ff_4;
	// synopsys translate_off
	initial
		input_delay_ff_6 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_6 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_6 <= input_delay_ff_5;
	// synopsys translate_off
	initial
		input_delay_ff_7 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_7 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_7 <= input_delay_ff_6;
	// synopsys translate_off
	initial
		input_delay_ff_8 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_8 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_8 <= input_delay_ff_7;
	// synopsys translate_off
	initial
		input_delay_ff_9 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_9 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_9 <= input_delay_ff_8;
	assign
		cc = input_number_delay_w,
		input_number_delay_w = input_delay_ff_11,
		input_number_w = aa;
endmodule //ip_atan_altfp_atan_del_5m9


//altfp_atan_invcore CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone III" aclr clk_en clock divisor quotient
//VERSION_BEGIN 13.1 cbx_altfp_atan 2013:10:23:18:05:48:SJ cbx_altpriority_encoder 2013:10:23:18:05:48:SJ cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_lpm_clshift 2013:10:23:18:05:48:SJ cbx_lpm_mult 2013:10:23:18:05:48:SJ cbx_lpm_mux 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END


//altfp_atan_del CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone III" pipes=5 width=36 aa aclr cc clk_en clock
//VERSION_BEGIN 13.1 cbx_altfp_atan 2013:10:23:18:05:48:SJ cbx_altpriority_encoder 2013:10:23:18:05:48:SJ cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_lpm_clshift 2013:10:23:18:05:48:SJ cbx_lpm_mult 2013:10:23:18:05:48:SJ cbx_lpm_mux 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END

//synthesis_resources = reg 180 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ip_atan_altfp_atan_del_nk9
	( 
	aa,
	aclr,
	cc,
	clk_en,
	clock) ;
	input   [35:0]  aa;
	input   aclr;
	output   [35:0]  cc;
	input   clk_en;
	input   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [35:0]  aa;
	tri0   aclr;
	tri1   clk_en;
	tri0   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[35:0]	input_delay_ff_0;
	reg	[35:0]	input_delay_ff_1;
	reg	[35:0]	input_delay_ff_2;
	reg	[35:0]	input_delay_ff_3;
	reg	[35:0]	input_delay_ff_4;
	wire  [35:0]  input_number_delay_w;
	wire  [35:0]  input_number_w;

	// synopsys translate_off
	initial
		input_delay_ff_0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_0 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_0 <= input_number_w;
	// synopsys translate_off
	initial
		input_delay_ff_1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_1 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_1 <= input_delay_ff_0;
	// synopsys translate_off
	initial
		input_delay_ff_2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_2 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_2 <= input_delay_ff_1;
	// synopsys translate_off
	initial
		input_delay_ff_3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_3 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_3 <= input_delay_ff_2;
	// synopsys translate_off
	initial
		input_delay_ff_4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_4 <= 36'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_4 <= input_delay_ff_3;
	assign
		cc = input_number_delay_w,
		input_number_delay_w = input_delay_ff_4,
		input_number_w = aa;
endmodule //ip_atan_altfp_atan_del_nk9


//altfp_atan_del CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone III" pipes=4 width=18 aa aclr cc clk_en clock
//VERSION_BEGIN 13.1 cbx_altfp_atan 2013:10:23:18:05:48:SJ cbx_altpriority_encoder 2013:10:23:18:05:48:SJ cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_lpm_clshift 2013:10:23:18:05:48:SJ cbx_lpm_mult 2013:10:23:18:05:48:SJ cbx_lpm_mux 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END

//synthesis_resources = reg 72 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ip_atan_altfp_atan_del_mk9
	( 
	aa,
	aclr,
	cc,
	clk_en,
	clock) ;
	input   [17:0]  aa;
	input   aclr;
	output   [17:0]  cc;
	input   clk_en;
	input   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [17:0]  aa;
	tri0   aclr;
	tri1   clk_en;
	tri0   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[17:0]	input_delay_ff_0;
	reg	[17:0]	input_delay_ff_1;
	reg	[17:0]	input_delay_ff_2;
	reg	[17:0]	input_delay_ff_3;
	wire  [17:0]  input_number_delay_w;
	wire  [17:0]  input_number_w;

	// synopsys translate_off
	initial
		input_delay_ff_0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_0 <= 18'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_0 <= input_number_w;
	// synopsys translate_off
	initial
		input_delay_ff_1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_1 <= 18'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_1 <= input_delay_ff_0;
	// synopsys translate_off
	initial
		input_delay_ff_2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_2 <= 18'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_2 <= input_delay_ff_1;
	// synopsys translate_off
	initial
		input_delay_ff_3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_3 <= 18'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_3 <= input_delay_ff_2;
	assign
		cc = input_number_delay_w,
		input_number_delay_w = input_delay_ff_3,
		input_number_w = aa;
endmodule //ip_atan_altfp_atan_del_mk9


//altfp_atan_divest CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone III" aclr clk_en clock divisor invdivisor
//VERSION_BEGIN 13.1 cbx_altfp_atan 2013:10:23:18:05:48:SJ cbx_altpriority_encoder 2013:10:23:18:05:48:SJ cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_lpm_clshift 2013:10:23:18:05:48:SJ cbx_lpm_mult 2013:10:23:18:05:48:SJ cbx_lpm_mux 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END


//altfp_atan_lut0 CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone III" add data
//VERSION_BEGIN 13.1 cbx_altfp_atan 2013:10:23:18:05:48:SJ cbx_altpriority_encoder 2013:10:23:18:05:48:SJ cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_lpm_clshift 2013:10:23:18:05:48:SJ cbx_lpm_mult 2013:10:23:18:05:48:SJ cbx_lpm_mux 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END

//synthesis_resources = lpm_mux 1 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ip_atan_altfp_atan_lut0_f07
	( 
	add,
	data) ;
	input   [8:0]  add;
	output   [19:0]  data;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [8:0]  add;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [19:0]   wire_mux8_result;
	wire  [19:0]  data_0_w;
	wire  [19:0]  data_100_w;
	wire  [19:0]  data_101_w;
	wire  [19:0]  data_102_w;
	wire  [19:0]  data_103_w;
	wire  [19:0]  data_104_w;
	wire  [19:0]  data_105_w;
	wire  [19:0]  data_106_w;
	wire  [19:0]  data_107_w;
	wire  [19:0]  data_108_w;
	wire  [19:0]  data_109_w;
	wire  [19:0]  data_10_w;
	wire  [19:0]  data_110_w;
	wire  [19:0]  data_111_w;
	wire  [19:0]  data_112_w;
	wire  [19:0]  data_113_w;
	wire  [19:0]  data_114_w;
	wire  [19:0]  data_115_w;
	wire  [19:0]  data_116_w;
	wire  [19:0]  data_117_w;
	wire  [19:0]  data_118_w;
	wire  [19:0]  data_119_w;
	wire  [19:0]  data_11_w;
	wire  [19:0]  data_120_w;
	wire  [19:0]  data_121_w;
	wire  [19:0]  data_122_w;
	wire  [19:0]  data_123_w;
	wire  [19:0]  data_124_w;
	wire  [19:0]  data_125_w;
	wire  [19:0]  data_126_w;
	wire  [19:0]  data_127_w;
	wire  [19:0]  data_128_w;
	wire  [19:0]  data_129_w;
	wire  [19:0]  data_12_w;
	wire  [19:0]  data_130_w;
	wire  [19:0]  data_131_w;
	wire  [19:0]  data_132_w;
	wire  [19:0]  data_133_w;
	wire  [19:0]  data_134_w;
	wire  [19:0]  data_135_w;
	wire  [19:0]  data_136_w;
	wire  [19:0]  data_137_w;
	wire  [19:0]  data_138_w;
	wire  [19:0]  data_139_w;
	wire  [19:0]  data_13_w;
	wire  [19:0]  data_140_w;
	wire  [19:0]  data_141_w;
	wire  [19:0]  data_142_w;
	wire  [19:0]  data_143_w;
	wire  [19:0]  data_144_w;
	wire  [19:0]  data_145_w;
	wire  [19:0]  data_146_w;
	wire  [19:0]  data_147_w;
	wire  [19:0]  data_148_w;
	wire  [19:0]  data_149_w;
	wire  [19:0]  data_14_w;
	wire  [19:0]  data_150_w;
	wire  [19:0]  data_151_w;
	wire  [19:0]  data_152_w;
	wire  [19:0]  data_153_w;
	wire  [19:0]  data_154_w;
	wire  [19:0]  data_155_w;
	wire  [19:0]  data_156_w;
	wire  [19:0]  data_157_w;
	wire  [19:0]  data_158_w;
	wire  [19:0]  data_159_w;
	wire  [19:0]  data_15_w;
	wire  [19:0]  data_160_w;
	wire  [19:0]  data_161_w;
	wire  [19:0]  data_162_w;
	wire  [19:0]  data_163_w;
	wire  [19:0]  data_164_w;
	wire  [19:0]  data_165_w;
	wire  [19:0]  data_166_w;
	wire  [19:0]  data_167_w;
	wire  [19:0]  data_168_w;
	wire  [19:0]  data_169_w;
	wire  [19:0]  data_16_w;
	wire  [19:0]  data_170_w;
	wire  [19:0]  data_171_w;
	wire  [19:0]  data_172_w;
	wire  [19:0]  data_173_w;
	wire  [19:0]  data_174_w;
	wire  [19:0]  data_175_w;
	wire  [19:0]  data_176_w;
	wire  [19:0]  data_177_w;
	wire  [19:0]  data_178_w;
	wire  [19:0]  data_179_w;
	wire  [19:0]  data_17_w;
	wire  [19:0]  data_180_w;
	wire  [19:0]  data_181_w;
	wire  [19:0]  data_182_w;
	wire  [19:0]  data_183_w;
	wire  [19:0]  data_184_w;
	wire  [19:0]  data_185_w;
	wire  [19:0]  data_186_w;
	wire  [19:0]  data_187_w;
	wire  [19:0]  data_188_w;
	wire  [19:0]  data_189_w;
	wire  [19:0]  data_18_w;
	wire  [19:0]  data_190_w;
	wire  [19:0]  data_191_w;
	wire  [19:0]  data_192_w;
	wire  [19:0]  data_193_w;
	wire  [19:0]  data_194_w;
	wire  [19:0]  data_195_w;
	wire  [19:0]  data_196_w;
	wire  [19:0]  data_197_w;
	wire  [19:0]  data_198_w;
	wire  [19:0]  data_199_w;
	wire  [19:0]  data_19_w;
	wire  [19:0]  data_1_w;
	wire  [19:0]  data_200_w;
	wire  [19:0]  data_201_w;
	wire  [19:0]  data_202_w;
	wire  [19:0]  data_203_w;
	wire  [19:0]  data_204_w;
	wire  [19:0]  data_205_w;
	wire  [19:0]  data_206_w;
	wire  [19:0]  data_207_w;
	wire  [19:0]  data_208_w;
	wire  [19:0]  data_209_w;
	wire  [19:0]  data_20_w;
	wire  [19:0]  data_210_w;
	wire  [19:0]  data_211_w;
	wire  [19:0]  data_212_w;
	wire  [19:0]  data_213_w;
	wire  [19:0]  data_214_w;
	wire  [19:0]  data_215_w;
	wire  [19:0]  data_216_w;
	wire  [19:0]  data_217_w;
	wire  [19:0]  data_218_w;
	wire  [19:0]  data_219_w;
	wire  [19:0]  data_21_w;
	wire  [19:0]  data_220_w;
	wire  [19:0]  data_221_w;
	wire  [19:0]  data_222_w;
	wire  [19:0]  data_223_w;
	wire  [19:0]  data_224_w;
	wire  [19:0]  data_225_w;
	wire  [19:0]  data_226_w;
	wire  [19:0]  data_227_w;
	wire  [19:0]  data_228_w;
	wire  [19:0]  data_229_w;
	wire  [19:0]  data_22_w;
	wire  [19:0]  data_230_w;
	wire  [19:0]  data_231_w;
	wire  [19:0]  data_232_w;
	wire  [19:0]  data_233_w;
	wire  [19:0]  data_234_w;
	wire  [19:0]  data_235_w;
	wire  [19:0]  data_236_w;
	wire  [19:0]  data_237_w;
	wire  [19:0]  data_238_w;
	wire  [19:0]  data_239_w;
	wire  [19:0]  data_23_w;
	wire  [19:0]  data_240_w;
	wire  [19:0]  data_241_w;
	wire  [19:0]  data_242_w;
	wire  [19:0]  data_243_w;
	wire  [19:0]  data_244_w;
	wire  [19:0]  data_245_w;
	wire  [19:0]  data_246_w;
	wire  [19:0]  data_247_w;
	wire  [19:0]  data_248_w;
	wire  [19:0]  data_249_w;
	wire  [19:0]  data_24_w;
	wire  [19:0]  data_250_w;
	wire  [19:0]  data_251_w;
	wire  [19:0]  data_252_w;
	wire  [19:0]  data_253_w;
	wire  [19:0]  data_254_w;
	wire  [19:0]  data_255_w;
	wire  [19:0]  data_256_w;
	wire  [19:0]  data_257_w;
	wire  [19:0]  data_258_w;
	wire  [19:0]  data_259_w;
	wire  [19:0]  data_25_w;
	wire  [19:0]  data_260_w;
	wire  [19:0]  data_261_w;
	wire  [19:0]  data_262_w;
	wire  [19:0]  data_263_w;
	wire  [19:0]  data_264_w;
	wire  [19:0]  data_265_w;
	wire  [19:0]  data_266_w;
	wire  [19:0]  data_267_w;
	wire  [19:0]  data_268_w;
	wire  [19:0]  data_269_w;
	wire  [19:0]  data_26_w;
	wire  [19:0]  data_270_w;
	wire  [19:0]  data_271_w;
	wire  [19:0]  data_272_w;
	wire  [19:0]  data_273_w;
	wire  [19:0]  data_274_w;
	wire  [19:0]  data_275_w;
	wire  [19:0]  data_276_w;
	wire  [19:0]  data_277_w;
	wire  [19:0]  data_278_w;
	wire  [19:0]  data_279_w;
	wire  [19:0]  data_27_w;
	wire  [19:0]  data_280_w;
	wire  [19:0]  data_281_w;
	wire  [19:0]  data_282_w;
	wire  [19:0]  data_283_w;
	wire  [19:0]  data_284_w;
	wire  [19:0]  data_285_w;
	wire  [19:0]  data_286_w;
	wire  [19:0]  data_287_w;
	wire  [19:0]  data_288_w;
	wire  [19:0]  data_289_w;
	wire  [19:0]  data_28_w;
	wire  [19:0]  data_290_w;
	wire  [19:0]  data_291_w;
	wire  [19:0]  data_292_w;
	wire  [19:0]  data_293_w;
	wire  [19:0]  data_294_w;
	wire  [19:0]  data_295_w;
	wire  [19:0]  data_296_w;
	wire  [19:0]  data_297_w;
	wire  [19:0]  data_298_w;
	wire  [19:0]  data_299_w;
	wire  [19:0]  data_29_w;
	wire  [19:0]  data_2_w;
	wire  [19:0]  data_300_w;
	wire  [19:0]  data_301_w;
	wire  [19:0]  data_302_w;
	wire  [19:0]  data_303_w;
	wire  [19:0]  data_304_w;
	wire  [19:0]  data_305_w;
	wire  [19:0]  data_306_w;
	wire  [19:0]  data_307_w;
	wire  [19:0]  data_308_w;
	wire  [19:0]  data_309_w;
	wire  [19:0]  data_30_w;
	wire  [19:0]  data_310_w;
	wire  [19:0]  data_311_w;
	wire  [19:0]  data_312_w;
	wire  [19:0]  data_313_w;
	wire  [19:0]  data_314_w;
	wire  [19:0]  data_315_w;
	wire  [19:0]  data_316_w;
	wire  [19:0]  data_317_w;
	wire  [19:0]  data_318_w;
	wire  [19:0]  data_319_w;
	wire  [19:0]  data_31_w;
	wire  [19:0]  data_320_w;
	wire  [19:0]  data_321_w;
	wire  [19:0]  data_322_w;
	wire  [19:0]  data_323_w;
	wire  [19:0]  data_324_w;
	wire  [19:0]  data_325_w;
	wire  [19:0]  data_326_w;
	wire  [19:0]  data_327_w;
	wire  [19:0]  data_328_w;
	wire  [19:0]  data_329_w;
	wire  [19:0]  data_32_w;
	wire  [19:0]  data_330_w;
	wire  [19:0]  data_331_w;
	wire  [19:0]  data_332_w;
	wire  [19:0]  data_333_w;
	wire  [19:0]  data_334_w;
	wire  [19:0]  data_335_w;
	wire  [19:0]  data_336_w;
	wire  [19:0]  data_337_w;
	wire  [19:0]  data_338_w;
	wire  [19:0]  data_339_w;
	wire  [19:0]  data_33_w;
	wire  [19:0]  data_340_w;
	wire  [19:0]  data_341_w;
	wire  [19:0]  data_342_w;
	wire  [19:0]  data_343_w;
	wire  [19:0]  data_344_w;
	wire  [19:0]  data_345_w;
	wire  [19:0]  data_346_w;
	wire  [19:0]  data_347_w;
	wire  [19:0]  data_348_w;
	wire  [19:0]  data_349_w;
	wire  [19:0]  data_34_w;
	wire  [19:0]  data_350_w;
	wire  [19:0]  data_351_w;
	wire  [19:0]  data_352_w;
	wire  [19:0]  data_353_w;
	wire  [19:0]  data_354_w;
	wire  [19:0]  data_355_w;
	wire  [19:0]  data_356_w;
	wire  [19:0]  data_357_w;
	wire  [19:0]  data_358_w;
	wire  [19:0]  data_359_w;
	wire  [19:0]  data_35_w;
	wire  [19:0]  data_360_w;
	wire  [19:0]  data_361_w;
	wire  [19:0]  data_362_w;
	wire  [19:0]  data_363_w;
	wire  [19:0]  data_364_w;
	wire  [19:0]  data_365_w;
	wire  [19:0]  data_366_w;
	wire  [19:0]  data_367_w;
	wire  [19:0]  data_368_w;
	wire  [19:0]  data_369_w;
	wire  [19:0]  data_36_w;
	wire  [19:0]  data_370_w;
	wire  [19:0]  data_371_w;
	wire  [19:0]  data_372_w;
	wire  [19:0]  data_373_w;
	wire  [19:0]  data_374_w;
	wire  [19:0]  data_375_w;
	wire  [19:0]  data_376_w;
	wire  [19:0]  data_377_w;
	wire  [19:0]  data_378_w;
	wire  [19:0]  data_379_w;
	wire  [19:0]  data_37_w;
	wire  [19:0]  data_380_w;
	wire  [19:0]  data_381_w;
	wire  [19:0]  data_382_w;
	wire  [19:0]  data_383_w;
	wire  [19:0]  data_384_w;
	wire  [19:0]  data_385_w;
	wire  [19:0]  data_386_w;
	wire  [19:0]  data_387_w;
	wire  [19:0]  data_388_w;
	wire  [19:0]  data_389_w;
	wire  [19:0]  data_38_w;
	wire  [19:0]  data_390_w;
	wire  [19:0]  data_391_w;
	wire  [19:0]  data_392_w;
	wire  [19:0]  data_393_w;
	wire  [19:0]  data_394_w;
	wire  [19:0]  data_395_w;
	wire  [19:0]  data_396_w;
	wire  [19:0]  data_397_w;
	wire  [19:0]  data_398_w;
	wire  [19:0]  data_399_w;
	wire  [19:0]  data_39_w;
	wire  [19:0]  data_3_w;
	wire  [19:0]  data_400_w;
	wire  [19:0]  data_401_w;
	wire  [19:0]  data_402_w;
	wire  [19:0]  data_403_w;
	wire  [19:0]  data_404_w;
	wire  [19:0]  data_405_w;
	wire  [19:0]  data_406_w;
	wire  [19:0]  data_407_w;
	wire  [19:0]  data_408_w;
	wire  [19:0]  data_409_w;
	wire  [19:0]  data_40_w;
	wire  [19:0]  data_410_w;
	wire  [19:0]  data_411_w;
	wire  [19:0]  data_412_w;
	wire  [19:0]  data_413_w;
	wire  [19:0]  data_414_w;
	wire  [19:0]  data_415_w;
	wire  [19:0]  data_416_w;
	wire  [19:0]  data_417_w;
	wire  [19:0]  data_418_w;
	wire  [19:0]  data_419_w;
	wire  [19:0]  data_41_w;
	wire  [19:0]  data_420_w;
	wire  [19:0]  data_421_w;
	wire  [19:0]  data_422_w;
	wire  [19:0]  data_423_w;
	wire  [19:0]  data_424_w;
	wire  [19:0]  data_425_w;
	wire  [19:0]  data_426_w;
	wire  [19:0]  data_427_w;
	wire  [19:0]  data_428_w;
	wire  [19:0]  data_429_w;
	wire  [19:0]  data_42_w;
	wire  [19:0]  data_430_w;
	wire  [19:0]  data_431_w;
	wire  [19:0]  data_432_w;
	wire  [19:0]  data_433_w;
	wire  [19:0]  data_434_w;
	wire  [19:0]  data_435_w;
	wire  [19:0]  data_436_w;
	wire  [19:0]  data_437_w;
	wire  [19:0]  data_438_w;
	wire  [19:0]  data_439_w;
	wire  [19:0]  data_43_w;
	wire  [19:0]  data_440_w;
	wire  [19:0]  data_441_w;
	wire  [19:0]  data_442_w;
	wire  [19:0]  data_443_w;
	wire  [19:0]  data_444_w;
	wire  [19:0]  data_445_w;
	wire  [19:0]  data_446_w;
	wire  [19:0]  data_447_w;
	wire  [19:0]  data_448_w;
	wire  [19:0]  data_449_w;
	wire  [19:0]  data_44_w;
	wire  [19:0]  data_450_w;
	wire  [19:0]  data_451_w;
	wire  [19:0]  data_452_w;
	wire  [19:0]  data_453_w;
	wire  [19:0]  data_454_w;
	wire  [19:0]  data_455_w;
	wire  [19:0]  data_456_w;
	wire  [19:0]  data_457_w;
	wire  [19:0]  data_458_w;
	wire  [19:0]  data_459_w;
	wire  [19:0]  data_45_w;
	wire  [19:0]  data_460_w;
	wire  [19:0]  data_461_w;
	wire  [19:0]  data_462_w;
	wire  [19:0]  data_463_w;
	wire  [19:0]  data_464_w;
	wire  [19:0]  data_465_w;
	wire  [19:0]  data_466_w;
	wire  [19:0]  data_467_w;
	wire  [19:0]  data_468_w;
	wire  [19:0]  data_469_w;
	wire  [19:0]  data_46_w;
	wire  [19:0]  data_470_w;
	wire  [19:0]  data_471_w;
	wire  [19:0]  data_472_w;
	wire  [19:0]  data_473_w;
	wire  [19:0]  data_474_w;
	wire  [19:0]  data_475_w;
	wire  [19:0]  data_476_w;
	wire  [19:0]  data_477_w;
	wire  [19:0]  data_478_w;
	wire  [19:0]  data_479_w;
	wire  [19:0]  data_47_w;
	wire  [19:0]  data_480_w;
	wire  [19:0]  data_481_w;
	wire  [19:0]  data_482_w;
	wire  [19:0]  data_483_w;
	wire  [19:0]  data_484_w;
	wire  [19:0]  data_485_w;
	wire  [19:0]  data_486_w;
	wire  [19:0]  data_487_w;
	wire  [19:0]  data_488_w;
	wire  [19:0]  data_489_w;
	wire  [19:0]  data_48_w;
	wire  [19:0]  data_490_w;
	wire  [19:0]  data_491_w;
	wire  [19:0]  data_492_w;
	wire  [19:0]  data_493_w;
	wire  [19:0]  data_494_w;
	wire  [19:0]  data_495_w;
	wire  [19:0]  data_496_w;
	wire  [19:0]  data_497_w;
	wire  [19:0]  data_498_w;
	wire  [19:0]  data_499_w;
	wire  [19:0]  data_49_w;
	wire  [19:0]  data_4_w;
	wire  [19:0]  data_500_w;
	wire  [19:0]  data_501_w;
	wire  [19:0]  data_502_w;
	wire  [19:0]  data_503_w;
	wire  [19:0]  data_504_w;
	wire  [19:0]  data_505_w;
	wire  [19:0]  data_506_w;
	wire  [19:0]  data_507_w;
	wire  [19:0]  data_508_w;
	wire  [19:0]  data_509_w;
	wire  [19:0]  data_50_w;
	wire  [19:0]  data_510_w;
	wire  [19:0]  data_511_w;
	wire  [19:0]  data_51_w;
	wire  [19:0]  data_52_w;
	wire  [19:0]  data_53_w;
	wire  [19:0]  data_54_w;
	wire  [19:0]  data_55_w;
	wire  [19:0]  data_56_w;
	wire  [19:0]  data_57_w;
	wire  [19:0]  data_58_w;
	wire  [19:0]  data_59_w;
	wire  [19:0]  data_5_w;
	wire  [19:0]  data_60_w;
	wire  [19:0]  data_61_w;
	wire  [19:0]  data_62_w;
	wire  [19:0]  data_63_w;
	wire  [19:0]  data_64_w;
	wire  [19:0]  data_65_w;
	wire  [19:0]  data_66_w;
	wire  [19:0]  data_67_w;
	wire  [19:0]  data_68_w;
	wire  [19:0]  data_69_w;
	wire  [19:0]  data_6_w;
	wire  [19:0]  data_70_w;
	wire  [19:0]  data_71_w;
	wire  [19:0]  data_72_w;
	wire  [19:0]  data_73_w;
	wire  [19:0]  data_74_w;
	wire  [19:0]  data_75_w;
	wire  [19:0]  data_76_w;
	wire  [19:0]  data_77_w;
	wire  [19:0]  data_78_w;
	wire  [19:0]  data_79_w;
	wire  [19:0]  data_7_w;
	wire  [19:0]  data_80_w;
	wire  [19:0]  data_81_w;
	wire  [19:0]  data_82_w;
	wire  [19:0]  data_83_w;
	wire  [19:0]  data_84_w;
	wire  [19:0]  data_85_w;
	wire  [19:0]  data_86_w;
	wire  [19:0]  data_87_w;
	wire  [19:0]  data_88_w;
	wire  [19:0]  data_89_w;
	wire  [19:0]  data_8_w;
	wire  [19:0]  data_90_w;
	wire  [19:0]  data_91_w;
	wire  [19:0]  data_92_w;
	wire  [19:0]  data_93_w;
	wire  [19:0]  data_94_w;
	wire  [19:0]  data_95_w;
	wire  [19:0]  data_96_w;
	wire  [19:0]  data_97_w;
	wire  [19:0]  data_98_w;
	wire  [19:0]  data_99_w;
	wire  [19:0]  data_9_w;

	lpm_mux   mux8
	( 
	.data({data_511_w, data_510_w, data_509_w, data_508_w, data_507_w, data_506_w, data_505_w, data_504_w, data_503_w, data_502_w, data_501_w, data_500_w, data_499_w, data_498_w, data_497_w, data_496_w, data_495_w, data_494_w, data_493_w, data_492_w, data_491_w, data_490_w, data_489_w, data_488_w, data_487_w, data_486_w, data_485_w, data_484_w, data_483_w, data_482_w, data_481_w, data_480_w, data_479_w, data_478_w, data_477_w, data_476_w, data_475_w, data_474_w, data_473_w, data_472_w, data_471_w, data_470_w, data_469_w, data_468_w, data_467_w, data_466_w, data_465_w, data_464_w, data_463_w, data_462_w, data_461_w, data_460_w, data_459_w, data_458_w, data_457_w, data_456_w, data_455_w, data_454_w, data_453_w, data_452_w, data_451_w, data_450_w, data_449_w, data_448_w, data_447_w, data_446_w, data_445_w, data_444_w, data_443_w, data_442_w, data_441_w, data_440_w, data_439_w, data_438_w, data_437_w, data_436_w, data_435_w, data_434_w, data_433_w, data_432_w, data_431_w, data_430_w, data_429_w, data_428_w, data_427_w, data_426_w, data_425_w, data_424_w, data_423_w, data_422_w, data_421_w, data_420_w, data_419_w, data_418_w, data_417_w, data_416_w, data_415_w, data_414_w, data_413_w, data_412_w, data_411_w, data_410_w, data_409_w, data_408_w, data_407_w, data_406_w, data_405_w, data_404_w, data_403_w, data_402_w, data_401_w, data_400_w, data_399_w, data_398_w, data_397_w, data_396_w, data_395_w, data_394_w, data_393_w, data_392_w, data_391_w, data_390_w, data_389_w, data_388_w, data_387_w, data_386_w, data_385_w, data_384_w, data_383_w, data_382_w, data_381_w, data_380_w, data_379_w, data_378_w, data_377_w, data_376_w, data_375_w, data_374_w, data_373_w, data_372_w, data_371_w, data_370_w, data_369_w, data_368_w, data_367_w, data_366_w, data_365_w, data_364_w, data_363_w, data_362_w, data_361_w, data_360_w, data_359_w, data_358_w, data_357_w, data_356_w, data_355_w, data_354_w, data_353_w, data_352_w, data_351_w, data_350_w, data_349_w, data_348_w, data_347_w, data_346_w, data_345_w, data_344_w, data_343_w, data_342_w, data_341_w
, data_340_w, data_339_w, data_338_w, data_337_w, data_336_w, data_335_w, data_334_w, data_333_w, data_332_w, data_331_w, data_330_w, data_329_w, data_328_w, data_327_w, data_326_w, data_325_w, data_324_w, data_323_w, data_322_w, data_321_w, data_320_w, data_319_w, data_318_w, data_317_w, data_316_w, data_315_w, data_314_w, data_313_w, data_312_w, data_311_w, data_310_w, data_309_w, data_308_w, data_307_w, data_306_w, data_305_w, data_304_w, data_303_w, data_302_w, data_301_w, data_300_w, data_299_w, data_298_w, data_297_w, data_296_w, data_295_w, data_294_w, data_293_w, data_292_w, data_291_w, data_290_w, data_289_w, data_288_w, data_287_w, data_286_w, data_285_w, data_284_w, data_283_w, data_282_w, data_281_w, data_280_w, data_279_w, data_278_w, data_277_w, data_276_w, data_275_w, data_274_w, data_273_w, data_272_w, data_271_w, data_270_w, data_269_w, data_268_w, data_267_w, data_266_w, data_265_w, data_264_w, data_263_w, data_262_w, data_261_w, data_260_w, data_259_w, data_258_w, data_257_w, data_256_w, data_255_w, data_254_w, data_253_w, data_252_w, data_251_w, data_250_w, data_249_w, data_248_w, data_247_w, data_246_w, data_245_w, data_244_w, data_243_w, data_242_w, data_241_w, data_240_w, data_239_w, data_238_w, data_237_w, data_236_w, data_235_w, data_234_w, data_233_w, data_232_w, data_231_w, data_230_w, data_229_w, data_228_w, data_227_w, data_226_w, data_225_w, data_224_w, data_223_w, data_222_w, data_221_w, data_220_w, data_219_w, data_218_w, data_217_w, data_216_w, data_215_w, data_214_w, data_213_w, data_212_w, data_211_w, data_210_w, data_209_w, data_208_w, data_207_w, data_206_w, data_205_w, data_204_w, data_203_w, data_202_w, data_201_w, data_200_w, data_199_w, data_198_w, data_197_w, data_196_w, data_195_w, data_194_w, data_193_w, data_192_w, data_191_w, data_190_w, data_189_w, data_188_w, data_187_w, data_186_w, data_185_w, data_184_w, data_183_w, data_182_w, data_181_w, data_180_w, data_179_w, data_178_w, data_177_w, data_176_w, data_175_w, data_174_w, data_173_w, data_172_w, data_171_w, data_170_w
, data_169_w, data_168_w, data_167_w, data_166_w, data_165_w, data_164_w, data_163_w, data_162_w, data_161_w, data_160_w, data_159_w, data_158_w, data_157_w, data_156_w, data_155_w, data_154_w, data_153_w, data_152_w, data_151_w, data_150_w, data_149_w, data_148_w, data_147_w, data_146_w, data_145_w, data_144_w, data_143_w, data_142_w, data_141_w, data_140_w, data_139_w, data_138_w, data_137_w, data_136_w, data_135_w, data_134_w, data_133_w, data_132_w, data_131_w, data_130_w, data_129_w, data_128_w, data_127_w, data_126_w, data_125_w, data_124_w, data_123_w, data_122_w, data_121_w, data_120_w, data_119_w, data_118_w, data_117_w, data_116_w, data_115_w, data_114_w, data_113_w, data_112_w, data_111_w, data_110_w, data_109_w, data_108_w, data_107_w, data_106_w, data_105_w, data_104_w, data_103_w, data_102_w, data_101_w, data_100_w, data_99_w, data_98_w, data_97_w, data_96_w, data_95_w, data_94_w, data_93_w, data_92_w, data_91_w, data_90_w, data_89_w, data_88_w, data_87_w, data_86_w, data_85_w, data_84_w, data_83_w, data_82_w, data_81_w, data_80_w, data_79_w, data_78_w, data_77_w, data_76_w, data_75_w, data_74_w, data_73_w, data_72_w, data_71_w, data_70_w, data_69_w, data_68_w, data_67_w, data_66_w, data_65_w, data_64_w, data_63_w, data_62_w, data_61_w, data_60_w, data_59_w, data_58_w, data_57_w, data_56_w, data_55_w, data_54_w, data_53_w, data_52_w, data_51_w, data_50_w, data_49_w, data_48_w, data_47_w, data_46_w, data_45_w, data_44_w, data_43_w, data_42_w, data_41_w, data_40_w, data_39_w, data_38_w, data_37_w, data_36_w, data_35_w, data_34_w, data_33_w, data_32_w, data_31_w, data_30_w, data_29_w, data_28_w, data_27_w, data_26_w, data_25_w, data_24_w, data_23_w, data_22_w, data_21_w, data_20_w, data_19_w, data_18_w, data_17_w, data_16_w, data_15_w, data_14_w, data_13_w, data_12_w, data_11_w, data_10_w, data_9_w, data_8_w, data_7_w, data_6_w, data_5_w, data_4_w, data_3_w, data_2_w, data_1_w, data_0_w}),
	.result(wire_mux8_result),
	.sel(add)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		mux8.lpm_size = 512,
		mux8.lpm_width = 20,
		mux8.lpm_widths = 9,
		mux8.lpm_type = "lpm_mux";
	assign
		data = wire_mux8_result,
		data_0_w = {20{1'b1}},
		data_100_w = 20'b11010110001010110111,
		data_101_w = 20'b11010101110100100000,
		data_102_w = 20'b11010101011110001110,
		data_103_w = 20'b11010101001000000000,
		data_104_w = 20'b11010100110001110111,
		data_105_w = 20'b11010100011011110011,
		data_106_w = 20'b11010100000101110011,
		data_107_w = 20'b11010011101111110111,
		data_108_w = 20'b11010011011010000000,
		data_109_w = 20'b11010011000100001110,
		data_10_w = 20'b11111011000110000111,
		data_110_w = 20'b11010010101110100000,
		data_111_w = 20'b11010010011000110111,
		data_112_w = 20'b11010010000011010001,
		data_113_w = 20'b11010001101101110001,
		data_114_w = 20'b11010001011000010101,
		data_115_w = 20'b11010001000010111101,
		data_116_w = 20'b11010000101101101001,
		data_117_w = 20'b11010000011000011010,
		data_118_w = 20'b11010000000011010000,
		data_119_w = 20'b11001111101110001001,
		data_11_w = 20'b11111010100111011001,
		data_120_w = 20'b11001111011001000111,
		data_121_w = 20'b11001111000100001001,
		data_122_w = 20'b11001110101111001111,
		data_123_w = 20'b11001110011010011001,
		data_124_w = 20'b11001110000101101000,
		data_125_w = 20'b11001101110000111011,
		data_126_w = 20'b11001101011100010010,
		data_127_w = 20'b11001101000111101101,
		data_128_w = 20'b11001100110011001100,
		data_129_w = 20'b11001100011110110000,
		data_12_w = 20'b11111010001000110010,
		data_130_w = 20'b11001100001010010111,
		data_131_w = 20'b11001011110110000010,
		data_132_w = 20'b11001011100001110010,
		data_133_w = 20'b11001011001101100110,
		data_134_w = 20'b11001010111001011101,
		data_135_w = 20'b11001010100101011001,
		data_136_w = 20'b11001010010001011000,
		data_137_w = 20'b11001001111101011011,
		data_138_w = 20'b11001001101001100011,
		data_139_w = 20'b11001001010101101110,
		data_13_w = 20'b11111001101010010010,
		data_140_w = 20'b11001001000001111101,
		data_141_w = 20'b11001000101110010000,
		data_142_w = 20'b11001000011010100111,
		data_143_w = 20'b11001000000111000010,
		data_144_w = 20'b11000111110011100000,
		data_145_w = 20'b11000111100000000011,
		data_146_w = 20'b11000111001100101001,
		data_147_w = 20'b11000110111001010011,
		data_148_w = 20'b11000110100110000000,
		data_149_w = 20'b11000110010010110010,
		data_14_w = 20'b11111001001011111010,
		data_150_w = 20'b11000101111111100111,
		data_151_w = 20'b11000101101100100000,
		data_152_w = 20'b11000101011001011100,
		data_153_w = 20'b11000101000110011100,
		data_154_w = 20'b11000100110011100000,
		data_155_w = 20'b11000100100000100111,
		data_156_w = 20'b11000100001101110011,
		data_157_w = 20'b11000011111011000001,
		data_158_w = 20'b11000011101000010011,
		data_159_w = 20'b11000011010101101001,
		data_15_w = 20'b11111000101101101001,
		data_160_w = 20'b11000011000011000011,
		data_161_w = 20'b11000010110000100000,
		data_162_w = 20'b11000010011110000000,
		data_163_w = 20'b11000010001011100100,
		data_164_w = 20'b11000001111001001011,
		data_165_w = 20'b11000001100110110110,
		data_166_w = 20'b11000001010100100101,
		data_167_w = 20'b11000001000010010110,
		data_168_w = 20'b11000000110000001100,
		data_169_w = 20'b11000000011110000100,
		data_16_w = 20'b11111000001111100000,
		data_170_w = 20'b11000000001100000000,
		data_171_w = 20'b10111111111010000000,
		data_172_w = 20'b10111111101000000011,
		data_173_w = 20'b10111111010110001001,
		data_174_w = 20'b10111111000100010010,
		data_175_w = 20'b10111110110010011111,
		data_176_w = 20'b10111110100000101111,
		data_177_w = 20'b10111110001111000011,
		data_178_w = 20'b10111101111101011001,
		data_179_w = 20'b10111101101011110011,
		data_17_w = 20'b11110111110001011110,
		data_180_w = 20'b10111101011010010001,
		data_181_w = 20'b10111101001000110001,
		data_182_w = 20'b10111100110111010101,
		data_183_w = 20'b10111100100101111100,
		data_184_w = 20'b10111100010100100110,
		data_185_w = 20'b10111100000011010011,
		data_186_w = 20'b10111011110010000100,
		data_187_w = 20'b10111011100000110111,
		data_188_w = 20'b10111011001111101110,
		data_189_w = 20'b10111010111110101000,
		data_18_w = 20'b11110111010011100011,
		data_190_w = 20'b10111010101101100101,
		data_191_w = 20'b10111010011100100101,
		data_192_w = 20'b10111010001011101000,
		data_193_w = 20'b10111001111010101111,
		data_194_w = 20'b10111001101001111000,
		data_195_w = 20'b10111001011001000100,
		data_196_w = 20'b10111001001000010100,
		data_197_w = 20'b10111000110111100110,
		data_198_w = 20'b10111000100110111100,
		data_199_w = 20'b10111000010110010100,
		data_19_w = 20'b11110110110101101111,
		data_1_w = 20'b11111111100000000011,
		data_200_w = 20'b10111000000101110000,
		data_201_w = 20'b10110111110101001110,
		data_202_w = 20'b10110111100100110000,
		data_203_w = 20'b10110111010100010100,
		data_204_w = 20'b10110111000011111011,
		data_205_w = 20'b10110110110011100110,
		data_206_w = 20'b10110110100011010011,
		data_207_w = 20'b10110110010011000011,
		data_208_w = 20'b10110110000010110110,
		data_209_w = 20'b10110101110010101011,
		data_20_w = 20'b11110110011000000011,
		data_210_w = 20'b10110101100010100100,
		data_211_w = 20'b10110101010010100000,
		data_212_w = 20'b10110101000010011110,
		data_213_w = 20'b10110100110010011111,
		data_214_w = 20'b10110100100010100011,
		data_215_w = 20'b10110100010010101010,
		data_216_w = 20'b10110100000010110100,
		data_217_w = 20'b10110011110011000000,
		data_218_w = 20'b10110011100011001111,
		data_219_w = 20'b10110011010011100001,
		data_21_w = 20'b11110101111010011110,
		data_220_w = 20'b10110011000011110110,
		data_221_w = 20'b10110010110100001101,
		data_222_w = 20'b10110010100100100111,
		data_223_w = 20'b10110010010101000100,
		data_224_w = 20'b10110010000101100100,
		data_225_w = 20'b10110001110110000110,
		data_226_w = 20'b10110001100110101011,
		data_227_w = 20'b10110001010111010011,
		data_228_w = 20'b10110001000111111101,
		data_229_w = 20'b10110000111000101010,
		data_22_w = 20'b11110101011100111111,
		data_230_w = 20'b10110000101001011001,
		data_231_w = 20'b10110000011010001100,
		data_232_w = 20'b10110000001011000000,
		data_233_w = 20'b10101111111011111000,
		data_234_w = 20'b10101111101100110010,
		data_235_w = 20'b10101111011101101110,
		data_236_w = 20'b10101111001110101110,
		data_237_w = 20'b10101110111111101111,
		data_238_w = 20'b10101110110000110100,
		data_239_w = 20'b10101110100001111010,
		data_23_w = 20'b11110100111111101000,
		data_240_w = 20'b10101110010011000100,
		data_241_w = 20'b10101110000100010000,
		data_242_w = 20'b10101101110101011110,
		data_243_w = 20'b10101101100110101111,
		data_244_w = 20'b10101101011000000010,
		data_245_w = 20'b10101101001001011000,
		data_246_w = 20'b10101100111010110001,
		data_247_w = 20'b10101100101100001011,
		data_248_w = 20'b10101100011101101001,
		data_249_w = 20'b10101100001111001001,
		data_24_w = 20'b11110100100010011000,
		data_250_w = 20'b10101100000000101011,
		data_251_w = 20'b10101011110010001111,
		data_252_w = 20'b10101011100011110110,
		data_253_w = 20'b10101011010101100000,
		data_254_w = 20'b10101011000111001100,
		data_255_w = 20'b10101010111000111010,
		data_256_w = 20'b10101010101010101010,
		data_257_w = 20'b10101010011100011101,
		data_258_w = 20'b10101010001110010011,
		data_259_w = 20'b10101010000000001010,
		data_25_w = 20'b11110100000101001111,
		data_260_w = 20'b10101001110010000100,
		data_261_w = 20'b10101001100100000001,
		data_262_w = 20'b10101001010101111111,
		data_263_w = 20'b10101001001000000000,
		data_264_w = 20'b10101000111010000100,
		data_265_w = 20'b10101000101100001001,
		data_266_w = 20'b10101000011110010001,
		data_267_w = 20'b10101000010000011011,
		data_268_w = 20'b10101000000010101000,
		data_269_w = 20'b10100111110100110110,
		data_26_w = 20'b11110011101000001100,
		data_270_w = 20'b10100111100111000111,
		data_271_w = 20'b10100111011001011011,
		data_272_w = 20'b10100111001011110000,
		data_273_w = 20'b10100110111110001000,
		data_274_w = 20'b10100110110000100010,
		data_275_w = 20'b10100110100010111110,
		data_276_w = 20'b10100110010101011100,
		data_277_w = 20'b10100110000111111100,
		data_278_w = 20'b10100101111010011111,
		data_279_w = 20'b10100101101101000100,
		data_27_w = 20'b11110011001011010001,
		data_280_w = 20'b10100101011111101011,
		data_281_w = 20'b10100101010010010100,
		data_282_w = 20'b10100101000101000000,
		data_283_w = 20'b10100100110111101101,
		data_284_w = 20'b10100100101010011101,
		data_285_w = 20'b10100100011101001110,
		data_286_w = 20'b10100100010000000010,
		data_287_w = 20'b10100100000010111000,
		data_288_w = 20'b10100011110101110000,
		data_289_w = 20'b10100011101000101011,
		data_28_w = 20'b11110010101110011101,
		data_290_w = 20'b10100011011011100111,
		data_291_w = 20'b10100011001110100101,
		data_292_w = 20'b10100011000001100110,
		data_293_w = 20'b10100010110100101000,
		data_294_w = 20'b10100010100111101101,
		data_295_w = 20'b10100010011010110011,
		data_296_w = 20'b10100010001101111100,
		data_297_w = 20'b10100010000001000111,
		data_298_w = 20'b10100001110100010011,
		data_299_w = 20'b10100001100111100010,
		data_29_w = 20'b11110010010001101111,
		data_2_w = 20'b11111111000000001111,
		data_300_w = 20'b10100001011010110011,
		data_301_w = 20'b10100001001110000110,
		data_302_w = 20'b10100001000001011010,
		data_303_w = 20'b10100000110100110001,
		data_304_w = 20'b10100000101000001010,
		data_305_w = 20'b10100000011011100100,
		data_306_w = 20'b10100000001111000001,
		data_307_w = 20'b10100000000010100000,
		data_308_w = 20'b10011111110110000000,
		data_309_w = 20'b10011111101001100011,
		data_30_w = 20'b11110001110101001000,
		data_310_w = 20'b10011111011101000111,
		data_311_w = 20'b10011111010000101110,
		data_312_w = 20'b10011111000100010110,
		data_313_w = 20'b10011110111000000000,
		data_314_w = 20'b10011110101011101101,
		data_315_w = 20'b10011110011111011011,
		data_316_w = 20'b10011110010011001011,
		data_317_w = 20'b10011110000110111100,
		data_318_w = 20'b10011101111010110000,
		data_319_w = 20'b10011101101110100110,
		data_31_w = 20'b11110001011000101000,
		data_320_w = 20'b10011101100010011101,
		data_321_w = 20'b10011101010110010111,
		data_322_w = 20'b10011101001010010010,
		data_323_w = 20'b10011100111110001111,
		data_324_w = 20'b10011100110010001110,
		data_325_w = 20'b10011100100110001111,
		data_326_w = 20'b10011100011010010001,
		data_327_w = 20'b10011100001110010110,
		data_328_w = 20'b10011100000010011100,
		data_329_w = 20'b10011011110110100100,
		data_32_w = 20'b11110000111100001110,
		data_330_w = 20'b10011011101010101110,
		data_331_w = 20'b10011011011110111001,
		data_332_w = 20'b10011011010011000111,
		data_333_w = 20'b10011011000111010110,
		data_334_w = 20'b10011010111011100111,
		data_335_w = 20'b10011010101111111010,
		data_336_w = 20'b10011010100100001110,
		data_337_w = 20'b10011010011000100101,
		data_338_w = 20'b10011010001100111101,
		data_339_w = 20'b10011010000001010110,
		data_33_w = 20'b11110000011111111011,
		data_340_w = 20'b10011001110101110010,
		data_341_w = 20'b10011001101010001111,
		data_342_w = 20'b10011001011110101110,
		data_343_w = 20'b10011001010011001111,
		data_344_w = 20'b10011001000111110001,
		data_345_w = 20'b10011000111100010110,
		data_346_w = 20'b10011000110000111011,
		data_347_w = 20'b10011000100101100011,
		data_348_w = 20'b10011000011010001100,
		data_349_w = 20'b10011000001110110111,
		data_34_w = 20'b11110000000011101111,
		data_350_w = 20'b10011000000011100100,
		data_351_w = 20'b10010111111000010010,
		data_352_w = 20'b10010111101101000010,
		data_353_w = 20'b10010111100001110100,
		data_354_w = 20'b10010111010110100111,
		data_355_w = 20'b10010111001011011100,
		data_356_w = 20'b10010111000000010011,
		data_357_w = 20'b10010110110101001011,
		data_358_w = 20'b10010110101010000101,
		data_359_w = 20'b10010110011111000000,
		data_35_w = 20'b11101111100111101010,
		data_360_w = 20'b10010110010011111101,
		data_361_w = 20'b10010110001000111100,
		data_362_w = 20'b10010101111101111101,
		data_363_w = 20'b10010101110010111111,
		data_364_w = 20'b10010101101000000010,
		data_365_w = 20'b10010101011101000111,
		data_366_w = 20'b10010101010010001110,
		data_367_w = 20'b10010101000111010110,
		data_368_w = 20'b10010100111100100000,
		data_369_w = 20'b10010100110001101100,
		data_36_w = 20'b11101111001011101011,
		data_370_w = 20'b10010100100110111001,
		data_371_w = 20'b10010100011100001000,
		data_372_w = 20'b10010100010001011000,
		data_373_w = 20'b10010100000110101010,
		data_374_w = 20'b10010011111011111101,
		data_375_w = 20'b10010011110001010010,
		data_376_w = 20'b10010011100110101000,
		data_377_w = 20'b10010011011100000000,
		data_378_w = 20'b10010011010001011010,
		data_379_w = 20'b10010011000110110101,
		data_37_w = 20'b11101110101111110010,
		data_380_w = 20'b10010010111100010001,
		data_381_w = 20'b10010010110001101111,
		data_382_w = 20'b10010010100111001111,
		data_383_w = 20'b10010010011100110000,
		data_384_w = 20'b10010010010010010010,
		data_385_w = 20'b10010010000111110110,
		data_386_w = 20'b10010001111101011100,
		data_387_w = 20'b10010001110011000011,
		data_388_w = 20'b10010001101000101011,
		data_389_w = 20'b10010001011110010101,
		data_38_w = 20'b11101110010100000000,
		data_390_w = 20'b10010001010100000000,
		data_391_w = 20'b10010001001001101101,
		data_392_w = 20'b10010000111111011100,
		data_393_w = 20'b10010000110101001011,
		data_394_w = 20'b10010000101010111101,
		data_395_w = 20'b10010000100000101111,
		data_396_w = 20'b10010000010110100011,
		data_397_w = 20'b10010000001100011001,
		data_398_w = 20'b10010000000010010000,
		data_399_w = 20'b10001111111000001000,
		data_39_w = 20'b11101101111000010101,
		data_3_w = 20'b11111110100000100011,
		data_400_w = 20'b10001111101110000010,
		data_401_w = 20'b10001111100011111101,
		data_402_w = 20'b10001111011001111010,
		data_403_w = 20'b10001111001111111000,
		data_404_w = 20'b10001111000101110111,
		data_405_w = 20'b10001110111011111000,
		data_406_w = 20'b10001110110001111011,
		data_407_w = 20'b10001110100111111110,
		data_408_w = 20'b10001110011110000011,
		data_409_w = 20'b10001110010100001010,
		data_40_w = 20'b11101101011100101111,
		data_410_w = 20'b10001110001010010001,
		data_411_w = 20'b10001110000000011010,
		data_412_w = 20'b10001101110110100101,
		data_413_w = 20'b10001101101100110001,
		data_414_w = 20'b10001101100010111110,
		data_415_w = 20'b10001101011001001101,
		data_416_w = 20'b10001101001111011101,
		data_417_w = 20'b10001101000101101110,
		data_418_w = 20'b10001100111100000000,
		data_419_w = 20'b10001100110010010100,
		data_41_w = 20'b11101101000001010001,
		data_420_w = 20'b10001100101000101010,
		data_421_w = 20'b10001100011111000000,
		data_422_w = 20'b10001100010101011000,
		data_423_w = 20'b10001100001011110001,
		data_424_w = 20'b10001100000010001100,
		data_425_w = 20'b10001011111000101000,
		data_426_w = 20'b10001011101111000101,
		data_427_w = 20'b10001011100101100011,
		data_428_w = 20'b10001011011100000011,
		data_429_w = 20'b10001011010010100100,
		data_42_w = 20'b11101100100101111000,
		data_430_w = 20'b10001011001001000110,
		data_431_w = 20'b10001010111111101010,
		data_432_w = 20'b10001010110110001111,
		data_433_w = 20'b10001010101100110101,
		data_434_w = 20'b10001010100011011101,
		data_435_w = 20'b10001010011010000101,
		data_436_w = 20'b10001010010000101111,
		data_437_w = 20'b10001010000111011011,
		data_438_w = 20'b10001001111110000111,
		data_439_w = 20'b10001001110100110101,
		data_43_w = 20'b11101100001010100110,
		data_440_w = 20'b10001001101011100100,
		data_441_w = 20'b10001001100010010100,
		data_442_w = 20'b10001001011001000110,
		data_443_w = 20'b10001001001111111000,
		data_444_w = 20'b10001001000110101100,
		data_445_w = 20'b10001000111101100001,
		data_446_w = 20'b10001000110100011000,
		data_447_w = 20'b10001000101011010000,
		data_448_w = 20'b10001000100010001000,
		data_449_w = 20'b10001000011001000010,
		data_44_w = 20'b11101011101111011010,
		data_450_w = 20'b10001000001111111110,
		data_451_w = 20'b10001000000110111010,
		data_452_w = 20'b10000111111101111000,
		data_453_w = 20'b10000111110100110111,
		data_454_w = 20'b10000111101011110111,
		data_455_w = 20'b10000111100010111000,
		data_456_w = 20'b10000111011001111011,
		data_457_w = 20'b10000111010000111110,
		data_458_w = 20'b10000111001000000011,
		data_459_w = 20'b10000110111111001001,
		data_45_w = 20'b11101011010100010101,
		data_460_w = 20'b10000110110110010000,
		data_461_w = 20'b10000110101101011001,
		data_462_w = 20'b10000110100100100010,
		data_463_w = 20'b10000110011011101101,
		data_464_w = 20'b10000110010010111001,
		data_465_w = 20'b10000110001010000101,
		data_466_w = 20'b10000110000001010100,
		data_467_w = 20'b10000101111000100011,
		data_468_w = 20'b10000101101111110011,
		data_469_w = 20'b10000101100111000101,
		data_46_w = 20'b11101010111001010101,
		data_470_w = 20'b10000101011110011000,
		data_471_w = 20'b10000101010101101011,
		data_472_w = 20'b10000101001101000000,
		data_473_w = 20'b10000101000100010110,
		data_474_w = 20'b10000100111011101110,
		data_475_w = 20'b10000100110011000110,
		data_476_w = 20'b10000100101010011111,
		data_477_w = 20'b10000100100001111010,
		data_478_w = 20'b10000100011001010110,
		data_479_w = 20'b10000100010000110010,
		data_47_w = 20'b11101010011110011100,
		data_480_w = 20'b10000100001000010000,
		data_481_w = 20'b10000011111111101111,
		data_482_w = 20'b10000011110111001111,
		data_483_w = 20'b10000011101110110001,
		data_484_w = 20'b10000011100110010011,
		data_485_w = 20'b10000011011101110110,
		data_486_w = 20'b10000011010101011011,
		data_487_w = 20'b10000011001101000000,
		data_488_w = 20'b10000011000100100111,
		data_489_w = 20'b10000010111100001110,
		data_48_w = 20'b11101010000011101001,
		data_490_w = 20'b10000010110011110111,
		data_491_w = 20'b10000010101011100001,
		data_492_w = 20'b10000010100011001100,
		data_493_w = 20'b10000010011010111000,
		data_494_w = 20'b10000010010010100101,
		data_495_w = 20'b10000010001010010011,
		data_496_w = 20'b10000010000010000010,
		data_497_w = 20'b10000001111001110010,
		data_498_w = 20'b10000001110001100011,
		data_499_w = 20'b10000001101001010101,
		data_49_w = 20'b11101001101000111100,
		data_4_w = 20'b11111110000000111111,
		data_500_w = 20'b10000001100001001001,
		data_501_w = 20'b10000001011000111101,
		data_502_w = 20'b10000001010000110010,
		data_503_w = 20'b10000001001000101001,
		data_504_w = 20'b10000001000000100000,
		data_505_w = 20'b10000000111000011001,
		data_506_w = 20'b10000000110000010010,
		data_507_w = 20'b10000000101000001100,
		data_508_w = 20'b10000000100000001000,
		data_509_w = 20'b10000000011000000100,
		data_50_w = 20'b11101001001110010110,
		data_510_w = 20'b10000000010000000010,
		data_511_w = 20'b10000000001000000000,
		data_51_w = 20'b11101000110011110101,
		data_52_w = 20'b11101000011001011010,
		data_53_w = 20'b11100111111111000101,
		data_54_w = 20'b11100111100100110110,
		data_55_w = 20'b11100111001010101110,
		data_56_w = 20'b11100110110000101011,
		data_57_w = 20'b11100110010110101101,
		data_58_w = 20'b11100101111100110110,
		data_59_w = 20'b11100101100011000101,
		data_5_w = 20'b11111101100001100010,
		data_60_w = 20'b11100101001001011001,
		data_61_w = 20'b11100100101111110011,
		data_62_w = 20'b11100100010110010010,
		data_63_w = 20'b11100011111100111000,
		data_64_w = 20'b11100011100011100011,
		data_65_w = 20'b11100011001010010011,
		data_66_w = 20'b11100010110001001010,
		data_67_w = 20'b11100010011000000101,
		data_68_w = 20'b11100001111111000111,
		data_69_w = 20'b11100001100110001110,
		data_6_w = 20'b11111101000010001101,
		data_70_w = 20'b11100001001101011010,
		data_71_w = 20'b11100000110100101100,
		data_72_w = 20'b11100000011100000011,
		data_73_w = 20'b11100000000011011111,
		data_74_w = 20'b11011111101011000001,
		data_75_w = 20'b11011111010010101001,
		data_76_w = 20'b11011110111010010101,
		data_77_w = 20'b11011110100010000111,
		data_78_w = 20'b11011110001001111110,
		data_79_w = 20'b11011101110001111010,
		data_7_w = 20'b11111100100011000000,
		data_80_w = 20'b11011101011001111100,
		data_81_w = 20'b11011101000010000011,
		data_82_w = 20'b11011100101010001110,
		data_83_w = 20'b11011100010010011111,
		data_84_w = 20'b11011011111010110101,
		data_85_w = 20'b11011011100011010001,
		data_86_w = 20'b11011011001011110001,
		data_87_w = 20'b11011010110100010110,
		data_88_w = 20'b11011010011101000000,
		data_89_w = 20'b11011010000101101111,
		data_8_w = 20'b11111100000011111011,
		data_90_w = 20'b11011001101110100100,
		data_91_w = 20'b11011001010111011101,
		data_92_w = 20'b11011001000000011011,
		data_93_w = 20'b11011000101001011101,
		data_94_w = 20'b11011000010010100101,
		data_95_w = 20'b11010111111011110001,
		data_96_w = 20'b11010111100101000011,
		data_97_w = 20'b11010111001110011001,
		data_98_w = 20'b11010110110111110100,
		data_99_w = 20'b11010110100001010011,
		data_9_w = 20'b11111011100100111101;
endmodule //ip_atan_altfp_atan_lut0_f07


//altfp_atan_lut1 CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone III" add data
//VERSION_BEGIN 13.1 cbx_altfp_atan 2013:10:23:18:05:48:SJ cbx_altpriority_encoder 2013:10:23:18:05:48:SJ cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_lpm_clshift 2013:10:23:18:05:48:SJ cbx_lpm_mult 2013:10:23:18:05:48:SJ cbx_lpm_mux 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END

//synthesis_resources = lpm_mux 1 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ip_atan_altfp_atan_lut1_g07
	( 
	add,
	data) ;
	input   [8:0]  add;
	output   [10:0]  data;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [8:0]  add;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [10:0]   wire_mux9_result;
	wire  [10:0]  data_0_w;
	wire  [10:0]  data_100_w;
	wire  [10:0]  data_101_w;
	wire  [10:0]  data_102_w;
	wire  [10:0]  data_103_w;
	wire  [10:0]  data_104_w;
	wire  [10:0]  data_105_w;
	wire  [10:0]  data_106_w;
	wire  [10:0]  data_107_w;
	wire  [10:0]  data_108_w;
	wire  [10:0]  data_109_w;
	wire  [10:0]  data_10_w;
	wire  [10:0]  data_110_w;
	wire  [10:0]  data_111_w;
	wire  [10:0]  data_112_w;
	wire  [10:0]  data_113_w;
	wire  [10:0]  data_114_w;
	wire  [10:0]  data_115_w;
	wire  [10:0]  data_116_w;
	wire  [10:0]  data_117_w;
	wire  [10:0]  data_118_w;
	wire  [10:0]  data_119_w;
	wire  [10:0]  data_11_w;
	wire  [10:0]  data_120_w;
	wire  [10:0]  data_121_w;
	wire  [10:0]  data_122_w;
	wire  [10:0]  data_123_w;
	wire  [10:0]  data_124_w;
	wire  [10:0]  data_125_w;
	wire  [10:0]  data_126_w;
	wire  [10:0]  data_127_w;
	wire  [10:0]  data_128_w;
	wire  [10:0]  data_129_w;
	wire  [10:0]  data_12_w;
	wire  [10:0]  data_130_w;
	wire  [10:0]  data_131_w;
	wire  [10:0]  data_132_w;
	wire  [10:0]  data_133_w;
	wire  [10:0]  data_134_w;
	wire  [10:0]  data_135_w;
	wire  [10:0]  data_136_w;
	wire  [10:0]  data_137_w;
	wire  [10:0]  data_138_w;
	wire  [10:0]  data_139_w;
	wire  [10:0]  data_13_w;
	wire  [10:0]  data_140_w;
	wire  [10:0]  data_141_w;
	wire  [10:0]  data_142_w;
	wire  [10:0]  data_143_w;
	wire  [10:0]  data_144_w;
	wire  [10:0]  data_145_w;
	wire  [10:0]  data_146_w;
	wire  [10:0]  data_147_w;
	wire  [10:0]  data_148_w;
	wire  [10:0]  data_149_w;
	wire  [10:0]  data_14_w;
	wire  [10:0]  data_150_w;
	wire  [10:0]  data_151_w;
	wire  [10:0]  data_152_w;
	wire  [10:0]  data_153_w;
	wire  [10:0]  data_154_w;
	wire  [10:0]  data_155_w;
	wire  [10:0]  data_156_w;
	wire  [10:0]  data_157_w;
	wire  [10:0]  data_158_w;
	wire  [10:0]  data_159_w;
	wire  [10:0]  data_15_w;
	wire  [10:0]  data_160_w;
	wire  [10:0]  data_161_w;
	wire  [10:0]  data_162_w;
	wire  [10:0]  data_163_w;
	wire  [10:0]  data_164_w;
	wire  [10:0]  data_165_w;
	wire  [10:0]  data_166_w;
	wire  [10:0]  data_167_w;
	wire  [10:0]  data_168_w;
	wire  [10:0]  data_169_w;
	wire  [10:0]  data_16_w;
	wire  [10:0]  data_170_w;
	wire  [10:0]  data_171_w;
	wire  [10:0]  data_172_w;
	wire  [10:0]  data_173_w;
	wire  [10:0]  data_174_w;
	wire  [10:0]  data_175_w;
	wire  [10:0]  data_176_w;
	wire  [10:0]  data_177_w;
	wire  [10:0]  data_178_w;
	wire  [10:0]  data_179_w;
	wire  [10:0]  data_17_w;
	wire  [10:0]  data_180_w;
	wire  [10:0]  data_181_w;
	wire  [10:0]  data_182_w;
	wire  [10:0]  data_183_w;
	wire  [10:0]  data_184_w;
	wire  [10:0]  data_185_w;
	wire  [10:0]  data_186_w;
	wire  [10:0]  data_187_w;
	wire  [10:0]  data_188_w;
	wire  [10:0]  data_189_w;
	wire  [10:0]  data_18_w;
	wire  [10:0]  data_190_w;
	wire  [10:0]  data_191_w;
	wire  [10:0]  data_192_w;
	wire  [10:0]  data_193_w;
	wire  [10:0]  data_194_w;
	wire  [10:0]  data_195_w;
	wire  [10:0]  data_196_w;
	wire  [10:0]  data_197_w;
	wire  [10:0]  data_198_w;
	wire  [10:0]  data_199_w;
	wire  [10:0]  data_19_w;
	wire  [10:0]  data_1_w;
	wire  [10:0]  data_200_w;
	wire  [10:0]  data_201_w;
	wire  [10:0]  data_202_w;
	wire  [10:0]  data_203_w;
	wire  [10:0]  data_204_w;
	wire  [10:0]  data_205_w;
	wire  [10:0]  data_206_w;
	wire  [10:0]  data_207_w;
	wire  [10:0]  data_208_w;
	wire  [10:0]  data_209_w;
	wire  [10:0]  data_20_w;
	wire  [10:0]  data_210_w;
	wire  [10:0]  data_211_w;
	wire  [10:0]  data_212_w;
	wire  [10:0]  data_213_w;
	wire  [10:0]  data_214_w;
	wire  [10:0]  data_215_w;
	wire  [10:0]  data_216_w;
	wire  [10:0]  data_217_w;
	wire  [10:0]  data_218_w;
	wire  [10:0]  data_219_w;
	wire  [10:0]  data_21_w;
	wire  [10:0]  data_220_w;
	wire  [10:0]  data_221_w;
	wire  [10:0]  data_222_w;
	wire  [10:0]  data_223_w;
	wire  [10:0]  data_224_w;
	wire  [10:0]  data_225_w;
	wire  [10:0]  data_226_w;
	wire  [10:0]  data_227_w;
	wire  [10:0]  data_228_w;
	wire  [10:0]  data_229_w;
	wire  [10:0]  data_22_w;
	wire  [10:0]  data_230_w;
	wire  [10:0]  data_231_w;
	wire  [10:0]  data_232_w;
	wire  [10:0]  data_233_w;
	wire  [10:0]  data_234_w;
	wire  [10:0]  data_235_w;
	wire  [10:0]  data_236_w;
	wire  [10:0]  data_237_w;
	wire  [10:0]  data_238_w;
	wire  [10:0]  data_239_w;
	wire  [10:0]  data_23_w;
	wire  [10:0]  data_240_w;
	wire  [10:0]  data_241_w;
	wire  [10:0]  data_242_w;
	wire  [10:0]  data_243_w;
	wire  [10:0]  data_244_w;
	wire  [10:0]  data_245_w;
	wire  [10:0]  data_246_w;
	wire  [10:0]  data_247_w;
	wire  [10:0]  data_248_w;
	wire  [10:0]  data_249_w;
	wire  [10:0]  data_24_w;
	wire  [10:0]  data_250_w;
	wire  [10:0]  data_251_w;
	wire  [10:0]  data_252_w;
	wire  [10:0]  data_253_w;
	wire  [10:0]  data_254_w;
	wire  [10:0]  data_255_w;
	wire  [10:0]  data_256_w;
	wire  [10:0]  data_257_w;
	wire  [10:0]  data_258_w;
	wire  [10:0]  data_259_w;
	wire  [10:0]  data_25_w;
	wire  [10:0]  data_260_w;
	wire  [10:0]  data_261_w;
	wire  [10:0]  data_262_w;
	wire  [10:0]  data_263_w;
	wire  [10:0]  data_264_w;
	wire  [10:0]  data_265_w;
	wire  [10:0]  data_266_w;
	wire  [10:0]  data_267_w;
	wire  [10:0]  data_268_w;
	wire  [10:0]  data_269_w;
	wire  [10:0]  data_26_w;
	wire  [10:0]  data_270_w;
	wire  [10:0]  data_271_w;
	wire  [10:0]  data_272_w;
	wire  [10:0]  data_273_w;
	wire  [10:0]  data_274_w;
	wire  [10:0]  data_275_w;
	wire  [10:0]  data_276_w;
	wire  [10:0]  data_277_w;
	wire  [10:0]  data_278_w;
	wire  [10:0]  data_279_w;
	wire  [10:0]  data_27_w;
	wire  [10:0]  data_280_w;
	wire  [10:0]  data_281_w;
	wire  [10:0]  data_282_w;
	wire  [10:0]  data_283_w;
	wire  [10:0]  data_284_w;
	wire  [10:0]  data_285_w;
	wire  [10:0]  data_286_w;
	wire  [10:0]  data_287_w;
	wire  [10:0]  data_288_w;
	wire  [10:0]  data_289_w;
	wire  [10:0]  data_28_w;
	wire  [10:0]  data_290_w;
	wire  [10:0]  data_291_w;
	wire  [10:0]  data_292_w;
	wire  [10:0]  data_293_w;
	wire  [10:0]  data_294_w;
	wire  [10:0]  data_295_w;
	wire  [10:0]  data_296_w;
	wire  [10:0]  data_297_w;
	wire  [10:0]  data_298_w;
	wire  [10:0]  data_299_w;
	wire  [10:0]  data_29_w;
	wire  [10:0]  data_2_w;
	wire  [10:0]  data_300_w;
	wire  [10:0]  data_301_w;
	wire  [10:0]  data_302_w;
	wire  [10:0]  data_303_w;
	wire  [10:0]  data_304_w;
	wire  [10:0]  data_305_w;
	wire  [10:0]  data_306_w;
	wire  [10:0]  data_307_w;
	wire  [10:0]  data_308_w;
	wire  [10:0]  data_309_w;
	wire  [10:0]  data_30_w;
	wire  [10:0]  data_310_w;
	wire  [10:0]  data_311_w;
	wire  [10:0]  data_312_w;
	wire  [10:0]  data_313_w;
	wire  [10:0]  data_314_w;
	wire  [10:0]  data_315_w;
	wire  [10:0]  data_316_w;
	wire  [10:0]  data_317_w;
	wire  [10:0]  data_318_w;
	wire  [10:0]  data_319_w;
	wire  [10:0]  data_31_w;
	wire  [10:0]  data_320_w;
	wire  [10:0]  data_321_w;
	wire  [10:0]  data_322_w;
	wire  [10:0]  data_323_w;
	wire  [10:0]  data_324_w;
	wire  [10:0]  data_325_w;
	wire  [10:0]  data_326_w;
	wire  [10:0]  data_327_w;
	wire  [10:0]  data_328_w;
	wire  [10:0]  data_329_w;
	wire  [10:0]  data_32_w;
	wire  [10:0]  data_330_w;
	wire  [10:0]  data_331_w;
	wire  [10:0]  data_332_w;
	wire  [10:0]  data_333_w;
	wire  [10:0]  data_334_w;
	wire  [10:0]  data_335_w;
	wire  [10:0]  data_336_w;
	wire  [10:0]  data_337_w;
	wire  [10:0]  data_338_w;
	wire  [10:0]  data_339_w;
	wire  [10:0]  data_33_w;
	wire  [10:0]  data_340_w;
	wire  [10:0]  data_341_w;
	wire  [10:0]  data_342_w;
	wire  [10:0]  data_343_w;
	wire  [10:0]  data_344_w;
	wire  [10:0]  data_345_w;
	wire  [10:0]  data_346_w;
	wire  [10:0]  data_347_w;
	wire  [10:0]  data_348_w;
	wire  [10:0]  data_349_w;
	wire  [10:0]  data_34_w;
	wire  [10:0]  data_350_w;
	wire  [10:0]  data_351_w;
	wire  [10:0]  data_352_w;
	wire  [10:0]  data_353_w;
	wire  [10:0]  data_354_w;
	wire  [10:0]  data_355_w;
	wire  [10:0]  data_356_w;
	wire  [10:0]  data_357_w;
	wire  [10:0]  data_358_w;
	wire  [10:0]  data_359_w;
	wire  [10:0]  data_35_w;
	wire  [10:0]  data_360_w;
	wire  [10:0]  data_361_w;
	wire  [10:0]  data_362_w;
	wire  [10:0]  data_363_w;
	wire  [10:0]  data_364_w;
	wire  [10:0]  data_365_w;
	wire  [10:0]  data_366_w;
	wire  [10:0]  data_367_w;
	wire  [10:0]  data_368_w;
	wire  [10:0]  data_369_w;
	wire  [10:0]  data_36_w;
	wire  [10:0]  data_370_w;
	wire  [10:0]  data_371_w;
	wire  [10:0]  data_372_w;
	wire  [10:0]  data_373_w;
	wire  [10:0]  data_374_w;
	wire  [10:0]  data_375_w;
	wire  [10:0]  data_376_w;
	wire  [10:0]  data_377_w;
	wire  [10:0]  data_378_w;
	wire  [10:0]  data_379_w;
	wire  [10:0]  data_37_w;
	wire  [10:0]  data_380_w;
	wire  [10:0]  data_381_w;
	wire  [10:0]  data_382_w;
	wire  [10:0]  data_383_w;
	wire  [10:0]  data_384_w;
	wire  [10:0]  data_385_w;
	wire  [10:0]  data_386_w;
	wire  [10:0]  data_387_w;
	wire  [10:0]  data_388_w;
	wire  [10:0]  data_389_w;
	wire  [10:0]  data_38_w;
	wire  [10:0]  data_390_w;
	wire  [10:0]  data_391_w;
	wire  [10:0]  data_392_w;
	wire  [10:0]  data_393_w;
	wire  [10:0]  data_394_w;
	wire  [10:0]  data_395_w;
	wire  [10:0]  data_396_w;
	wire  [10:0]  data_397_w;
	wire  [10:0]  data_398_w;
	wire  [10:0]  data_399_w;
	wire  [10:0]  data_39_w;
	wire  [10:0]  data_3_w;
	wire  [10:0]  data_400_w;
	wire  [10:0]  data_401_w;
	wire  [10:0]  data_402_w;
	wire  [10:0]  data_403_w;
	wire  [10:0]  data_404_w;
	wire  [10:0]  data_405_w;
	wire  [10:0]  data_406_w;
	wire  [10:0]  data_407_w;
	wire  [10:0]  data_408_w;
	wire  [10:0]  data_409_w;
	wire  [10:0]  data_40_w;
	wire  [10:0]  data_410_w;
	wire  [10:0]  data_411_w;
	wire  [10:0]  data_412_w;
	wire  [10:0]  data_413_w;
	wire  [10:0]  data_414_w;
	wire  [10:0]  data_415_w;
	wire  [10:0]  data_416_w;
	wire  [10:0]  data_417_w;
	wire  [10:0]  data_418_w;
	wire  [10:0]  data_419_w;
	wire  [10:0]  data_41_w;
	wire  [10:0]  data_420_w;
	wire  [10:0]  data_421_w;
	wire  [10:0]  data_422_w;
	wire  [10:0]  data_423_w;
	wire  [10:0]  data_424_w;
	wire  [10:0]  data_425_w;
	wire  [10:0]  data_426_w;
	wire  [10:0]  data_427_w;
	wire  [10:0]  data_428_w;
	wire  [10:0]  data_429_w;
	wire  [10:0]  data_42_w;
	wire  [10:0]  data_430_w;
	wire  [10:0]  data_431_w;
	wire  [10:0]  data_432_w;
	wire  [10:0]  data_433_w;
	wire  [10:0]  data_434_w;
	wire  [10:0]  data_435_w;
	wire  [10:0]  data_436_w;
	wire  [10:0]  data_437_w;
	wire  [10:0]  data_438_w;
	wire  [10:0]  data_439_w;
	wire  [10:0]  data_43_w;
	wire  [10:0]  data_440_w;
	wire  [10:0]  data_441_w;
	wire  [10:0]  data_442_w;
	wire  [10:0]  data_443_w;
	wire  [10:0]  data_444_w;
	wire  [10:0]  data_445_w;
	wire  [10:0]  data_446_w;
	wire  [10:0]  data_447_w;
	wire  [10:0]  data_448_w;
	wire  [10:0]  data_449_w;
	wire  [10:0]  data_44_w;
	wire  [10:0]  data_450_w;
	wire  [10:0]  data_451_w;
	wire  [10:0]  data_452_w;
	wire  [10:0]  data_453_w;
	wire  [10:0]  data_454_w;
	wire  [10:0]  data_455_w;
	wire  [10:0]  data_456_w;
	wire  [10:0]  data_457_w;
	wire  [10:0]  data_458_w;
	wire  [10:0]  data_459_w;
	wire  [10:0]  data_45_w;
	wire  [10:0]  data_460_w;
	wire  [10:0]  data_461_w;
	wire  [10:0]  data_462_w;
	wire  [10:0]  data_463_w;
	wire  [10:0]  data_464_w;
	wire  [10:0]  data_465_w;
	wire  [10:0]  data_466_w;
	wire  [10:0]  data_467_w;
	wire  [10:0]  data_468_w;
	wire  [10:0]  data_469_w;
	wire  [10:0]  data_46_w;
	wire  [10:0]  data_470_w;
	wire  [10:0]  data_471_w;
	wire  [10:0]  data_472_w;
	wire  [10:0]  data_473_w;
	wire  [10:0]  data_474_w;
	wire  [10:0]  data_475_w;
	wire  [10:0]  data_476_w;
	wire  [10:0]  data_477_w;
	wire  [10:0]  data_478_w;
	wire  [10:0]  data_479_w;
	wire  [10:0]  data_47_w;
	wire  [10:0]  data_480_w;
	wire  [10:0]  data_481_w;
	wire  [10:0]  data_482_w;
	wire  [10:0]  data_483_w;
	wire  [10:0]  data_484_w;
	wire  [10:0]  data_485_w;
	wire  [10:0]  data_486_w;
	wire  [10:0]  data_487_w;
	wire  [10:0]  data_488_w;
	wire  [10:0]  data_489_w;
	wire  [10:0]  data_48_w;
	wire  [10:0]  data_490_w;
	wire  [10:0]  data_491_w;
	wire  [10:0]  data_492_w;
	wire  [10:0]  data_493_w;
	wire  [10:0]  data_494_w;
	wire  [10:0]  data_495_w;
	wire  [10:0]  data_496_w;
	wire  [10:0]  data_497_w;
	wire  [10:0]  data_498_w;
	wire  [10:0]  data_499_w;
	wire  [10:0]  data_49_w;
	wire  [10:0]  data_4_w;
	wire  [10:0]  data_500_w;
	wire  [10:0]  data_501_w;
	wire  [10:0]  data_502_w;
	wire  [10:0]  data_503_w;
	wire  [10:0]  data_504_w;
	wire  [10:0]  data_505_w;
	wire  [10:0]  data_506_w;
	wire  [10:0]  data_507_w;
	wire  [10:0]  data_508_w;
	wire  [10:0]  data_509_w;
	wire  [10:0]  data_50_w;
	wire  [10:0]  data_510_w;
	wire  [10:0]  data_511_w;
	wire  [10:0]  data_51_w;
	wire  [10:0]  data_52_w;
	wire  [10:0]  data_53_w;
	wire  [10:0]  data_54_w;
	wire  [10:0]  data_55_w;
	wire  [10:0]  data_56_w;
	wire  [10:0]  data_57_w;
	wire  [10:0]  data_58_w;
	wire  [10:0]  data_59_w;
	wire  [10:0]  data_5_w;
	wire  [10:0]  data_60_w;
	wire  [10:0]  data_61_w;
	wire  [10:0]  data_62_w;
	wire  [10:0]  data_63_w;
	wire  [10:0]  data_64_w;
	wire  [10:0]  data_65_w;
	wire  [10:0]  data_66_w;
	wire  [10:0]  data_67_w;
	wire  [10:0]  data_68_w;
	wire  [10:0]  data_69_w;
	wire  [10:0]  data_6_w;
	wire  [10:0]  data_70_w;
	wire  [10:0]  data_71_w;
	wire  [10:0]  data_72_w;
	wire  [10:0]  data_73_w;
	wire  [10:0]  data_74_w;
	wire  [10:0]  data_75_w;
	wire  [10:0]  data_76_w;
	wire  [10:0]  data_77_w;
	wire  [10:0]  data_78_w;
	wire  [10:0]  data_79_w;
	wire  [10:0]  data_7_w;
	wire  [10:0]  data_80_w;
	wire  [10:0]  data_81_w;
	wire  [10:0]  data_82_w;
	wire  [10:0]  data_83_w;
	wire  [10:0]  data_84_w;
	wire  [10:0]  data_85_w;
	wire  [10:0]  data_86_w;
	wire  [10:0]  data_87_w;
	wire  [10:0]  data_88_w;
	wire  [10:0]  data_89_w;
	wire  [10:0]  data_8_w;
	wire  [10:0]  data_90_w;
	wire  [10:0]  data_91_w;
	wire  [10:0]  data_92_w;
	wire  [10:0]  data_93_w;
	wire  [10:0]  data_94_w;
	wire  [10:0]  data_95_w;
	wire  [10:0]  data_96_w;
	wire  [10:0]  data_97_w;
	wire  [10:0]  data_98_w;
	wire  [10:0]  data_99_w;
	wire  [10:0]  data_9_w;

	lpm_mux   mux9
	( 
	.data({data_511_w, data_510_w, data_509_w, data_508_w, data_507_w, data_506_w, data_505_w, data_504_w, data_503_w, data_502_w, data_501_w, data_500_w, data_499_w, data_498_w, data_497_w, data_496_w, data_495_w, data_494_w, data_493_w, data_492_w, data_491_w, data_490_w, data_489_w, data_488_w, data_487_w, data_486_w, data_485_w, data_484_w, data_483_w, data_482_w, data_481_w, data_480_w, data_479_w, data_478_w, data_477_w, data_476_w, data_475_w, data_474_w, data_473_w, data_472_w, data_471_w, data_470_w, data_469_w, data_468_w, data_467_w, data_466_w, data_465_w, data_464_w, data_463_w, data_462_w, data_461_w, data_460_w, data_459_w, data_458_w, data_457_w, data_456_w, data_455_w, data_454_w, data_453_w, data_452_w, data_451_w, data_450_w, data_449_w, data_448_w, data_447_w, data_446_w, data_445_w, data_444_w, data_443_w, data_442_w, data_441_w, data_440_w, data_439_w, data_438_w, data_437_w, data_436_w, data_435_w, data_434_w, data_433_w, data_432_w, data_431_w, data_430_w, data_429_w, data_428_w, data_427_w, data_426_w, data_425_w, data_424_w, data_423_w, data_422_w, data_421_w, data_420_w, data_419_w, data_418_w, data_417_w, data_416_w, data_415_w, data_414_w, data_413_w, data_412_w, data_411_w, data_410_w, data_409_w, data_408_w, data_407_w, data_406_w, data_405_w, data_404_w, data_403_w, data_402_w, data_401_w, data_400_w, data_399_w, data_398_w, data_397_w, data_396_w, data_395_w, data_394_w, data_393_w, data_392_w, data_391_w, data_390_w, data_389_w, data_388_w, data_387_w, data_386_w, data_385_w, data_384_w, data_383_w, data_382_w, data_381_w, data_380_w, data_379_w, data_378_w, data_377_w, data_376_w, data_375_w, data_374_w, data_373_w, data_372_w, data_371_w, data_370_w, data_369_w, data_368_w, data_367_w, data_366_w, data_365_w, data_364_w, data_363_w, data_362_w, data_361_w, data_360_w, data_359_w, data_358_w, data_357_w, data_356_w, data_355_w, data_354_w, data_353_w, data_352_w, data_351_w, data_350_w, data_349_w, data_348_w, data_347_w, data_346_w, data_345_w, data_344_w, data_343_w, data_342_w, data_341_w
, data_340_w, data_339_w, data_338_w, data_337_w, data_336_w, data_335_w, data_334_w, data_333_w, data_332_w, data_331_w, data_330_w, data_329_w, data_328_w, data_327_w, data_326_w, data_325_w, data_324_w, data_323_w, data_322_w, data_321_w, data_320_w, data_319_w, data_318_w, data_317_w, data_316_w, data_315_w, data_314_w, data_313_w, data_312_w, data_311_w, data_310_w, data_309_w, data_308_w, data_307_w, data_306_w, data_305_w, data_304_w, data_303_w, data_302_w, data_301_w, data_300_w, data_299_w, data_298_w, data_297_w, data_296_w, data_295_w, data_294_w, data_293_w, data_292_w, data_291_w, data_290_w, data_289_w, data_288_w, data_287_w, data_286_w, data_285_w, data_284_w, data_283_w, data_282_w, data_281_w, data_280_w, data_279_w, data_278_w, data_277_w, data_276_w, data_275_w, data_274_w, data_273_w, data_272_w, data_271_w, data_270_w, data_269_w, data_268_w, data_267_w, data_266_w, data_265_w, data_264_w, data_263_w, data_262_w, data_261_w, data_260_w, data_259_w, data_258_w, data_257_w, data_256_w, data_255_w, data_254_w, data_253_w, data_252_w, data_251_w, data_250_w, data_249_w, data_248_w, data_247_w, data_246_w, data_245_w, data_244_w, data_243_w, data_242_w, data_241_w, data_240_w, data_239_w, data_238_w, data_237_w, data_236_w, data_235_w, data_234_w, data_233_w, data_232_w, data_231_w, data_230_w, data_229_w, data_228_w, data_227_w, data_226_w, data_225_w, data_224_w, data_223_w, data_222_w, data_221_w, data_220_w, data_219_w, data_218_w, data_217_w, data_216_w, data_215_w, data_214_w, data_213_w, data_212_w, data_211_w, data_210_w, data_209_w, data_208_w, data_207_w, data_206_w, data_205_w, data_204_w, data_203_w, data_202_w, data_201_w, data_200_w, data_199_w, data_198_w, data_197_w, data_196_w, data_195_w, data_194_w, data_193_w, data_192_w, data_191_w, data_190_w, data_189_w, data_188_w, data_187_w, data_186_w, data_185_w, data_184_w, data_183_w, data_182_w, data_181_w, data_180_w, data_179_w, data_178_w, data_177_w, data_176_w, data_175_w, data_174_w, data_173_w, data_172_w, data_171_w, data_170_w
, data_169_w, data_168_w, data_167_w, data_166_w, data_165_w, data_164_w, data_163_w, data_162_w, data_161_w, data_160_w, data_159_w, data_158_w, data_157_w, data_156_w, data_155_w, data_154_w, data_153_w, data_152_w, data_151_w, data_150_w, data_149_w, data_148_w, data_147_w, data_146_w, data_145_w, data_144_w, data_143_w, data_142_w, data_141_w, data_140_w, data_139_w, data_138_w, data_137_w, data_136_w, data_135_w, data_134_w, data_133_w, data_132_w, data_131_w, data_130_w, data_129_w, data_128_w, data_127_w, data_126_w, data_125_w, data_124_w, data_123_w, data_122_w, data_121_w, data_120_w, data_119_w, data_118_w, data_117_w, data_116_w, data_115_w, data_114_w, data_113_w, data_112_w, data_111_w, data_110_w, data_109_w, data_108_w, data_107_w, data_106_w, data_105_w, data_104_w, data_103_w, data_102_w, data_101_w, data_100_w, data_99_w, data_98_w, data_97_w, data_96_w, data_95_w, data_94_w, data_93_w, data_92_w, data_91_w, data_90_w, data_89_w, data_88_w, data_87_w, data_86_w, data_85_w, data_84_w, data_83_w, data_82_w, data_81_w, data_80_w, data_79_w, data_78_w, data_77_w, data_76_w, data_75_w, data_74_w, data_73_w, data_72_w, data_71_w, data_70_w, data_69_w, data_68_w, data_67_w, data_66_w, data_65_w, data_64_w, data_63_w, data_62_w, data_61_w, data_60_w, data_59_w, data_58_w, data_57_w, data_56_w, data_55_w, data_54_w, data_53_w, data_52_w, data_51_w, data_50_w, data_49_w, data_48_w, data_47_w, data_46_w, data_45_w, data_44_w, data_43_w, data_42_w, data_41_w, data_40_w, data_39_w, data_38_w, data_37_w, data_36_w, data_35_w, data_34_w, data_33_w, data_32_w, data_31_w, data_30_w, data_29_w, data_28_w, data_27_w, data_26_w, data_25_w, data_24_w, data_23_w, data_22_w, data_21_w, data_20_w, data_19_w, data_18_w, data_17_w, data_16_w, data_15_w, data_14_w, data_13_w, data_12_w, data_11_w, data_10_w, data_9_w, data_8_w, data_7_w, data_6_w, data_5_w, data_4_w, data_3_w, data_2_w, data_1_w, data_0_w}),
	.result(wire_mux9_result),
	.sel(add)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		mux9.lpm_size = 512,
		mux9.lpm_width = 11,
		mux9.lpm_widths = 9,
		mux9.lpm_type = "lpm_mux";
	assign
		data = wire_mux9_result,
		data_0_w = 11'b11111111100,
		data_100_w = 11'b10110010111,
		data_101_w = 11'b10110010010,
		data_102_w = 11'b10110001110,
		data_103_w = 11'b10110001001,
		data_104_w = 11'b10110000101,
		data_105_w = 11'b10110000000,
		data_106_w = 11'b10101111011,
		data_107_w = 11'b10101110111,
		data_108_w = 11'b10101110010,
		data_109_w = 11'b10101101110,
		data_10_w = 11'b11110101111,
		data_110_w = 11'b10101101001,
		data_111_w = 11'b10101100101,
		data_112_w = 11'b10101100001,
		data_113_w = 11'b10101011100,
		data_114_w = 11'b10101011000,
		data_115_w = 11'b10101010011,
		data_116_w = 11'b10101001111,
		data_117_w = 11'b10101001011,
		data_118_w = 11'b10101000111,
		data_119_w = 11'b10101000010,
		data_11_w = 11'b11110100111,
		data_120_w = 11'b10100111110,
		data_121_w = 11'b10100111010,
		data_122_w = 11'b10100110110,
		data_123_w = 11'b10100110001,
		data_124_w = 11'b10100101101,
		data_125_w = 11'b10100101001,
		data_126_w = 11'b10100100101,
		data_127_w = 11'b10100100001,
		data_128_w = 11'b10100011101,
		data_129_w = 11'b10100011001,
		data_12_w = 11'b11110100000,
		data_130_w = 11'b10100010101,
		data_131_w = 11'b10100010001,
		data_132_w = 11'b10100001100,
		data_133_w = 11'b10100001000,
		data_134_w = 11'b10100000100,
		data_135_w = 11'b10100000001,
		data_136_w = 11'b10011111101,
		data_137_w = 11'b10011111001,
		data_138_w = 11'b10011110101,
		data_139_w = 11'b10011110001,
		data_13_w = 11'b11110011000,
		data_140_w = 11'b10011101101,
		data_141_w = 11'b10011101001,
		data_142_w = 11'b10011100101,
		data_143_w = 11'b10011100001,
		data_144_w = 11'b10011011110,
		data_145_w = 11'b10011011010,
		data_146_w = 11'b10011010110,
		data_147_w = 11'b10011010010,
		data_148_w = 11'b10011001111,
		data_149_w = 11'b10011001011,
		data_14_w = 11'b11110010001,
		data_150_w = 11'b10011000111,
		data_151_w = 11'b10011000100,
		data_152_w = 11'b10011000000,
		data_153_w = 11'b10010111100,
		data_154_w = 11'b10010111001,
		data_155_w = 11'b10010110101,
		data_156_w = 11'b10010110001,
		data_157_w = 11'b10010101110,
		data_158_w = 11'b10010101010,
		data_159_w = 11'b10010100111,
		data_15_w = 11'b11110001001,
		data_160_w = 11'b10010100011,
		data_161_w = 11'b10010100000,
		data_162_w = 11'b10010011100,
		data_163_w = 11'b10010011001,
		data_164_w = 11'b10010010101,
		data_165_w = 11'b10010010010,
		data_166_w = 11'b10010001110,
		data_167_w = 11'b10010001011,
		data_168_w = 11'b10010000111,
		data_169_w = 11'b10010000100,
		data_16_w = 11'b11110000010,
		data_170_w = 11'b10010000001,
		data_171_w = 11'b10001111101,
		data_172_w = 11'b10001111010,
		data_173_w = 11'b10001110110,
		data_174_w = 11'b10001110011,
		data_175_w = 11'b10001110000,
		data_176_w = 11'b10001101101,
		data_177_w = 11'b10001101001,
		data_178_w = 11'b10001100110,
		data_179_w = 11'b10001100011,
		data_17_w = 11'b11101111011,
		data_180_w = 11'b10001100000,
		data_181_w = 11'b10001011100,
		data_182_w = 11'b10001011001,
		data_183_w = 11'b10001010110,
		data_184_w = 11'b10001010011,
		data_185_w = 11'b10001010000,
		data_186_w = 11'b10001001100,
		data_187_w = 11'b10001001001,
		data_188_w = 11'b10001000110,
		data_189_w = 11'b10001000011,
		data_18_w = 11'b11101110100,
		data_190_w = 11'b10001000000,
		data_191_w = 11'b10000111101,
		data_192_w = 11'b10000111010,
		data_193_w = 11'b10000110111,
		data_194_w = 11'b10000110100,
		data_195_w = 11'b10000110001,
		data_196_w = 11'b10000101110,
		data_197_w = 11'b10000101011,
		data_198_w = 11'b10000101000,
		data_199_w = 11'b10000100101,
		data_19_w = 11'b11101101100,
		data_1_w = 11'b11111110100,
		data_200_w = 11'b10000100010,
		data_201_w = 11'b10000011111,
		data_202_w = 11'b10000011100,
		data_203_w = 11'b10000011001,
		data_204_w = 11'b10000010110,
		data_205_w = 11'b10000010011,
		data_206_w = 11'b10000010000,
		data_207_w = 11'b10000001101,
		data_208_w = 11'b10000001010,
		data_209_w = 11'b10000000111,
		data_20_w = 11'b11101100101,
		data_210_w = 11'b10000000100,
		data_211_w = 11'b10000000010,
		data_212_w = 11'b01111111111,
		data_213_w = 11'b01111111100,
		data_214_w = 11'b01111111001,
		data_215_w = 11'b01111110110,
		data_216_w = 11'b01111110100,
		data_217_w = 11'b01111110001,
		data_218_w = 11'b01111101110,
		data_219_w = 11'b01111101011,
		data_21_w = 11'b11101011110,
		data_220_w = 11'b01111101001,
		data_221_w = 11'b01111100110,
		data_222_w = 11'b01111100011,
		data_223_w = 11'b01111100000,
		data_224_w = 11'b01111011110,
		data_225_w = 11'b01111011011,
		data_226_w = 11'b01111011000,
		data_227_w = 11'b01111010110,
		data_228_w = 11'b01111010011,
		data_229_w = 11'b01111010000,
		data_22_w = 11'b11101010111,
		data_230_w = 11'b01111001110,
		data_231_w = 11'b01111001011,
		data_232_w = 11'b01111001001,
		data_233_w = 11'b01111000110,
		data_234_w = 11'b01111000011,
		data_235_w = 11'b01111000001,
		data_236_w = 11'b01110111110,
		data_237_w = 11'b01110111100,
		data_238_w = 11'b01110111001,
		data_239_w = 11'b01110110111,
		data_23_w = 11'b11101010000,
		data_240_w = 11'b01110110100,
		data_241_w = 11'b01110110010,
		data_242_w = 11'b01110101111,
		data_243_w = 11'b01110101101,
		data_244_w = 11'b01110101010,
		data_245_w = 11'b01110101000,
		data_246_w = 11'b01110100101,
		data_247_w = 11'b01110100011,
		data_248_w = 11'b01110100000,
		data_249_w = 11'b01110011110,
		data_24_w = 11'b11101001001,
		data_250_w = 11'b01110011011,
		data_251_w = 11'b01110011001,
		data_252_w = 11'b01110010111,
		data_253_w = 11'b01110010100,
		data_254_w = 11'b01110010010,
		data_255_w = 11'b01110001111,
		data_256_w = 11'b01110001101,
		data_257_w = 11'b01110001011,
		data_258_w = 11'b01110001000,
		data_259_w = 11'b01110000110,
		data_25_w = 11'b11101000010,
		data_260_w = 11'b01110000100,
		data_261_w = 11'b01110000001,
		data_262_w = 11'b01101111111,
		data_263_w = 11'b01101111101,
		data_264_w = 11'b01101111010,
		data_265_w = 11'b01101111000,
		data_266_w = 11'b01101110110,
		data_267_w = 11'b01101110100,
		data_268_w = 11'b01101110001,
		data_269_w = 11'b01101101111,
		data_26_w = 11'b11100111011,
		data_270_w = 11'b01101101101,
		data_271_w = 11'b01101101011,
		data_272_w = 11'b01101101000,
		data_273_w = 11'b01101100110,
		data_274_w = 11'b01101100100,
		data_275_w = 11'b01101100010,
		data_276_w = 11'b01101100000,
		data_277_w = 11'b01101011101,
		data_278_w = 11'b01101011011,
		data_279_w = 11'b01101011001,
		data_27_w = 11'b11100110101,
		data_280_w = 11'b01101010111,
		data_281_w = 11'b01101010101,
		data_282_w = 11'b01101010011,
		data_283_w = 11'b01101010000,
		data_284_w = 11'b01101001110,
		data_285_w = 11'b01101001100,
		data_286_w = 11'b01101001010,
		data_287_w = 11'b01101001000,
		data_288_w = 11'b01101000110,
		data_289_w = 11'b01101000100,
		data_28_w = 11'b11100101110,
		data_290_w = 11'b01101000010,
		data_291_w = 11'b01101000000,
		data_292_w = 11'b01100111110,
		data_293_w = 11'b01100111011,
		data_294_w = 11'b01100111001,
		data_295_w = 11'b01100110111,
		data_296_w = 11'b01100110101,
		data_297_w = 11'b01100110011,
		data_298_w = 11'b01100110001,
		data_299_w = 11'b01100101111,
		data_29_w = 11'b11100100111,
		data_2_w = 11'b11111101100,
		data_300_w = 11'b01100101101,
		data_301_w = 11'b01100101011,
		data_302_w = 11'b01100101001,
		data_303_w = 11'b01100100111,
		data_304_w = 11'b01100100101,
		data_305_w = 11'b01100100011,
		data_306_w = 11'b01100100001,
		data_307_w = 11'b01100011111,
		data_308_w = 11'b01100011101,
		data_309_w = 11'b01100011100,
		data_30_w = 11'b11100100000,
		data_310_w = 11'b01100011010,
		data_311_w = 11'b01100011000,
		data_312_w = 11'b01100010110,
		data_313_w = 11'b01100010100,
		data_314_w = 11'b01100010010,
		data_315_w = 11'b01100010000,
		data_316_w = 11'b01100001110,
		data_317_w = 11'b01100001100,
		data_318_w = 11'b01100001010,
		data_319_w = 11'b01100001001,
		data_31_w = 11'b11100011001,
		data_320_w = 11'b01100000111,
		data_321_w = 11'b01100000101,
		data_322_w = 11'b01100000011,
		data_323_w = 11'b01100000001,
		data_324_w = 11'b01011111111,
		data_325_w = 11'b01011111101,
		data_326_w = 11'b01011111100,
		data_327_w = 11'b01011111010,
		data_328_w = 11'b01011111000,
		data_329_w = 11'b01011110110,
		data_32_w = 11'b11100010011,
		data_330_w = 11'b01011110100,
		data_331_w = 11'b01011110011,
		data_332_w = 11'b01011110001,
		data_333_w = 11'b01011101111,
		data_334_w = 11'b01011101101,
		data_335_w = 11'b01011101011,
		data_336_w = 11'b01011101010,
		data_337_w = 11'b01011101000,
		data_338_w = 11'b01011100110,
		data_339_w = 11'b01011100100,
		data_33_w = 11'b11100001100,
		data_340_w = 11'b01011100011,
		data_341_w = 11'b01011100001,
		data_342_w = 11'b01011011111,
		data_343_w = 11'b01011011110,
		data_344_w = 11'b01011011100,
		data_345_w = 11'b01011011010,
		data_346_w = 11'b01011011000,
		data_347_w = 11'b01011010111,
		data_348_w = 11'b01011010101,
		data_349_w = 11'b01011010011,
		data_34_w = 11'b11100000110,
		data_350_w = 11'b01011010010,
		data_351_w = 11'b01011010000,
		data_352_w = 11'b01011001110,
		data_353_w = 11'b01011001101,
		data_354_w = 11'b01011001011,
		data_355_w = 11'b01011001001,
		data_356_w = 11'b01011001000,
		data_357_w = 11'b01011000110,
		data_358_w = 11'b01011000100,
		data_359_w = 11'b01011000011,
		data_35_w = 11'b11011111111,
		data_360_w = 11'b01011000001,
		data_361_w = 11'b01011000000,
		data_362_w = 11'b01010111110,
		data_363_w = 11'b01010111100,
		data_364_w = 11'b01010111011,
		data_365_w = 11'b01010111001,
		data_366_w = 11'b01010111000,
		data_367_w = 11'b01010110110,
		data_368_w = 11'b01010110100,
		data_369_w = 11'b01010110011,
		data_36_w = 11'b11011111001,
		data_370_w = 11'b01010110001,
		data_371_w = 11'b01010110000,
		data_372_w = 11'b01010101110,
		data_373_w = 11'b01010101101,
		data_374_w = 11'b01010101011,
		data_375_w = 11'b01010101010,
		data_376_w = 11'b01010101000,
		data_377_w = 11'b01010100111,
		data_378_w = 11'b01010100101,
		data_379_w = 11'b01010100100,
		data_37_w = 11'b11011110010,
		data_380_w = 11'b01010100010,
		data_381_w = 11'b01010100000,
		data_382_w = 11'b01010011111,
		data_383_w = 11'b01010011101,
		data_384_w = 11'b01010011100,
		data_385_w = 11'b01010011011,
		data_386_w = 11'b01010011001,
		data_387_w = 11'b01010011000,
		data_388_w = 11'b01010010110,
		data_389_w = 11'b01010010101,
		data_38_w = 11'b11011101100,
		data_390_w = 11'b01010010011,
		data_391_w = 11'b01010010010,
		data_392_w = 11'b01010010000,
		data_393_w = 11'b01010001111,
		data_394_w = 11'b01010001101,
		data_395_w = 11'b01010001100,
		data_396_w = 11'b01010001010,
		data_397_w = 11'b01010001001,
		data_398_w = 11'b01010001000,
		data_399_w = 11'b01010000110,
		data_39_w = 11'b11011100101,
		data_3_w = 11'b11111100100,
		data_400_w = 11'b01010000101,
		data_401_w = 11'b01010000011,
		data_402_w = 11'b01010000010,
		data_403_w = 11'b01010000001,
		data_404_w = 11'b01001111111,
		data_405_w = 11'b01001111110,
		data_406_w = 11'b01001111100,
		data_407_w = 11'b01001111011,
		data_408_w = 11'b01001111010,
		data_409_w = 11'b01001111000,
		data_40_w = 11'b11011011111,
		data_410_w = 11'b01001110111,
		data_411_w = 11'b01001110110,
		data_412_w = 11'b01001110100,
		data_413_w = 11'b01001110011,
		data_414_w = 11'b01001110001,
		data_415_w = 11'b01001110000,
		data_416_w = 11'b01001101111,
		data_417_w = 11'b01001101101,
		data_418_w = 11'b01001101100,
		data_419_w = 11'b01001101011,
		data_41_w = 11'b11011011000,
		data_420_w = 11'b01001101001,
		data_421_w = 11'b01001101000,
		data_422_w = 11'b01001100111,
		data_423_w = 11'b01001100101,
		data_424_w = 11'b01001100100,
		data_425_w = 11'b01001100011,
		data_426_w = 11'b01001100010,
		data_427_w = 11'b01001100000,
		data_428_w = 11'b01001011111,
		data_429_w = 11'b01001011110,
		data_42_w = 11'b11011010010,
		data_430_w = 11'b01001011100,
		data_431_w = 11'b01001011011,
		data_432_w = 11'b01001011010,
		data_433_w = 11'b01001011001,
		data_434_w = 11'b01001010111,
		data_435_w = 11'b01001010110,
		data_436_w = 11'b01001010101,
		data_437_w = 11'b01001010011,
		data_438_w = 11'b01001010010,
		data_439_w = 11'b01001010001,
		data_43_w = 11'b11011001100,
		data_440_w = 11'b01001010000,
		data_441_w = 11'b01001001111,
		data_442_w = 11'b01001001101,
		data_443_w = 11'b01001001100,
		data_444_w = 11'b01001001011,
		data_445_w = 11'b01001001010,
		data_446_w = 11'b01001001000,
		data_447_w = 11'b01001000111,
		data_448_w = 11'b01001000110,
		data_449_w = 11'b01001000101,
		data_44_w = 11'b11011000110,
		data_450_w = 11'b01001000100,
		data_451_w = 11'b01001000010,
		data_452_w = 11'b01001000001,
		data_453_w = 11'b01001000000,
		data_454_w = 11'b01000111111,
		data_455_w = 11'b01000111110,
		data_456_w = 11'b01000111100,
		data_457_w = 11'b01000111011,
		data_458_w = 11'b01000111010,
		data_459_w = 11'b01000111001,
		data_45_w = 11'b11010111111,
		data_460_w = 11'b01000111000,
		data_461_w = 11'b01000110110,
		data_462_w = 11'b01000110101,
		data_463_w = 11'b01000110100,
		data_464_w = 11'b01000110011,
		data_465_w = 11'b01000110010,
		data_466_w = 11'b01000110001,
		data_467_w = 11'b01000110000,
		data_468_w = 11'b01000101110,
		data_469_w = 11'b01000101101,
		data_46_w = 11'b11010111001,
		data_470_w = 11'b01000101100,
		data_471_w = 11'b01000101011,
		data_472_w = 11'b01000101010,
		data_473_w = 11'b01000101001,
		data_474_w = 11'b01000101000,
		data_475_w = 11'b01000100111,
		data_476_w = 11'b01000100101,
		data_477_w = 11'b01000100100,
		data_478_w = 11'b01000100011,
		data_479_w = 11'b01000100010,
		data_47_w = 11'b11010110011,
		data_480_w = 11'b01000100001,
		data_481_w = 11'b01000100000,
		data_482_w = 11'b01000011111,
		data_483_w = 11'b01000011110,
		data_484_w = 11'b01000011101,
		data_485_w = 11'b01000011100,
		data_486_w = 11'b01000011010,
		data_487_w = 11'b01000011001,
		data_488_w = 11'b01000011000,
		data_489_w = 11'b01000010111,
		data_48_w = 11'b11010101101,
		data_490_w = 11'b01000010110,
		data_491_w = 11'b01000010101,
		data_492_w = 11'b01000010100,
		data_493_w = 11'b01000010011,
		data_494_w = 11'b01000010010,
		data_495_w = 11'b01000010001,
		data_496_w = 11'b01000010000,
		data_497_w = 11'b01000001111,
		data_498_w = 11'b01000001110,
		data_499_w = 11'b01000001101,
		data_49_w = 11'b11010100111,
		data_4_w = 11'b11111011100,
		data_500_w = 11'b01000001100,
		data_501_w = 11'b01000001011,
		data_502_w = 11'b01000001010,
		data_503_w = 11'b01000001001,
		data_504_w = 11'b01000001000,
		data_505_w = 11'b01000000111,
		data_506_w = 11'b01000000110,
		data_507_w = 11'b01000000101,
		data_508_w = 11'b01000000100,
		data_509_w = 11'b01000000011,
		data_50_w = 11'b11010100001,
		data_510_w = 11'b01000000010,
		data_511_w = 11'b01000000001,
		data_51_w = 11'b11010011011,
		data_52_w = 11'b11010010101,
		data_53_w = 11'b11010001111,
		data_54_w = 11'b11010001001,
		data_55_w = 11'b11010000011,
		data_56_w = 11'b11001111101,
		data_57_w = 11'b11001110111,
		data_58_w = 11'b11001110010,
		data_59_w = 11'b11001101100,
		data_5_w = 11'b11111010101,
		data_60_w = 11'b11001100110,
		data_61_w = 11'b11001100000,
		data_62_w = 11'b11001011011,
		data_63_w = 11'b11001010101,
		data_64_w = 11'b11001001111,
		data_65_w = 11'b11001001010,
		data_66_w = 11'b11001000100,
		data_67_w = 11'b11000111111,
		data_68_w = 11'b11000111001,
		data_69_w = 11'b11000110100,
		data_6_w = 11'b11111001101,
		data_70_w = 11'b11000101110,
		data_71_w = 11'b11000101001,
		data_72_w = 11'b11000100011,
		data_73_w = 11'b11000011110,
		data_74_w = 11'b11000011001,
		data_75_w = 11'b11000010011,
		data_76_w = 11'b11000001110,
		data_77_w = 11'b11000001001,
		data_78_w = 11'b11000000100,
		data_79_w = 11'b10111111110,
		data_7_w = 11'b11111000101,
		data_80_w = 11'b10111111001,
		data_81_w = 11'b10111110100,
		data_82_w = 11'b10111101111,
		data_83_w = 11'b10111101010,
		data_84_w = 11'b10111100101,
		data_85_w = 11'b10111100000,
		data_86_w = 11'b10111011011,
		data_87_w = 11'b10111010110,
		data_88_w = 11'b10111010001,
		data_89_w = 11'b10111001100,
		data_8_w = 11'b11110111110,
		data_90_w = 11'b10111000111,
		data_91_w = 11'b10111000010,
		data_92_w = 11'b10110111101,
		data_93_w = 11'b10110111000,
		data_94_w = 11'b10110110100,
		data_95_w = 11'b10110101111,
		data_96_w = 11'b10110101010,
		data_97_w = 11'b10110100101,
		data_98_w = 11'b10110100000,
		data_99_w = 11'b10110011100,
		data_9_w = 11'b11110110110;
endmodule //ip_atan_altfp_atan_lut1_g07

//synthesis_resources = lpm_add_sub 1 lpm_mult 1 lpm_mux 2 reg 127 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ip_atan_altfp_atan_divest_t0a
	( 
	aclr,
	clk_en,
	clock,
	divisor,
	invdivisor) ;
	input   aclr;
	input   clk_en;
	input   clock;
	input   [18:0]  divisor;
	output   [17:0]  invdivisor;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clk_en;
	tri0   clock;
	tri0   [18:0]  divisor;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [19:0]   wire_lower_data;
	wire  [10:0]   wire_upper_data;
	reg	[19:0]	invdivisorff;
	reg	[8:0]	oneaddff;
	reg	[10:0]	onelutff;
	reg	[8:0]	twodelff_0;
	reg	[8:0]	twodelff_1;
	reg	[8:0]	zipaddff;
	reg	[19:0]	ziplutdelff_0;
	reg	[19:0]	ziplutdelff_1;
	reg	[19:0]	ziplutff;
	wire  [19:0]   wire_invdivisorff_sub_result;
	wire  [10:0]   wire_mulcore_result;
	wire  [8:0]  one_w;
	wire  [10:0]  onelut_w;
	wire  [10:0]  onetwo_w;
	wire  [8:0]  two_w;
	wire  [16:0]  zerovec_w;
	wire  [19:0]  ziplut_w;

	ip_atan_altfp_atan_lut0_f07   lower
	( 
	.add(zipaddff),
	.data(wire_lower_data));
	ip_atan_altfp_atan_lut1_g07   upper
	( 
	.add(oneaddff),
	.data(wire_upper_data));
	// synopsys translate_off
	initial
		invdivisorff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) invdivisorff <= 20'b0;
		else if  (clk_en == 1'b1)   invdivisorff <= wire_invdivisorff_sub_result;
	// synopsys translate_off
	initial
		oneaddff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) oneaddff <= 9'b0;
		else if  (clk_en == 1'b1)   oneaddff <= one_w;
	// synopsys translate_off
	initial
		onelutff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) onelutff <= 11'b0;
		else if  (clk_en == 1'b1)   onelutff <= onelut_w;
	// synopsys translate_off
	initial
		twodelff_0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) twodelff_0 <= 9'b0;
		else if  (clk_en == 1'b1)   twodelff_0 <= two_w;
	// synopsys translate_off
	initial
		twodelff_1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) twodelff_1 <= 9'b0;
		else if  (clk_en == 1'b1)   twodelff_1 <= twodelff_0;
	// synopsys translate_off
	initial
		zipaddff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) zipaddff <= 9'b0;
		else if  (clk_en == 1'b1)   zipaddff <= one_w;
	// synopsys translate_off
	initial
		ziplutdelff_0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) ziplutdelff_0 <= 20'b0;
		else if  (clk_en == 1'b1)   ziplutdelff_0 <= ziplutff;
	// synopsys translate_off
	initial
		ziplutdelff_1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) ziplutdelff_1 <= 20'b0;
		else if  (clk_en == 1'b1)   ziplutdelff_1 <= ziplutdelff_0;
	// synopsys translate_off
	initial
		ziplutff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) ziplutff <= 20'b0;
		else if  (clk_en == 1'b1)   ziplutff <= ziplut_w;
	lpm_add_sub   invdivisorff_sub
	( 
	.cout(),
	.dataa(ziplutdelff_1),
	.datab({zerovec_w[8:0], onetwo_w}),
	.overflow(),
	.result(wire_invdivisorff_sub_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.cin(),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		invdivisorff_sub.lpm_direction = "SUB",
		invdivisorff_sub.lpm_representation = "UNSIGNED",
		invdivisorff_sub.lpm_width = 20,
		invdivisorff_sub.lpm_type = "lpm_add_sub";
	lpm_mult   mulcore
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.dataa(onelutff),
	.datab(twodelff_1[8:0]),
	.result(wire_mulcore_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.sum({1{1'b0}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		mulcore.lpm_pipeline = 2,
		mulcore.lpm_representation = "UNSIGNED",
		mulcore.lpm_widtha = 11,
		mulcore.lpm_widthb = 9,
		mulcore.lpm_widthp = 11,
		mulcore.lpm_type = "lpm_mult";
	assign
		invdivisor = {invdivisorff[19:2]},
		one_w = divisor[17:9],
		onelut_w = wire_upper_data,
		onetwo_w = wire_mulcore_result,
		two_w = divisor[8:0],
		zerovec_w = {17{1'b0}},
		ziplut_w = wire_lower_data;
endmodule //ip_atan_altfp_atan_divest_t0a

//synthesis_resources = lpm_add_sub 2 lpm_mult 3 lpm_mux 2 reg 416 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ip_atan_altfp_atan_invcore_gt9
	( 
	aclr,
	clk_en,
	clock,
	divisor,
	quotient) ;
	input   aclr;
	input   clk_en;
	input   clock;
	input   [35:0]  divisor;
	output   [35:0]  quotient;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clk_en;
	tri0   clock;
	tri0   [35:0]  divisor;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [35:0]   wire_delinone_cc;
	wire  [17:0]   wire_deloneone_cc;
	wire  [17:0]   wire_invcore_invdivisor;
	reg	[36:0]	nextguessff;
	wire  [36:0]   wire_nextguessff_sub_result;
	wire  [35:0]   wire_mulscaleone_result;
	wire  [35:0]   wire_mult7_result;
	wire  const_nextguessff_w;
	wire  [17:0]  delinvdivisor_w;
	wire  [35:0]  divisordel_w;
	wire  [17:0]  invdivisor_w;
	wire  [35:0]  quotientnode_w;
	wire  [35:0]  scaleden_w;
	wire  [36:0]  twonode_w;
	wire  [35:0]  zerovec_w;

	ip_atan_altfp_atan_del_nk9   delinone
	( 
	.aa(divisor),
	.aclr(aclr),
	.cc(wire_delinone_cc),
	.clk_en(clk_en),
	.clock(clock));
	ip_atan_altfp_atan_del_mk9   deloneone
	( 
	.aa(invdivisor_w),
	.aclr(aclr),
	.cc(wire_deloneone_cc),
	.clk_en(clk_en),
	.clock(clock));
	ip_atan_altfp_atan_divest_t0a   invcore
	( 
	.aclr(aclr),
	.clk_en(clk_en),
	.clock(clock),
	.divisor(divisor[35:17]),
	.invdivisor(wire_invcore_invdivisor));
	// synopsys translate_off
	initial
		nextguessff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) nextguessff <= 37'b0;
		else if  (clk_en == 1'b1)   nextguessff <= {wire_nextguessff_sub_result[36:0]};
	lpm_add_sub   nextguessff_sub
	( 
	.cout(),
	.dataa(twonode_w),
	.datab({const_nextguessff_w, scaleden_w}),
	.overflow(),
	.result(wire_nextguessff_sub_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.cin(),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		nextguessff_sub.lpm_direction = "SUB",
		nextguessff_sub.lpm_representation = "UNSIGNED",
		nextguessff_sub.lpm_width = 37,
		nextguessff_sub.lpm_type = "lpm_add_sub";
	lpm_mult   mulscaleone
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.dataa(divisordel_w),
	.datab(invdivisor_w),
	.result(wire_mulscaleone_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.sum({1{1'b0}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		mulscaleone.lpm_pipeline = 3,
		mulscaleone.lpm_representation = "UNSIGNED",
		mulscaleone.lpm_widtha = 36,
		mulscaleone.lpm_widthb = 18,
		mulscaleone.lpm_widthp = 36,
		mulscaleone.lpm_type = "lpm_mult";
	lpm_mult   mult7
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.dataa(nextguessff[35:0]),
	.datab(delinvdivisor_w),
	.result(wire_mult7_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.sum({1{1'b0}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		mult7.lpm_pipeline = 3,
		mult7.lpm_representation = "UNSIGNED",
		mult7.lpm_widtha = 36,
		mult7.lpm_widthb = 18,
		mult7.lpm_widthp = 36,
		mult7.lpm_type = "lpm_mult";
	assign
		const_nextguessff_w = 1'b0,
		delinvdivisor_w = wire_deloneone_cc,
		divisordel_w = wire_delinone_cc,
		invdivisor_w = wire_invcore_invdivisor,
		quotient = quotientnode_w,
		quotientnode_w = wire_mult7_result,
		scaleden_w = wire_mulscaleone_result,
		twonode_w = {1'b1, zerovec_w},
		zerovec_w = {36{1'b0}};
endmodule //ip_atan_altfp_atan_invcore_gt9


//altfp_atan_lut CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone III" add data
//VERSION_BEGIN 13.1 cbx_altfp_atan 2013:10:23:18:05:48:SJ cbx_altpriority_encoder 2013:10:23:18:05:48:SJ cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_lpm_clshift 2013:10:23:18:05:48:SJ cbx_lpm_mult 2013:10:23:18:05:48:SJ cbx_lpm_mux 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END

//synthesis_resources = lpm_mux 1 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ip_atan_altfp_atan_lut_vu6
	( 
	add,
	data) ;
	input   [9:0]  add;
	output   [35:0]  data;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [9:0]  add;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [35:0]   wire_mux10_result;
	wire  [35:0]  data_w_0;
	wire  [35:0]  data_w_1;
	wire  [35:0]  data_w_10;
	wire  [35:0]  data_w_100;
	wire  [35:0]  data_w_1000;
	wire  [35:0]  data_w_1001;
	wire  [35:0]  data_w_1002;
	wire  [35:0]  data_w_1003;
	wire  [35:0]  data_w_1004;
	wire  [35:0]  data_w_1005;
	wire  [35:0]  data_w_1006;
	wire  [35:0]  data_w_1007;
	wire  [35:0]  data_w_1008;
	wire  [35:0]  data_w_1009;
	wire  [35:0]  data_w_101;
	wire  [35:0]  data_w_1010;
	wire  [35:0]  data_w_1011;
	wire  [35:0]  data_w_1012;
	wire  [35:0]  data_w_1013;
	wire  [35:0]  data_w_1014;
	wire  [35:0]  data_w_1015;
	wire  [35:0]  data_w_1016;
	wire  [35:0]  data_w_1017;
	wire  [35:0]  data_w_1018;
	wire  [35:0]  data_w_1019;
	wire  [35:0]  data_w_102;
	wire  [35:0]  data_w_1020;
	wire  [35:0]  data_w_1021;
	wire  [35:0]  data_w_1022;
	wire  [35:0]  data_w_1023;
	wire  [35:0]  data_w_103;
	wire  [35:0]  data_w_104;
	wire  [35:0]  data_w_105;
	wire  [35:0]  data_w_106;
	wire  [35:0]  data_w_107;
	wire  [35:0]  data_w_108;
	wire  [35:0]  data_w_109;
	wire  [35:0]  data_w_11;
	wire  [35:0]  data_w_110;
	wire  [35:0]  data_w_111;
	wire  [35:0]  data_w_112;
	wire  [35:0]  data_w_113;
	wire  [35:0]  data_w_114;
	wire  [35:0]  data_w_115;
	wire  [35:0]  data_w_116;
	wire  [35:0]  data_w_117;
	wire  [35:0]  data_w_118;
	wire  [35:0]  data_w_119;
	wire  [35:0]  data_w_12;
	wire  [35:0]  data_w_120;
	wire  [35:0]  data_w_121;
	wire  [35:0]  data_w_122;
	wire  [35:0]  data_w_123;
	wire  [35:0]  data_w_124;
	wire  [35:0]  data_w_125;
	wire  [35:0]  data_w_126;
	wire  [35:0]  data_w_127;
	wire  [35:0]  data_w_128;
	wire  [35:0]  data_w_129;
	wire  [35:0]  data_w_13;
	wire  [35:0]  data_w_130;
	wire  [35:0]  data_w_131;
	wire  [35:0]  data_w_132;
	wire  [35:0]  data_w_133;
	wire  [35:0]  data_w_134;
	wire  [35:0]  data_w_135;
	wire  [35:0]  data_w_136;
	wire  [35:0]  data_w_137;
	wire  [35:0]  data_w_138;
	wire  [35:0]  data_w_139;
	wire  [35:0]  data_w_14;
	wire  [35:0]  data_w_140;
	wire  [35:0]  data_w_141;
	wire  [35:0]  data_w_142;
	wire  [35:0]  data_w_143;
	wire  [35:0]  data_w_144;
	wire  [35:0]  data_w_145;
	wire  [35:0]  data_w_146;
	wire  [35:0]  data_w_147;
	wire  [35:0]  data_w_148;
	wire  [35:0]  data_w_149;
	wire  [35:0]  data_w_15;
	wire  [35:0]  data_w_150;
	wire  [35:0]  data_w_151;
	wire  [35:0]  data_w_152;
	wire  [35:0]  data_w_153;
	wire  [35:0]  data_w_154;
	wire  [35:0]  data_w_155;
	wire  [35:0]  data_w_156;
	wire  [35:0]  data_w_157;
	wire  [35:0]  data_w_158;
	wire  [35:0]  data_w_159;
	wire  [35:0]  data_w_16;
	wire  [35:0]  data_w_160;
	wire  [35:0]  data_w_161;
	wire  [35:0]  data_w_162;
	wire  [35:0]  data_w_163;
	wire  [35:0]  data_w_164;
	wire  [35:0]  data_w_165;
	wire  [35:0]  data_w_166;
	wire  [35:0]  data_w_167;
	wire  [35:0]  data_w_168;
	wire  [35:0]  data_w_169;
	wire  [35:0]  data_w_17;
	wire  [35:0]  data_w_170;
	wire  [35:0]  data_w_171;
	wire  [35:0]  data_w_172;
	wire  [35:0]  data_w_173;
	wire  [35:0]  data_w_174;
	wire  [35:0]  data_w_175;
	wire  [35:0]  data_w_176;
	wire  [35:0]  data_w_177;
	wire  [35:0]  data_w_178;
	wire  [35:0]  data_w_179;
	wire  [35:0]  data_w_18;
	wire  [35:0]  data_w_180;
	wire  [35:0]  data_w_181;
	wire  [35:0]  data_w_182;
	wire  [35:0]  data_w_183;
	wire  [35:0]  data_w_184;
	wire  [35:0]  data_w_185;
	wire  [35:0]  data_w_186;
	wire  [35:0]  data_w_187;
	wire  [35:0]  data_w_188;
	wire  [35:0]  data_w_189;
	wire  [35:0]  data_w_19;
	wire  [35:0]  data_w_190;
	wire  [35:0]  data_w_191;
	wire  [35:0]  data_w_192;
	wire  [35:0]  data_w_193;
	wire  [35:0]  data_w_194;
	wire  [35:0]  data_w_195;
	wire  [35:0]  data_w_196;
	wire  [35:0]  data_w_197;
	wire  [35:0]  data_w_198;
	wire  [35:0]  data_w_199;
	wire  [35:0]  data_w_2;
	wire  [35:0]  data_w_20;
	wire  [35:0]  data_w_200;
	wire  [35:0]  data_w_201;
	wire  [35:0]  data_w_202;
	wire  [35:0]  data_w_203;
	wire  [35:0]  data_w_204;
	wire  [35:0]  data_w_205;
	wire  [35:0]  data_w_206;
	wire  [35:0]  data_w_207;
	wire  [35:0]  data_w_208;
	wire  [35:0]  data_w_209;
	wire  [35:0]  data_w_21;
	wire  [35:0]  data_w_210;
	wire  [35:0]  data_w_211;
	wire  [35:0]  data_w_212;
	wire  [35:0]  data_w_213;
	wire  [35:0]  data_w_214;
	wire  [35:0]  data_w_215;
	wire  [35:0]  data_w_216;
	wire  [35:0]  data_w_217;
	wire  [35:0]  data_w_218;
	wire  [35:0]  data_w_219;
	wire  [35:0]  data_w_22;
	wire  [35:0]  data_w_220;
	wire  [35:0]  data_w_221;
	wire  [35:0]  data_w_222;
	wire  [35:0]  data_w_223;
	wire  [35:0]  data_w_224;
	wire  [35:0]  data_w_225;
	wire  [35:0]  data_w_226;
	wire  [35:0]  data_w_227;
	wire  [35:0]  data_w_228;
	wire  [35:0]  data_w_229;
	wire  [35:0]  data_w_23;
	wire  [35:0]  data_w_230;
	wire  [35:0]  data_w_231;
	wire  [35:0]  data_w_232;
	wire  [35:0]  data_w_233;
	wire  [35:0]  data_w_234;
	wire  [35:0]  data_w_235;
	wire  [35:0]  data_w_236;
	wire  [35:0]  data_w_237;
	wire  [35:0]  data_w_238;
	wire  [35:0]  data_w_239;
	wire  [35:0]  data_w_24;
	wire  [35:0]  data_w_240;
	wire  [35:0]  data_w_241;
	wire  [35:0]  data_w_242;
	wire  [35:0]  data_w_243;
	wire  [35:0]  data_w_244;
	wire  [35:0]  data_w_245;
	wire  [35:0]  data_w_246;
	wire  [35:0]  data_w_247;
	wire  [35:0]  data_w_248;
	wire  [35:0]  data_w_249;
	wire  [35:0]  data_w_25;
	wire  [35:0]  data_w_250;
	wire  [35:0]  data_w_251;
	wire  [35:0]  data_w_252;
	wire  [35:0]  data_w_253;
	wire  [35:0]  data_w_254;
	wire  [35:0]  data_w_255;
	wire  [35:0]  data_w_256;
	wire  [35:0]  data_w_257;
	wire  [35:0]  data_w_258;
	wire  [35:0]  data_w_259;
	wire  [35:0]  data_w_26;
	wire  [35:0]  data_w_260;
	wire  [35:0]  data_w_261;
	wire  [35:0]  data_w_262;
	wire  [35:0]  data_w_263;
	wire  [35:0]  data_w_264;
	wire  [35:0]  data_w_265;
	wire  [35:0]  data_w_266;
	wire  [35:0]  data_w_267;
	wire  [35:0]  data_w_268;
	wire  [35:0]  data_w_269;
	wire  [35:0]  data_w_27;
	wire  [35:0]  data_w_270;
	wire  [35:0]  data_w_271;
	wire  [35:0]  data_w_272;
	wire  [35:0]  data_w_273;
	wire  [35:0]  data_w_274;
	wire  [35:0]  data_w_275;
	wire  [35:0]  data_w_276;
	wire  [35:0]  data_w_277;
	wire  [35:0]  data_w_278;
	wire  [35:0]  data_w_279;
	wire  [35:0]  data_w_28;
	wire  [35:0]  data_w_280;
	wire  [35:0]  data_w_281;
	wire  [35:0]  data_w_282;
	wire  [35:0]  data_w_283;
	wire  [35:0]  data_w_284;
	wire  [35:0]  data_w_285;
	wire  [35:0]  data_w_286;
	wire  [35:0]  data_w_287;
	wire  [35:0]  data_w_288;
	wire  [35:0]  data_w_289;
	wire  [35:0]  data_w_29;
	wire  [35:0]  data_w_290;
	wire  [35:0]  data_w_291;
	wire  [35:0]  data_w_292;
	wire  [35:0]  data_w_293;
	wire  [35:0]  data_w_294;
	wire  [35:0]  data_w_295;
	wire  [35:0]  data_w_296;
	wire  [35:0]  data_w_297;
	wire  [35:0]  data_w_298;
	wire  [35:0]  data_w_299;
	wire  [35:0]  data_w_3;
	wire  [35:0]  data_w_30;
	wire  [35:0]  data_w_300;
	wire  [35:0]  data_w_301;
	wire  [35:0]  data_w_302;
	wire  [35:0]  data_w_303;
	wire  [35:0]  data_w_304;
	wire  [35:0]  data_w_305;
	wire  [35:0]  data_w_306;
	wire  [35:0]  data_w_307;
	wire  [35:0]  data_w_308;
	wire  [35:0]  data_w_309;
	wire  [35:0]  data_w_31;
	wire  [35:0]  data_w_310;
	wire  [35:0]  data_w_311;
	wire  [35:0]  data_w_312;
	wire  [35:0]  data_w_313;
	wire  [35:0]  data_w_314;
	wire  [35:0]  data_w_315;
	wire  [35:0]  data_w_316;
	wire  [35:0]  data_w_317;
	wire  [35:0]  data_w_318;
	wire  [35:0]  data_w_319;
	wire  [35:0]  data_w_32;
	wire  [35:0]  data_w_320;
	wire  [35:0]  data_w_321;
	wire  [35:0]  data_w_322;
	wire  [35:0]  data_w_323;
	wire  [35:0]  data_w_324;
	wire  [35:0]  data_w_325;
	wire  [35:0]  data_w_326;
	wire  [35:0]  data_w_327;
	wire  [35:0]  data_w_328;
	wire  [35:0]  data_w_329;
	wire  [35:0]  data_w_33;
	wire  [35:0]  data_w_330;
	wire  [35:0]  data_w_331;
	wire  [35:0]  data_w_332;
	wire  [35:0]  data_w_333;
	wire  [35:0]  data_w_334;
	wire  [35:0]  data_w_335;
	wire  [35:0]  data_w_336;
	wire  [35:0]  data_w_337;
	wire  [35:0]  data_w_338;
	wire  [35:0]  data_w_339;
	wire  [35:0]  data_w_34;
	wire  [35:0]  data_w_340;
	wire  [35:0]  data_w_341;
	wire  [35:0]  data_w_342;
	wire  [35:0]  data_w_343;
	wire  [35:0]  data_w_344;
	wire  [35:0]  data_w_345;
	wire  [35:0]  data_w_346;
	wire  [35:0]  data_w_347;
	wire  [35:0]  data_w_348;
	wire  [35:0]  data_w_349;
	wire  [35:0]  data_w_35;
	wire  [35:0]  data_w_350;
	wire  [35:0]  data_w_351;
	wire  [35:0]  data_w_352;
	wire  [35:0]  data_w_353;
	wire  [35:0]  data_w_354;
	wire  [35:0]  data_w_355;
	wire  [35:0]  data_w_356;
	wire  [35:0]  data_w_357;
	wire  [35:0]  data_w_358;
	wire  [35:0]  data_w_359;
	wire  [35:0]  data_w_36;
	wire  [35:0]  data_w_360;
	wire  [35:0]  data_w_361;
	wire  [35:0]  data_w_362;
	wire  [35:0]  data_w_363;
	wire  [35:0]  data_w_364;
	wire  [35:0]  data_w_365;
	wire  [35:0]  data_w_366;
	wire  [35:0]  data_w_367;
	wire  [35:0]  data_w_368;
	wire  [35:0]  data_w_369;
	wire  [35:0]  data_w_37;
	wire  [35:0]  data_w_370;
	wire  [35:0]  data_w_371;
	wire  [35:0]  data_w_372;
	wire  [35:0]  data_w_373;
	wire  [35:0]  data_w_374;
	wire  [35:0]  data_w_375;
	wire  [35:0]  data_w_376;
	wire  [35:0]  data_w_377;
	wire  [35:0]  data_w_378;
	wire  [35:0]  data_w_379;
	wire  [35:0]  data_w_38;
	wire  [35:0]  data_w_380;
	wire  [35:0]  data_w_381;
	wire  [35:0]  data_w_382;
	wire  [35:0]  data_w_383;
	wire  [35:0]  data_w_384;
	wire  [35:0]  data_w_385;
	wire  [35:0]  data_w_386;
	wire  [35:0]  data_w_387;
	wire  [35:0]  data_w_388;
	wire  [35:0]  data_w_389;
	wire  [35:0]  data_w_39;
	wire  [35:0]  data_w_390;
	wire  [35:0]  data_w_391;
	wire  [35:0]  data_w_392;
	wire  [35:0]  data_w_393;
	wire  [35:0]  data_w_394;
	wire  [35:0]  data_w_395;
	wire  [35:0]  data_w_396;
	wire  [35:0]  data_w_397;
	wire  [35:0]  data_w_398;
	wire  [35:0]  data_w_399;
	wire  [35:0]  data_w_4;
	wire  [35:0]  data_w_40;
	wire  [35:0]  data_w_400;
	wire  [35:0]  data_w_401;
	wire  [35:0]  data_w_402;
	wire  [35:0]  data_w_403;
	wire  [35:0]  data_w_404;
	wire  [35:0]  data_w_405;
	wire  [35:0]  data_w_406;
	wire  [35:0]  data_w_407;
	wire  [35:0]  data_w_408;
	wire  [35:0]  data_w_409;
	wire  [35:0]  data_w_41;
	wire  [35:0]  data_w_410;
	wire  [35:0]  data_w_411;
	wire  [35:0]  data_w_412;
	wire  [35:0]  data_w_413;
	wire  [35:0]  data_w_414;
	wire  [35:0]  data_w_415;
	wire  [35:0]  data_w_416;
	wire  [35:0]  data_w_417;
	wire  [35:0]  data_w_418;
	wire  [35:0]  data_w_419;
	wire  [35:0]  data_w_42;
	wire  [35:0]  data_w_420;
	wire  [35:0]  data_w_421;
	wire  [35:0]  data_w_422;
	wire  [35:0]  data_w_423;
	wire  [35:0]  data_w_424;
	wire  [35:0]  data_w_425;
	wire  [35:0]  data_w_426;
	wire  [35:0]  data_w_427;
	wire  [35:0]  data_w_428;
	wire  [35:0]  data_w_429;
	wire  [35:0]  data_w_43;
	wire  [35:0]  data_w_430;
	wire  [35:0]  data_w_431;
	wire  [35:0]  data_w_432;
	wire  [35:0]  data_w_433;
	wire  [35:0]  data_w_434;
	wire  [35:0]  data_w_435;
	wire  [35:0]  data_w_436;
	wire  [35:0]  data_w_437;
	wire  [35:0]  data_w_438;
	wire  [35:0]  data_w_439;
	wire  [35:0]  data_w_44;
	wire  [35:0]  data_w_440;
	wire  [35:0]  data_w_441;
	wire  [35:0]  data_w_442;
	wire  [35:0]  data_w_443;
	wire  [35:0]  data_w_444;
	wire  [35:0]  data_w_445;
	wire  [35:0]  data_w_446;
	wire  [35:0]  data_w_447;
	wire  [35:0]  data_w_448;
	wire  [35:0]  data_w_449;
	wire  [35:0]  data_w_45;
	wire  [35:0]  data_w_450;
	wire  [35:0]  data_w_451;
	wire  [35:0]  data_w_452;
	wire  [35:0]  data_w_453;
	wire  [35:0]  data_w_454;
	wire  [35:0]  data_w_455;
	wire  [35:0]  data_w_456;
	wire  [35:0]  data_w_457;
	wire  [35:0]  data_w_458;
	wire  [35:0]  data_w_459;
	wire  [35:0]  data_w_46;
	wire  [35:0]  data_w_460;
	wire  [35:0]  data_w_461;
	wire  [35:0]  data_w_462;
	wire  [35:0]  data_w_463;
	wire  [35:0]  data_w_464;
	wire  [35:0]  data_w_465;
	wire  [35:0]  data_w_466;
	wire  [35:0]  data_w_467;
	wire  [35:0]  data_w_468;
	wire  [35:0]  data_w_469;
	wire  [35:0]  data_w_47;
	wire  [35:0]  data_w_470;
	wire  [35:0]  data_w_471;
	wire  [35:0]  data_w_472;
	wire  [35:0]  data_w_473;
	wire  [35:0]  data_w_474;
	wire  [35:0]  data_w_475;
	wire  [35:0]  data_w_476;
	wire  [35:0]  data_w_477;
	wire  [35:0]  data_w_478;
	wire  [35:0]  data_w_479;
	wire  [35:0]  data_w_48;
	wire  [35:0]  data_w_480;
	wire  [35:0]  data_w_481;
	wire  [35:0]  data_w_482;
	wire  [35:0]  data_w_483;
	wire  [35:0]  data_w_484;
	wire  [35:0]  data_w_485;
	wire  [35:0]  data_w_486;
	wire  [35:0]  data_w_487;
	wire  [35:0]  data_w_488;
	wire  [35:0]  data_w_489;
	wire  [35:0]  data_w_49;
	wire  [35:0]  data_w_490;
	wire  [35:0]  data_w_491;
	wire  [35:0]  data_w_492;
	wire  [35:0]  data_w_493;
	wire  [35:0]  data_w_494;
	wire  [35:0]  data_w_495;
	wire  [35:0]  data_w_496;
	wire  [35:0]  data_w_497;
	wire  [35:0]  data_w_498;
	wire  [35:0]  data_w_499;
	wire  [35:0]  data_w_5;
	wire  [35:0]  data_w_50;
	wire  [35:0]  data_w_500;
	wire  [35:0]  data_w_501;
	wire  [35:0]  data_w_502;
	wire  [35:0]  data_w_503;
	wire  [35:0]  data_w_504;
	wire  [35:0]  data_w_505;
	wire  [35:0]  data_w_506;
	wire  [35:0]  data_w_507;
	wire  [35:0]  data_w_508;
	wire  [35:0]  data_w_509;
	wire  [35:0]  data_w_51;
	wire  [35:0]  data_w_510;
	wire  [35:0]  data_w_511;
	wire  [35:0]  data_w_512;
	wire  [35:0]  data_w_513;
	wire  [35:0]  data_w_514;
	wire  [35:0]  data_w_515;
	wire  [35:0]  data_w_516;
	wire  [35:0]  data_w_517;
	wire  [35:0]  data_w_518;
	wire  [35:0]  data_w_519;
	wire  [35:0]  data_w_52;
	wire  [35:0]  data_w_520;
	wire  [35:0]  data_w_521;
	wire  [35:0]  data_w_522;
	wire  [35:0]  data_w_523;
	wire  [35:0]  data_w_524;
	wire  [35:0]  data_w_525;
	wire  [35:0]  data_w_526;
	wire  [35:0]  data_w_527;
	wire  [35:0]  data_w_528;
	wire  [35:0]  data_w_529;
	wire  [35:0]  data_w_53;
	wire  [35:0]  data_w_530;
	wire  [35:0]  data_w_531;
	wire  [35:0]  data_w_532;
	wire  [35:0]  data_w_533;
	wire  [35:0]  data_w_534;
	wire  [35:0]  data_w_535;
	wire  [35:0]  data_w_536;
	wire  [35:0]  data_w_537;
	wire  [35:0]  data_w_538;
	wire  [35:0]  data_w_539;
	wire  [35:0]  data_w_54;
	wire  [35:0]  data_w_540;
	wire  [35:0]  data_w_541;
	wire  [35:0]  data_w_542;
	wire  [35:0]  data_w_543;
	wire  [35:0]  data_w_544;
	wire  [35:0]  data_w_545;
	wire  [35:0]  data_w_546;
	wire  [35:0]  data_w_547;
	wire  [35:0]  data_w_548;
	wire  [35:0]  data_w_549;
	wire  [35:0]  data_w_55;
	wire  [35:0]  data_w_550;
	wire  [35:0]  data_w_551;
	wire  [35:0]  data_w_552;
	wire  [35:0]  data_w_553;
	wire  [35:0]  data_w_554;
	wire  [35:0]  data_w_555;
	wire  [35:0]  data_w_556;
	wire  [35:0]  data_w_557;
	wire  [35:0]  data_w_558;
	wire  [35:0]  data_w_559;
	wire  [35:0]  data_w_56;
	wire  [35:0]  data_w_560;
	wire  [35:0]  data_w_561;
	wire  [35:0]  data_w_562;
	wire  [35:0]  data_w_563;
	wire  [35:0]  data_w_564;
	wire  [35:0]  data_w_565;
	wire  [35:0]  data_w_566;
	wire  [35:0]  data_w_567;
	wire  [35:0]  data_w_568;
	wire  [35:0]  data_w_569;
	wire  [35:0]  data_w_57;
	wire  [35:0]  data_w_570;
	wire  [35:0]  data_w_571;
	wire  [35:0]  data_w_572;
	wire  [35:0]  data_w_573;
	wire  [35:0]  data_w_574;
	wire  [35:0]  data_w_575;
	wire  [35:0]  data_w_576;
	wire  [35:0]  data_w_577;
	wire  [35:0]  data_w_578;
	wire  [35:0]  data_w_579;
	wire  [35:0]  data_w_58;
	wire  [35:0]  data_w_580;
	wire  [35:0]  data_w_581;
	wire  [35:0]  data_w_582;
	wire  [35:0]  data_w_583;
	wire  [35:0]  data_w_584;
	wire  [35:0]  data_w_585;
	wire  [35:0]  data_w_586;
	wire  [35:0]  data_w_587;
	wire  [35:0]  data_w_588;
	wire  [35:0]  data_w_589;
	wire  [35:0]  data_w_59;
	wire  [35:0]  data_w_590;
	wire  [35:0]  data_w_591;
	wire  [35:0]  data_w_592;
	wire  [35:0]  data_w_593;
	wire  [35:0]  data_w_594;
	wire  [35:0]  data_w_595;
	wire  [35:0]  data_w_596;
	wire  [35:0]  data_w_597;
	wire  [35:0]  data_w_598;
	wire  [35:0]  data_w_599;
	wire  [35:0]  data_w_6;
	wire  [35:0]  data_w_60;
	wire  [35:0]  data_w_600;
	wire  [35:0]  data_w_601;
	wire  [35:0]  data_w_602;
	wire  [35:0]  data_w_603;
	wire  [35:0]  data_w_604;
	wire  [35:0]  data_w_605;
	wire  [35:0]  data_w_606;
	wire  [35:0]  data_w_607;
	wire  [35:0]  data_w_608;
	wire  [35:0]  data_w_609;
	wire  [35:0]  data_w_61;
	wire  [35:0]  data_w_610;
	wire  [35:0]  data_w_611;
	wire  [35:0]  data_w_612;
	wire  [35:0]  data_w_613;
	wire  [35:0]  data_w_614;
	wire  [35:0]  data_w_615;
	wire  [35:0]  data_w_616;
	wire  [35:0]  data_w_617;
	wire  [35:0]  data_w_618;
	wire  [35:0]  data_w_619;
	wire  [35:0]  data_w_62;
	wire  [35:0]  data_w_620;
	wire  [35:0]  data_w_621;
	wire  [35:0]  data_w_622;
	wire  [35:0]  data_w_623;
	wire  [35:0]  data_w_624;
	wire  [35:0]  data_w_625;
	wire  [35:0]  data_w_626;
	wire  [35:0]  data_w_627;
	wire  [35:0]  data_w_628;
	wire  [35:0]  data_w_629;
	wire  [35:0]  data_w_63;
	wire  [35:0]  data_w_630;
	wire  [35:0]  data_w_631;
	wire  [35:0]  data_w_632;
	wire  [35:0]  data_w_633;
	wire  [35:0]  data_w_634;
	wire  [35:0]  data_w_635;
	wire  [35:0]  data_w_636;
	wire  [35:0]  data_w_637;
	wire  [35:0]  data_w_638;
	wire  [35:0]  data_w_639;
	wire  [35:0]  data_w_64;
	wire  [35:0]  data_w_640;
	wire  [35:0]  data_w_641;
	wire  [35:0]  data_w_642;
	wire  [35:0]  data_w_643;
	wire  [35:0]  data_w_644;
	wire  [35:0]  data_w_645;
	wire  [35:0]  data_w_646;
	wire  [35:0]  data_w_647;
	wire  [35:0]  data_w_648;
	wire  [35:0]  data_w_649;
	wire  [35:0]  data_w_65;
	wire  [35:0]  data_w_650;
	wire  [35:0]  data_w_651;
	wire  [35:0]  data_w_652;
	wire  [35:0]  data_w_653;
	wire  [35:0]  data_w_654;
	wire  [35:0]  data_w_655;
	wire  [35:0]  data_w_656;
	wire  [35:0]  data_w_657;
	wire  [35:0]  data_w_658;
	wire  [35:0]  data_w_659;
	wire  [35:0]  data_w_66;
	wire  [35:0]  data_w_660;
	wire  [35:0]  data_w_661;
	wire  [35:0]  data_w_662;
	wire  [35:0]  data_w_663;
	wire  [35:0]  data_w_664;
	wire  [35:0]  data_w_665;
	wire  [35:0]  data_w_666;
	wire  [35:0]  data_w_667;
	wire  [35:0]  data_w_668;
	wire  [35:0]  data_w_669;
	wire  [35:0]  data_w_67;
	wire  [35:0]  data_w_670;
	wire  [35:0]  data_w_671;
	wire  [35:0]  data_w_672;
	wire  [35:0]  data_w_673;
	wire  [35:0]  data_w_674;
	wire  [35:0]  data_w_675;
	wire  [35:0]  data_w_676;
	wire  [35:0]  data_w_677;
	wire  [35:0]  data_w_678;
	wire  [35:0]  data_w_679;
	wire  [35:0]  data_w_68;
	wire  [35:0]  data_w_680;
	wire  [35:0]  data_w_681;
	wire  [35:0]  data_w_682;
	wire  [35:0]  data_w_683;
	wire  [35:0]  data_w_684;
	wire  [35:0]  data_w_685;
	wire  [35:0]  data_w_686;
	wire  [35:0]  data_w_687;
	wire  [35:0]  data_w_688;
	wire  [35:0]  data_w_689;
	wire  [35:0]  data_w_69;
	wire  [35:0]  data_w_690;
	wire  [35:0]  data_w_691;
	wire  [35:0]  data_w_692;
	wire  [35:0]  data_w_693;
	wire  [35:0]  data_w_694;
	wire  [35:0]  data_w_695;
	wire  [35:0]  data_w_696;
	wire  [35:0]  data_w_697;
	wire  [35:0]  data_w_698;
	wire  [35:0]  data_w_699;
	wire  [35:0]  data_w_7;
	wire  [35:0]  data_w_70;
	wire  [35:0]  data_w_700;
	wire  [35:0]  data_w_701;
	wire  [35:0]  data_w_702;
	wire  [35:0]  data_w_703;
	wire  [35:0]  data_w_704;
	wire  [35:0]  data_w_705;
	wire  [35:0]  data_w_706;
	wire  [35:0]  data_w_707;
	wire  [35:0]  data_w_708;
	wire  [35:0]  data_w_709;
	wire  [35:0]  data_w_71;
	wire  [35:0]  data_w_710;
	wire  [35:0]  data_w_711;
	wire  [35:0]  data_w_712;
	wire  [35:0]  data_w_713;
	wire  [35:0]  data_w_714;
	wire  [35:0]  data_w_715;
	wire  [35:0]  data_w_716;
	wire  [35:0]  data_w_717;
	wire  [35:0]  data_w_718;
	wire  [35:0]  data_w_719;
	wire  [35:0]  data_w_72;
	wire  [35:0]  data_w_720;
	wire  [35:0]  data_w_721;
	wire  [35:0]  data_w_722;
	wire  [35:0]  data_w_723;
	wire  [35:0]  data_w_724;
	wire  [35:0]  data_w_725;
	wire  [35:0]  data_w_726;
	wire  [35:0]  data_w_727;
	wire  [35:0]  data_w_728;
	wire  [35:0]  data_w_729;
	wire  [35:0]  data_w_73;
	wire  [35:0]  data_w_730;
	wire  [35:0]  data_w_731;
	wire  [35:0]  data_w_732;
	wire  [35:0]  data_w_733;
	wire  [35:0]  data_w_734;
	wire  [35:0]  data_w_735;
	wire  [35:0]  data_w_736;
	wire  [35:0]  data_w_737;
	wire  [35:0]  data_w_738;
	wire  [35:0]  data_w_739;
	wire  [35:0]  data_w_74;
	wire  [35:0]  data_w_740;
	wire  [35:0]  data_w_741;
	wire  [35:0]  data_w_742;
	wire  [35:0]  data_w_743;
	wire  [35:0]  data_w_744;
	wire  [35:0]  data_w_745;
	wire  [35:0]  data_w_746;
	wire  [35:0]  data_w_747;
	wire  [35:0]  data_w_748;
	wire  [35:0]  data_w_749;
	wire  [35:0]  data_w_75;
	wire  [35:0]  data_w_750;
	wire  [35:0]  data_w_751;
	wire  [35:0]  data_w_752;
	wire  [35:0]  data_w_753;
	wire  [35:0]  data_w_754;
	wire  [35:0]  data_w_755;
	wire  [35:0]  data_w_756;
	wire  [35:0]  data_w_757;
	wire  [35:0]  data_w_758;
	wire  [35:0]  data_w_759;
	wire  [35:0]  data_w_76;
	wire  [35:0]  data_w_760;
	wire  [35:0]  data_w_761;
	wire  [35:0]  data_w_762;
	wire  [35:0]  data_w_763;
	wire  [35:0]  data_w_764;
	wire  [35:0]  data_w_765;
	wire  [35:0]  data_w_766;
	wire  [35:0]  data_w_767;
	wire  [35:0]  data_w_768;
	wire  [35:0]  data_w_769;
	wire  [35:0]  data_w_77;
	wire  [35:0]  data_w_770;
	wire  [35:0]  data_w_771;
	wire  [35:0]  data_w_772;
	wire  [35:0]  data_w_773;
	wire  [35:0]  data_w_774;
	wire  [35:0]  data_w_775;
	wire  [35:0]  data_w_776;
	wire  [35:0]  data_w_777;
	wire  [35:0]  data_w_778;
	wire  [35:0]  data_w_779;
	wire  [35:0]  data_w_78;
	wire  [35:0]  data_w_780;
	wire  [35:0]  data_w_781;
	wire  [35:0]  data_w_782;
	wire  [35:0]  data_w_783;
	wire  [35:0]  data_w_784;
	wire  [35:0]  data_w_785;
	wire  [35:0]  data_w_786;
	wire  [35:0]  data_w_787;
	wire  [35:0]  data_w_788;
	wire  [35:0]  data_w_789;
	wire  [35:0]  data_w_79;
	wire  [35:0]  data_w_790;
	wire  [35:0]  data_w_791;
	wire  [35:0]  data_w_792;
	wire  [35:0]  data_w_793;
	wire  [35:0]  data_w_794;
	wire  [35:0]  data_w_795;
	wire  [35:0]  data_w_796;
	wire  [35:0]  data_w_797;
	wire  [35:0]  data_w_798;
	wire  [35:0]  data_w_799;
	wire  [35:0]  data_w_8;
	wire  [35:0]  data_w_80;
	wire  [35:0]  data_w_800;
	wire  [35:0]  data_w_801;
	wire  [35:0]  data_w_802;
	wire  [35:0]  data_w_803;
	wire  [35:0]  data_w_804;
	wire  [35:0]  data_w_805;
	wire  [35:0]  data_w_806;
	wire  [35:0]  data_w_807;
	wire  [35:0]  data_w_808;
	wire  [35:0]  data_w_809;
	wire  [35:0]  data_w_81;
	wire  [35:0]  data_w_810;
	wire  [35:0]  data_w_811;
	wire  [35:0]  data_w_812;
	wire  [35:0]  data_w_813;
	wire  [35:0]  data_w_814;
	wire  [35:0]  data_w_815;
	wire  [35:0]  data_w_816;
	wire  [35:0]  data_w_817;
	wire  [35:0]  data_w_818;
	wire  [35:0]  data_w_819;
	wire  [35:0]  data_w_82;
	wire  [35:0]  data_w_820;
	wire  [35:0]  data_w_821;
	wire  [35:0]  data_w_822;
	wire  [35:0]  data_w_823;
	wire  [35:0]  data_w_824;
	wire  [35:0]  data_w_825;
	wire  [35:0]  data_w_826;
	wire  [35:0]  data_w_827;
	wire  [35:0]  data_w_828;
	wire  [35:0]  data_w_829;
	wire  [35:0]  data_w_83;
	wire  [35:0]  data_w_830;
	wire  [35:0]  data_w_831;
	wire  [35:0]  data_w_832;
	wire  [35:0]  data_w_833;
	wire  [35:0]  data_w_834;
	wire  [35:0]  data_w_835;
	wire  [35:0]  data_w_836;
	wire  [35:0]  data_w_837;
	wire  [35:0]  data_w_838;
	wire  [35:0]  data_w_839;
	wire  [35:0]  data_w_84;
	wire  [35:0]  data_w_840;
	wire  [35:0]  data_w_841;
	wire  [35:0]  data_w_842;
	wire  [35:0]  data_w_843;
	wire  [35:0]  data_w_844;
	wire  [35:0]  data_w_845;
	wire  [35:0]  data_w_846;
	wire  [35:0]  data_w_847;
	wire  [35:0]  data_w_848;
	wire  [35:0]  data_w_849;
	wire  [35:0]  data_w_85;
	wire  [35:0]  data_w_850;
	wire  [35:0]  data_w_851;
	wire  [35:0]  data_w_852;
	wire  [35:0]  data_w_853;
	wire  [35:0]  data_w_854;
	wire  [35:0]  data_w_855;
	wire  [35:0]  data_w_856;
	wire  [35:0]  data_w_857;
	wire  [35:0]  data_w_858;
	wire  [35:0]  data_w_859;
	wire  [35:0]  data_w_86;
	wire  [35:0]  data_w_860;
	wire  [35:0]  data_w_861;
	wire  [35:0]  data_w_862;
	wire  [35:0]  data_w_863;
	wire  [35:0]  data_w_864;
	wire  [35:0]  data_w_865;
	wire  [35:0]  data_w_866;
	wire  [35:0]  data_w_867;
	wire  [35:0]  data_w_868;
	wire  [35:0]  data_w_869;
	wire  [35:0]  data_w_87;
	wire  [35:0]  data_w_870;
	wire  [35:0]  data_w_871;
	wire  [35:0]  data_w_872;
	wire  [35:0]  data_w_873;
	wire  [35:0]  data_w_874;
	wire  [35:0]  data_w_875;
	wire  [35:0]  data_w_876;
	wire  [35:0]  data_w_877;
	wire  [35:0]  data_w_878;
	wire  [35:0]  data_w_879;
	wire  [35:0]  data_w_88;
	wire  [35:0]  data_w_880;
	wire  [35:0]  data_w_881;
	wire  [35:0]  data_w_882;
	wire  [35:0]  data_w_883;
	wire  [35:0]  data_w_884;
	wire  [35:0]  data_w_885;
	wire  [35:0]  data_w_886;
	wire  [35:0]  data_w_887;
	wire  [35:0]  data_w_888;
	wire  [35:0]  data_w_889;
	wire  [35:0]  data_w_89;
	wire  [35:0]  data_w_890;
	wire  [35:0]  data_w_891;
	wire  [35:0]  data_w_892;
	wire  [35:0]  data_w_893;
	wire  [35:0]  data_w_894;
	wire  [35:0]  data_w_895;
	wire  [35:0]  data_w_896;
	wire  [35:0]  data_w_897;
	wire  [35:0]  data_w_898;
	wire  [35:0]  data_w_899;
	wire  [35:0]  data_w_9;
	wire  [35:0]  data_w_90;
	wire  [35:0]  data_w_900;
	wire  [35:0]  data_w_901;
	wire  [35:0]  data_w_902;
	wire  [35:0]  data_w_903;
	wire  [35:0]  data_w_904;
	wire  [35:0]  data_w_905;
	wire  [35:0]  data_w_906;
	wire  [35:0]  data_w_907;
	wire  [35:0]  data_w_908;
	wire  [35:0]  data_w_909;
	wire  [35:0]  data_w_91;
	wire  [35:0]  data_w_910;
	wire  [35:0]  data_w_911;
	wire  [35:0]  data_w_912;
	wire  [35:0]  data_w_913;
	wire  [35:0]  data_w_914;
	wire  [35:0]  data_w_915;
	wire  [35:0]  data_w_916;
	wire  [35:0]  data_w_917;
	wire  [35:0]  data_w_918;
	wire  [35:0]  data_w_919;
	wire  [35:0]  data_w_92;
	wire  [35:0]  data_w_920;
	wire  [35:0]  data_w_921;
	wire  [35:0]  data_w_922;
	wire  [35:0]  data_w_923;
	wire  [35:0]  data_w_924;
	wire  [35:0]  data_w_925;
	wire  [35:0]  data_w_926;
	wire  [35:0]  data_w_927;
	wire  [35:0]  data_w_928;
	wire  [35:0]  data_w_929;
	wire  [35:0]  data_w_93;
	wire  [35:0]  data_w_930;
	wire  [35:0]  data_w_931;
	wire  [35:0]  data_w_932;
	wire  [35:0]  data_w_933;
	wire  [35:0]  data_w_934;
	wire  [35:0]  data_w_935;
	wire  [35:0]  data_w_936;
	wire  [35:0]  data_w_937;
	wire  [35:0]  data_w_938;
	wire  [35:0]  data_w_939;
	wire  [35:0]  data_w_94;
	wire  [35:0]  data_w_940;
	wire  [35:0]  data_w_941;
	wire  [35:0]  data_w_942;
	wire  [35:0]  data_w_943;
	wire  [35:0]  data_w_944;
	wire  [35:0]  data_w_945;
	wire  [35:0]  data_w_946;
	wire  [35:0]  data_w_947;
	wire  [35:0]  data_w_948;
	wire  [35:0]  data_w_949;
	wire  [35:0]  data_w_95;
	wire  [35:0]  data_w_950;
	wire  [35:0]  data_w_951;
	wire  [35:0]  data_w_952;
	wire  [35:0]  data_w_953;
	wire  [35:0]  data_w_954;
	wire  [35:0]  data_w_955;
	wire  [35:0]  data_w_956;
	wire  [35:0]  data_w_957;
	wire  [35:0]  data_w_958;
	wire  [35:0]  data_w_959;
	wire  [35:0]  data_w_96;
	wire  [35:0]  data_w_960;
	wire  [35:0]  data_w_961;
	wire  [35:0]  data_w_962;
	wire  [35:0]  data_w_963;
	wire  [35:0]  data_w_964;
	wire  [35:0]  data_w_965;
	wire  [35:0]  data_w_966;
	wire  [35:0]  data_w_967;
	wire  [35:0]  data_w_968;
	wire  [35:0]  data_w_969;
	wire  [35:0]  data_w_97;
	wire  [35:0]  data_w_970;
	wire  [35:0]  data_w_971;
	wire  [35:0]  data_w_972;
	wire  [35:0]  data_w_973;
	wire  [35:0]  data_w_974;
	wire  [35:0]  data_w_975;
	wire  [35:0]  data_w_976;
	wire  [35:0]  data_w_977;
	wire  [35:0]  data_w_978;
	wire  [35:0]  data_w_979;
	wire  [35:0]  data_w_98;
	wire  [35:0]  data_w_980;
	wire  [35:0]  data_w_981;
	wire  [35:0]  data_w_982;
	wire  [35:0]  data_w_983;
	wire  [35:0]  data_w_984;
	wire  [35:0]  data_w_985;
	wire  [35:0]  data_w_986;
	wire  [35:0]  data_w_987;
	wire  [35:0]  data_w_988;
	wire  [35:0]  data_w_989;
	wire  [35:0]  data_w_99;
	wire  [35:0]  data_w_990;
	wire  [35:0]  data_w_991;
	wire  [35:0]  data_w_992;
	wire  [35:0]  data_w_993;
	wire  [35:0]  data_w_994;
	wire  [35:0]  data_w_995;
	wire  [35:0]  data_w_996;
	wire  [35:0]  data_w_997;
	wire  [35:0]  data_w_998;
	wire  [35:0]  data_w_999;

	lpm_mux   mux10
	( 
	.data({data_w_1023, data_w_1022, data_w_1021, data_w_1020, data_w_1019, data_w_1018, data_w_1017, data_w_1016, data_w_1015, data_w_1014, data_w_1013, data_w_1012, data_w_1011, data_w_1010, data_w_1009, data_w_1008, data_w_1007, data_w_1006, data_w_1005, data_w_1004, data_w_1003, data_w_1002, data_w_1001, data_w_1000, data_w_999, data_w_998, data_w_997, data_w_996, data_w_995, data_w_994, data_w_993, data_w_992, data_w_991, data_w_990, data_w_989, data_w_988, data_w_987, data_w_986, data_w_985, data_w_984, data_w_983, data_w_982, data_w_981, data_w_980, data_w_979, data_w_978, data_w_977, data_w_976, data_w_975, data_w_974, data_w_973, data_w_972, data_w_971, data_w_970, data_w_969, data_w_968, data_w_967, data_w_966, data_w_965, data_w_964, data_w_963, data_w_962, data_w_961, data_w_960, data_w_959, data_w_958, data_w_957, data_w_956, data_w_955, data_w_954, data_w_953, data_w_952, data_w_951, data_w_950, data_w_949, data_w_948, data_w_947, data_w_946, data_w_945, data_w_944, data_w_943, data_w_942, data_w_941, data_w_940, data_w_939, data_w_938, data_w_937, data_w_936, data_w_935, data_w_934, data_w_933, data_w_932, data_w_931, data_w_930, data_w_929, data_w_928, data_w_927, data_w_926, data_w_925, data_w_924, data_w_923, data_w_922, data_w_921, data_w_920, data_w_919, data_w_918, data_w_917, data_w_916, data_w_915, data_w_914, data_w_913, data_w_912, data_w_911, data_w_910, data_w_909, data_w_908, data_w_907, data_w_906, data_w_905, data_w_904, data_w_903, data_w_902, data_w_901, data_w_900, data_w_899, data_w_898, data_w_897, data_w_896, data_w_895, data_w_894, data_w_893, data_w_892, data_w_891, data_w_890, data_w_889, data_w_888, data_w_887, data_w_886, data_w_885, data_w_884, data_w_883, data_w_882, data_w_881, data_w_880, data_w_879, data_w_878, data_w_877, data_w_876, data_w_875, data_w_874, data_w_873, data_w_872, data_w_871, data_w_870, data_w_869, data_w_868, data_w_867, data_w_866, data_w_865, data_w_864, data_w_863, data_w_862, data_w_861, data_w_860, data_w_859, data_w_858, data_w_857, data_w_856, data_w_855
, data_w_854, data_w_853, data_w_852, data_w_851, data_w_850, data_w_849, data_w_848, data_w_847, data_w_846, data_w_845, data_w_844, data_w_843, data_w_842, data_w_841, data_w_840, data_w_839, data_w_838, data_w_837, data_w_836, data_w_835, data_w_834, data_w_833, data_w_832, data_w_831, data_w_830, data_w_829, data_w_828, data_w_827, data_w_826, data_w_825, data_w_824, data_w_823, data_w_822, data_w_821, data_w_820, data_w_819, data_w_818, data_w_817, data_w_816, data_w_815, data_w_814, data_w_813, data_w_812, data_w_811, data_w_810, data_w_809, data_w_808, data_w_807, data_w_806, data_w_805, data_w_804, data_w_803, data_w_802, data_w_801, data_w_800, data_w_799, data_w_798, data_w_797, data_w_796, data_w_795, data_w_794, data_w_793, data_w_792, data_w_791, data_w_790, data_w_789, data_w_788, data_w_787, data_w_786, data_w_785, data_w_784, data_w_783, data_w_782, data_w_781, data_w_780, data_w_779, data_w_778, data_w_777, data_w_776, data_w_775, data_w_774, data_w_773, data_w_772, data_w_771, data_w_770, data_w_769, data_w_768, data_w_767, data_w_766, data_w_765, data_w_764, data_w_763, data_w_762, data_w_761, data_w_760, data_w_759, data_w_758, data_w_757, data_w_756, data_w_755, data_w_754, data_w_753, data_w_752, data_w_751, data_w_750, data_w_749, data_w_748, data_w_747, data_w_746, data_w_745, data_w_744, data_w_743, data_w_742, data_w_741, data_w_740, data_w_739, data_w_738, data_w_737, data_w_736, data_w_735, data_w_734, data_w_733, data_w_732, data_w_731, data_w_730, data_w_729, data_w_728, data_w_727, data_w_726, data_w_725, data_w_724, data_w_723, data_w_722, data_w_721, data_w_720, data_w_719, data_w_718, data_w_717, data_w_716, data_w_715, data_w_714, data_w_713, data_w_712, data_w_711, data_w_710, data_w_709, data_w_708, data_w_707, data_w_706, data_w_705, data_w_704, data_w_703, data_w_702, data_w_701, data_w_700, data_w_699, data_w_698, data_w_697, data_w_696, data_w_695, data_w_694, data_w_693, data_w_692, data_w_691, data_w_690, data_w_689, data_w_688, data_w_687, data_w_686, data_w_685, data_w_684
, data_w_683, data_w_682, data_w_681, data_w_680, data_w_679, data_w_678, data_w_677, data_w_676, data_w_675, data_w_674, data_w_673, data_w_672, data_w_671, data_w_670, data_w_669, data_w_668, data_w_667, data_w_666, data_w_665, data_w_664, data_w_663, data_w_662, data_w_661, data_w_660, data_w_659, data_w_658, data_w_657, data_w_656, data_w_655, data_w_654, data_w_653, data_w_652, data_w_651, data_w_650, data_w_649, data_w_648, data_w_647, data_w_646, data_w_645, data_w_644, data_w_643, data_w_642, data_w_641, data_w_640, data_w_639, data_w_638, data_w_637, data_w_636, data_w_635, data_w_634, data_w_633, data_w_632, data_w_631, data_w_630, data_w_629, data_w_628, data_w_627, data_w_626, data_w_625, data_w_624, data_w_623, data_w_622, data_w_621, data_w_620, data_w_619, data_w_618, data_w_617, data_w_616, data_w_615, data_w_614, data_w_613, data_w_612, data_w_611, data_w_610, data_w_609, data_w_608, data_w_607, data_w_606, data_w_605, data_w_604, data_w_603, data_w_602, data_w_601, data_w_600, data_w_599, data_w_598, data_w_597, data_w_596, data_w_595, data_w_594, data_w_593, data_w_592, data_w_591, data_w_590, data_w_589, data_w_588, data_w_587, data_w_586, data_w_585, data_w_584, data_w_583, data_w_582, data_w_581, data_w_580, data_w_579, data_w_578, data_w_577, data_w_576, data_w_575, data_w_574, data_w_573, data_w_572, data_w_571, data_w_570, data_w_569, data_w_568, data_w_567, data_w_566, data_w_565, data_w_564, data_w_563, data_w_562, data_w_561, data_w_560, data_w_559, data_w_558, data_w_557, data_w_556, data_w_555, data_w_554, data_w_553, data_w_552, data_w_551, data_w_550, data_w_549, data_w_548, data_w_547, data_w_546, data_w_545, data_w_544, data_w_543, data_w_542, data_w_541, data_w_540, data_w_539, data_w_538, data_w_537, data_w_536, data_w_535, data_w_534, data_w_533, data_w_532, data_w_531, data_w_530, data_w_529, data_w_528, data_w_527, data_w_526, data_w_525, data_w_524, data_w_523, data_w_522, data_w_521, data_w_520, data_w_519, data_w_518, data_w_517, data_w_516, data_w_515, data_w_514, data_w_513
, data_w_512, data_w_511, data_w_510, data_w_509, data_w_508, data_w_507, data_w_506, data_w_505, data_w_504, data_w_503, data_w_502, data_w_501, data_w_500, data_w_499, data_w_498, data_w_497, data_w_496, data_w_495, data_w_494, data_w_493, data_w_492, data_w_491, data_w_490, data_w_489, data_w_488, data_w_487, data_w_486, data_w_485, data_w_484, data_w_483, data_w_482, data_w_481, data_w_480, data_w_479, data_w_478, data_w_477, data_w_476, data_w_475, data_w_474, data_w_473, data_w_472, data_w_471, data_w_470, data_w_469, data_w_468, data_w_467, data_w_466, data_w_465, data_w_464, data_w_463, data_w_462, data_w_461, data_w_460, data_w_459, data_w_458, data_w_457, data_w_456, data_w_455, data_w_454, data_w_453, data_w_452, data_w_451, data_w_450, data_w_449, data_w_448, data_w_447, data_w_446, data_w_445, data_w_444, data_w_443, data_w_442, data_w_441, data_w_440, data_w_439, data_w_438, data_w_437, data_w_436, data_w_435, data_w_434, data_w_433, data_w_432, data_w_431, data_w_430, data_w_429, data_w_428, data_w_427, data_w_426, data_w_425, data_w_424, data_w_423, data_w_422, data_w_421, data_w_420, data_w_419, data_w_418, data_w_417, data_w_416, data_w_415, data_w_414, data_w_413, data_w_412, data_w_411, data_w_410, data_w_409, data_w_408, data_w_407, data_w_406, data_w_405, data_w_404, data_w_403, data_w_402, data_w_401, data_w_400, data_w_399, data_w_398, data_w_397, data_w_396, data_w_395, data_w_394, data_w_393, data_w_392, data_w_391, data_w_390, data_w_389, data_w_388, data_w_387, data_w_386, data_w_385, data_w_384, data_w_383, data_w_382, data_w_381, data_w_380, data_w_379, data_w_378, data_w_377, data_w_376, data_w_375, data_w_374, data_w_373, data_w_372, data_w_371, data_w_370, data_w_369, data_w_368, data_w_367, data_w_366, data_w_365, data_w_364, data_w_363, data_w_362, data_w_361, data_w_360, data_w_359, data_w_358, data_w_357, data_w_356, data_w_355, data_w_354, data_w_353, data_w_352, data_w_351, data_w_350, data_w_349, data_w_348, data_w_347, data_w_346, data_w_345, data_w_344, data_w_343, data_w_342
, data_w_341, data_w_340, data_w_339, data_w_338, data_w_337, data_w_336, data_w_335, data_w_334, data_w_333, data_w_332, data_w_331, data_w_330, data_w_329, data_w_328, data_w_327, data_w_326, data_w_325, data_w_324, data_w_323, data_w_322, data_w_321, data_w_320, data_w_319, data_w_318, data_w_317, data_w_316, data_w_315, data_w_314, data_w_313, data_w_312, data_w_311, data_w_310, data_w_309, data_w_308, data_w_307, data_w_306, data_w_305, data_w_304, data_w_303, data_w_302, data_w_301, data_w_300, data_w_299, data_w_298, data_w_297, data_w_296, data_w_295, data_w_294, data_w_293, data_w_292, data_w_291, data_w_290, data_w_289, data_w_288, data_w_287, data_w_286, data_w_285, data_w_284, data_w_283, data_w_282, data_w_281, data_w_280, data_w_279, data_w_278, data_w_277, data_w_276, data_w_275, data_w_274, data_w_273, data_w_272, data_w_271, data_w_270, data_w_269, data_w_268, data_w_267, data_w_266, data_w_265, data_w_264, data_w_263, data_w_262, data_w_261, data_w_260, data_w_259, data_w_258, data_w_257, data_w_256, data_w_255, data_w_254, data_w_253, data_w_252, data_w_251, data_w_250, data_w_249, data_w_248, data_w_247, data_w_246, data_w_245, data_w_244, data_w_243, data_w_242, data_w_241, data_w_240, data_w_239, data_w_238, data_w_237, data_w_236, data_w_235, data_w_234, data_w_233, data_w_232, data_w_231, data_w_230, data_w_229, data_w_228, data_w_227, data_w_226, data_w_225, data_w_224, data_w_223, data_w_222, data_w_221, data_w_220, data_w_219, data_w_218, data_w_217, data_w_216, data_w_215, data_w_214, data_w_213, data_w_212, data_w_211, data_w_210, data_w_209, data_w_208, data_w_207, data_w_206, data_w_205, data_w_204, data_w_203, data_w_202, data_w_201, data_w_200, data_w_199, data_w_198, data_w_197, data_w_196, data_w_195, data_w_194, data_w_193, data_w_192, data_w_191, data_w_190, data_w_189, data_w_188, data_w_187, data_w_186, data_w_185, data_w_184, data_w_183, data_w_182, data_w_181, data_w_180, data_w_179, data_w_178, data_w_177, data_w_176, data_w_175, data_w_174, data_w_173, data_w_172, data_w_171
, data_w_170, data_w_169, data_w_168, data_w_167, data_w_166, data_w_165, data_w_164, data_w_163, data_w_162, data_w_161, data_w_160, data_w_159, data_w_158, data_w_157, data_w_156, data_w_155, data_w_154, data_w_153, data_w_152, data_w_151, data_w_150, data_w_149, data_w_148, data_w_147, data_w_146, data_w_145, data_w_144, data_w_143, data_w_142, data_w_141, data_w_140, data_w_139, data_w_138, data_w_137, data_w_136, data_w_135, data_w_134, data_w_133, data_w_132, data_w_131, data_w_130, data_w_129, data_w_128, data_w_127, data_w_126, data_w_125, data_w_124, data_w_123, data_w_122, data_w_121, data_w_120, data_w_119, data_w_118, data_w_117, data_w_116, data_w_115, data_w_114, data_w_113, data_w_112, data_w_111, data_w_110, data_w_109, data_w_108, data_w_107, data_w_106, data_w_105, data_w_104, data_w_103, data_w_102, data_w_101, data_w_100, data_w_99, data_w_98, data_w_97, data_w_96, data_w_95, data_w_94, data_w_93, data_w_92, data_w_91, data_w_90, data_w_89, data_w_88, data_w_87, data_w_86, data_w_85, data_w_84, data_w_83, data_w_82, data_w_81, data_w_80, data_w_79, data_w_78, data_w_77, data_w_76, data_w_75, data_w_74, data_w_73, data_w_72, data_w_71, data_w_70, data_w_69, data_w_68, data_w_67, data_w_66, data_w_65, data_w_64, data_w_63, data_w_62, data_w_61, data_w_60, data_w_59, data_w_58, data_w_57, data_w_56, data_w_55, data_w_54, data_w_53, data_w_52, data_w_51, data_w_50, data_w_49, data_w_48, data_w_47, data_w_46, data_w_45, data_w_44, data_w_43, data_w_42, data_w_41, data_w_40, data_w_39, data_w_38, data_w_37, data_w_36, data_w_35, data_w_34, data_w_33, data_w_32, data_w_31, data_w_30, data_w_29, data_w_28, data_w_27, data_w_26, data_w_25, data_w_24, data_w_23, data_w_22, data_w_21, data_w_20, data_w_19, data_w_18, data_w_17, data_w_16, data_w_15, data_w_14, data_w_13, data_w_12, data_w_11, data_w_10, data_w_9, data_w_8, data_w_7, data_w_6, data_w_5, data_w_4, data_w_3, data_w_2, data_w_1, data_w_0}),
	.result(wire_mux10_result),
	.sel(add)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		mux10.lpm_size = 1024,
		mux10.lpm_width = 36,
		mux10.lpm_widths = 10,
		mux10.lpm_type = "lpm_mux";
	assign
		data = wire_mux10_result,
		data_w_0 = {2{{18{1'b0}}}},
		data_w_1 = {18'b000000000011111111, 18'b111111111110101010},
		data_w_10 = {18'b000000100111111111, 18'b101011001010111110},
		data_w_100 = {18'b000110001011000001, 18'b101110111000101000},
		data_w_1000 = {18'b100011000111110111, 18'b111101000101111110},
		data_w_1001 = {18'b100011001000101101, 18'b000101010100000010},
		data_w_1002 = {18'b100011001001100010, 18'b001000001001101111},
		data_w_1003 = {18'b100011001010010111, 18'b000101100111110100},
		data_w_1004 = {18'b100011001011001011, 18'b111101101111000010},
		data_w_1005 = {18'b100011001100000000, 18'b110000100000001000},
		data_w_1006 = {18'b100011001100110101, 18'b011101111011110110},
		data_w_1007 = {18'b100011001101101010, 18'b000110000010111001},
		data_w_1008 = {18'b100011001110011110, 18'b101000110110000011},
		data_w_1009 = {18'b100011001111010011, 18'b000110010110000000},
		data_w_101 = {18'b000110001110111000, 18'b001111000010001111},
		data_w_1010 = {18'b100011010000000111, 18'b011110100011100010},
		data_w_1011 = {18'b100011010000111011, 18'b110001011111010101},
		data_w_1012 = {18'b100011010001101111, 18'b111111001010001010},
		data_w_1013 = {18'b100011010010100100, 18'b000111100100101110},
		data_w_1014 = {18'b100011010011011000, 18'b001010101111110000},
		data_w_1015 = {18'b100011010100001100, 18'b001000101011111110},
		data_w_1016 = {18'b100011010101000000, 18'b000001011010000110},
		data_w_1017 = {18'b100011010101110011, 18'b110100111010110110},
		data_w_1018 = {18'b100011010110100111, 18'b100011001110111101},
		data_w_1019 = {18'b100011010111011011, 18'b001100010111001000},
		data_w_102 = {18'b000110010010101110, 18'b100011011111010000},
		data_w_1020 = {18'b100011011000001110, 18'b110000010100000100},
		data_w_1021 = {18'b100011011001000010, 18'b001111000110100000},
		data_w_1022 = {18'b100011011001110101, 18'b101000101111001001},
		data_w_1023 = {18'b100011011010101000, 18'b111101001110101011},
		data_w_103 = {18'b000110010110100100, 18'b101100001001011000},
		data_w_104 = {18'b000110011010011010, 18'b101000111010010110},
		data_w_105 = {18'b000110011110010000, 18'b011001101011111101},
		data_w_106 = {18'b000110100010000101, 18'b111110011000000001},
		data_w_107 = {18'b000110100101111011, 18'b010110111000010101},
		data_w_108 = {18'b000110101001110000, 18'b100011000110110100},
		data_w_109 = {18'b000110101101100101, 18'b100010111101010101},
		data_w_11 = {18'b000000101011111111, 18'b100100010001110100},
		data_w_110 = {18'b000110110001011010, 18'b010110010101110100},
		data_w_111 = {18'b000110110101001110, 18'b111101001010010000},
		data_w_112 = {18'b000110111001000011, 18'b010111010100101001},
		data_w_113 = {18'b000110111100110111, 18'b100100101110111111},
		data_w_114 = {18'b000111000000101011, 18'b100101010011010111},
		data_w_115 = {18'b000111000100011111, 18'b011000111011110111},
		data_w_116 = {18'b000111001000010010, 18'b111111100010100111},
		data_w_117 = {18'b000111001100000110, 18'b011001000001110001},
		data_w_118 = {18'b000111001111111001, 18'b100101010011100001},
		data_w_119 = {18'b000111010011101100, 18'b100100010010000111},
		data_w_12 = {18'b000000101111111111, 18'b011100000000110000},
		data_w_120 = {18'b000111010111011111, 18'b010101110111110010},
		data_w_121 = {18'b000111011011010001, 18'b111001111110110100},
		data_w_122 = {18'b000111011111000100, 18'b010000100001100100},
		data_w_123 = {18'b000111100010110110, 18'b011001011010011000},
		data_w_124 = {18'b000111100110101000, 18'b010100100011101001},
		data_w_125 = {18'b000111101010011010, 18'b000001110111110010},
		data_w_126 = {18'b000111101110001011, 18'b100001010001010001},
		data_w_127 = {18'b000111110001111100, 18'b110010101010100110},
		data_w_128 = {18'b000111110101101101, 18'b110101111110010010},
		data_w_129 = {18'b000111111001011110, 18'b101011000110111010},
		data_w_13 = {18'b000000110011111111, 18'b010010001111110011},
		data_w_130 = {18'b000111111101001111, 18'b010001111111000100},
		data_w_131 = {18'b001000000000111111, 18'b101010100001010111},
		data_w_132 = {18'b001000000100101111, 18'b110100101000100000},
		data_w_133 = {18'b001000001000011111, 18'b110000001111001011},
		data_w_134 = {18'b001000001100001111, 18'b011101010000000111},
		data_w_135 = {18'b001000001111111110, 18'b111011100110000110},
		data_w_136 = {18'b001000010011101110, 18'b001011001011111011},
		data_w_137 = {18'b001000010111011101, 18'b001011111100011011},
		data_w_138 = {18'b001000011011001011, 18'b111101110010100001},
		data_w_139 = {18'b001000011110111010, 18'b100000101001000101},
		data_w_14 = {18'b000000110111111111, 18'b000110110110111110},
		data_w_140 = {18'b001000100010101000, 18'b110100011011000100},
		data_w_141 = {18'b001000100110010110, 18'b111001000011011110},
		data_w_142 = {18'b001000101010000100, 18'b101110011101010011},
		data_w_143 = {18'b001000101101110010, 18'b010100100011101000},
		data_w_144 = {18'b001000110001011111, 18'b101011010001100001},
		data_w_145 = {18'b001000110101001100, 18'b110010100010000111},
		data_w_146 = {18'b001000111000111001, 18'b101010010000100101},
		data_w_147 = {18'b001000111100100110, 18'b010010011000000111},
		data_w_148 = {18'b001001000000010010, 18'b101010110011111100},
		data_w_149 = {18'b001001000011111110, 18'b110011011111010101},
		data_w_15 = {18'b000000111011111110, 18'b111001101110010100},
		data_w_150 = {18'b001001000111101010, 18'b101100010101100111},
		data_w_151 = {18'b001001001011010110, 18'b010101010010000101},
		data_w_152 = {18'b001001001111000001, 18'b101110010000001010},
		data_w_153 = {18'b001001010010101100, 18'b110111001011010000},
		data_w_154 = {18'b001001010110010111, 18'b101111111110110011},
		data_w_155 = {18'b001001011010000010, 18'b011000100110010010},
		data_w_156 = {18'b001001011101101100, 18'b110000111101010000},
		data_w_157 = {18'b001001100001010110, 18'b111000111111001111},
		data_w_158 = {18'b001001100101000000, 18'b110000100111110110},
		data_w_159 = {18'b001001101000101010, 18'b010111110010101110},
		data_w_16 = {18'b000000111111111110, 18'b101010101101110111},
		data_w_160 = {18'b001001101100010011, 18'b101110011011100000},
		data_w_161 = {18'b001001101111111100, 18'b110100011101111100},
		data_w_162 = {18'b001001110011100101, 18'b101001110101101110},
		data_w_163 = {18'b001001110111001110, 18'b001110011110101011},
		data_w_164 = {18'b001001111010110110, 18'b100010010100100100},
		data_w_165 = {18'b001001111110011110, 18'b100101010011010010},
		data_w_166 = {18'b001010000010000110, 18'b010111010110101101},
		data_w_167 = {18'b001010000101101101, 18'b111000011010110000},
		data_w_168 = {18'b001010001001010101, 18'b001000011011011000},
		data_w_169 = {18'b001010001100111100, 18'b000111010100100101},
		data_w_17 = {18'b000001000011111110, 18'b011001101101101010},
		data_w_170 = {18'b001010010000100010, 18'b110101000010011010},
		data_w_171 = {18'b001010010100001001, 18'b010001100000111010},
		data_w_172 = {18'b001010010111101111, 18'b011100101100001101},
		data_w_173 = {18'b001010011011010101, 18'b010110100000011011},
		data_w_174 = {18'b001010011110111010, 18'b111110111001110000},
		data_w_175 = {18'b001010100010100000, 18'b010101110100011011},
		data_w_176 = {18'b001010100110000101, 18'b011011001100101010},
		data_w_177 = {18'b001010101001101010, 18'b001110111110110000},
		data_w_178 = {18'b001010101101001110, 18'b110001000111000011},
		data_w_179 = {18'b001010110000110011, 18'b000001100001111001},
		data_w_18 = {18'b000001000111111110, 18'b000110100101110000},
		data_w_180 = {18'b001010110100010111, 18'b000000001011101011},
		data_w_181 = {18'b001010110111111010, 18'b101101000000110110},
		data_w_182 = {18'b001010111011011110, 18'b000111111101110111},
		data_w_183 = {18'b001010111111000001, 18'b010000111111001111},
		data_w_184 = {18'b001011000010100100, 18'b001000000001100001},
		data_w_185 = {18'b001011000110000110, 18'b101101000001010001},
		data_w_186 = {18'b001011001001101000, 18'b111111111011000110},
		data_w_187 = {18'b001011001101001011, 18'b000000101011101011},
		data_w_188 = {18'b001011010000101100, 18'b101111001111101011},
		data_w_189 = {18'b001011010100001110, 18'b001011100011110101},
		data_w_19 = {18'b000001001011111101, 18'b110001001110001101},
		data_w_190 = {18'b001011010111101111, 18'b010101100100111001},
		data_w_191 = {18'b001011011011010000, 18'b001101001111101010},
		data_w_192 = {18'b001011011110110000, 18'b110010100000111100},
		data_w_193 = {18'b001011100010010001, 18'b000101010101101000},
		data_w_194 = {18'b001011100101110001, 18'b000101101010100111},
		data_w_195 = {18'b001011101001010000, 18'b110011011100110101},
		data_w_196 = {18'b001011101100110000, 18'b001110101001010000},
		data_w_197 = {18'b001011110000001111, 18'b010111001100111000},
		data_w_198 = {18'b001011110011101110, 18'b001101000100110010},
		data_w_199 = {18'b001011110111001100, 18'b110000001110000000},
		data_w_2 = {18'b000000000111111111, 18'b111111110101010101},
		data_w_20 = {18'b000001001111111101, 18'b011001011111000101},
		data_w_200 = {18'b001011111010101011, 18'b000000100101101100},
		data_w_201 = {18'b001011111110001000, 18'b111110001000111110},
		data_w_202 = {18'b001100000001100110, 18'b101000110101000010},
		data_w_203 = {18'b001100000101000100, 18'b000000100111000110},
		data_w_204 = {18'b001100001000100001, 18'b000101011100011011},
		data_w_205 = {18'b001100001011111101, 18'b110111010010010011},
		data_w_206 = {18'b001100001111011010, 18'b010110000110000011},
		data_w_207 = {18'b001100010010110110, 18'b100001110101000010},
		data_w_208 = {18'b001100010110010010, 18'b011010011100101001},
		data_w_209 = {18'b001100011001101101, 18'b111111111010010011},
		data_w_21 = {18'b000001010011111100, 18'b111111010000011100},
		data_w_210 = {18'b001100011101001001, 18'b010010001011011110},
		data_w_211 = {18'b001100100000100100, 18'b010001001101101010},
		data_w_212 = {18'b001100100011111110, 18'b111100111110011010},
		data_w_213 = {18'b001100100111011001, 18'b010101011011010000},
		data_w_214 = {18'b001100101010110011, 18'b011010100001110100},
		data_w_215 = {18'b001100101110001101, 18'b001100001111101110},
		data_w_216 = {18'b001100110001100110, 18'b101010100010101001},
		data_w_217 = {18'b001100110100111111, 18'b110101011000010010},
		data_w_218 = {18'b001100111000011000, 18'b101100101110011000},
		data_w_219 = {18'b001100111011110001, 18'b010000100010101100},
		data_w_22 = {18'b000001010111111100, 18'b100010011010010111},
		data_w_220 = {18'b001100111111001001, 18'b100000110011000010},
		data_w_221 = {18'b001101000010100001, 18'b011101011101001111},
		data_w_222 = {18'b001101000101111001, 18'b000110011111001011},
		data_w_223 = {18'b001101001001010000, 18'b011011110110110000},
		data_w_224 = {18'b001101001100100111, 18'b011101100001111001},
		data_w_225 = {18'b001101001111111110, 18'b001011011110100101},
		data_w_226 = {18'b001101010011010100, 18'b100101101010110011},
		data_w_227 = {18'b001101010110101010, 18'b101100000100100111},
		data_w_228 = {18'b001101011010000000, 18'b011110101010000100},
		data_w_229 = {18'b001101011101010101, 18'b111101011001010000},
		data_w_23 = {18'b000001011011111100, 18'b000010110100111100},
		data_w_230 = {18'b001101100000101011, 18'b001000010000010101},
		data_w_231 = {18'b001101100011111111, 18'b111111001101011101},
		data_w_232 = {18'b001101100111010100, 18'b100010001110110100},
		data_w_233 = {18'b001101101010101000, 18'b110001010010101010},
		data_w_234 = {18'b001101101101111100, 18'b101100010111001110},
		data_w_235 = {18'b001101110001010000, 18'b010011011010110100},
		data_w_236 = {18'b001101110100100011, 18'b100110011011110000},
		data_w_237 = {18'b001101110111110110, 18'b100101011000011010},
		data_w_238 = {18'b001101111011001001, 18'b010000001111001010},
		data_w_239 = {18'b001101111110011011, 18'b100110111110011011},
		data_w_24 = {18'b000001011111111011, 18'b100000011000010000},
		data_w_240 = {18'b001110000001101101, 18'b101001100100101001},
		data_w_241 = {18'b001110000100111111, 18'b011000000000010101},
		data_w_242 = {18'b001110001000010000, 18'b110010001111111110},
		data_w_243 = {18'b001110001011100001, 18'b111000010010000111},
		data_w_244 = {18'b001110001110110010, 18'b101010000101010101},
		data_w_245 = {18'b001110010010000011, 18'b000111101000001111},
		data_w_246 = {18'b001110010101010011, 18'b010000111001011110},
		data_w_247 = {18'b001110011000100011, 18'b000101110111101100},
		data_w_248 = {18'b001110011011110010, 18'b100110100001100101},
		data_w_249 = {18'b001110011111000001, 18'b110010110101111000},
		data_w_25 = {18'b000001100011111010, 18'b111010111100011010},
		data_w_250 = {18'b001110100010010000, 18'b101010110011010110},
		data_w_251 = {18'b001110100101011111, 18'b001110011000110001},
		data_w_252 = {18'b001110101000101101, 18'b011101100100111101},
		data_w_253 = {18'b001110101011111011, 18'b011000010110110000},
		data_w_254 = {18'b001110101111001000, 18'b111110101101000010},
		data_w_255 = {18'b001110110010010110, 18'b010000100110101100},
		data_w_256 = {18'b001110110101100011, 18'b001110000010101100},
		data_w_257 = {18'b001110111000101111, 18'b110110111111111101},
		data_w_258 = {18'b001110111011111100, 18'b001011011101100000},
		data_w_259 = {18'b001110111111001000, 18'b001011011010010101},
		data_w_26 = {18'b000001100111111010, 18'b010010011001100001},
		data_w_260 = {18'b001111000010010011, 18'b110110110101100000},
		data_w_261 = {18'b001111000101011111, 18'b001101101110000110},
		data_w_262 = {18'b001111001000101010, 18'b010000000011001101},
		data_w_263 = {18'b001111001011110100, 18'b111101110011111110},
		data_w_264 = {18'b001111001110111111, 18'b010110111111100010},
		data_w_265 = {18'b001111010010001001, 18'b011011100101000111},
		data_w_266 = {18'b001111010101010011, 18'b001011100011111001},
		data_w_267 = {18'b001111011000011100, 18'b100110111011001001},
		data_w_268 = {18'b001111011011100101, 18'b101101101010000111},
		data_w_269 = {18'b001111011110101110, 18'b011111110000000111},
		data_w_27 = {18'b000001101011111001, 18'b100110100111101100},
		data_w_270 = {18'b001111100001110110, 18'b111101001100011110},
		data_w_271 = {18'b001111100100111111, 18'b000101111110100001},
		data_w_272 = {18'b001111101000000110, 18'b111010000101101010},
		data_w_273 = {18'b001111101011001110, 18'b011001100001010010},
		data_w_274 = {18'b001111101110010101, 18'b100100010000110100},
		data_w_275 = {18'b001111110001011100, 18'b011010010011101110},
		data_w_276 = {18'b001111110100100010, 18'b111011101001100000},
		data_w_277 = {18'b001111110111101001, 18'b001000010001101001},
		data_w_278 = {18'b001111111010101111, 18'b000000001011101011},
		data_w_279 = {18'b001111111101110100, 18'b100011010111001100},
		data_w_28 = {18'b000001101111111000, 18'b110111011111000100},
		data_w_280 = {18'b010000000000111001, 18'b110001110011110000},
		data_w_281 = {18'b010000000011111110, 18'b101011100000111110},
		data_w_282 = {18'b010000000111000011, 18'b010000011110100000},
		data_w_283 = {18'b010000001010000111, 18'b100000101100000000},
		data_w_284 = {18'b010000001101001011, 18'b011100001001001001},
		data_w_285 = {18'b010000010000001111, 18'b000010110101101001},
		data_w_286 = {18'b010000010011010010, 18'b010100110001010000},
		data_w_287 = {18'b010000010110010101, 18'b010001111011101111},
		data_w_288 = {18'b010000011001010111, 18'b111010010100110110},
		data_w_289 = {18'b010000011100011010, 18'b001101111100011011},
		data_w_29 = {18'b000001110011111000, 18'b000100110111110010},
		data_w_290 = {18'b010000011111011100, 18'b001100110010010011},
		data_w_291 = {18'b010000100010011101, 18'b110110110110010101},
		data_w_292 = {18'b010000100101011111, 18'b001100001000011000},
		data_w_293 = {18'b010000101000100000, 18'b001100101000010111},
		data_w_294 = {18'b010000101011100000, 18'b111000010110001110},
		data_w_295 = {18'b010000101110100001, 18'b001111010001111001},
		data_w_296 = {18'b010000110001100001, 18'b010001011011010110},
		data_w_297 = {18'b010000110100100000, 18'b111110110010100110},
		data_w_298 = {18'b010000110111100000, 18'b010111010111101010},
		data_w_299 = {18'b010000111010011111, 18'b011011001010100100},
		data_w_3 = {18'b000000001011111111, 18'b111111011100000000},
		data_w_30 = {18'b000001110111110111, 18'b001110101001111110},
		data_w_300 = {18'b010000111101011110, 18'b001010001011011001},
		data_w_301 = {18'b010001000000011100, 18'b100100011010001111},
		data_w_302 = {18'b010001000011011010, 18'b101001110111001100},
		data_w_303 = {18'b010001000110011000, 18'b011010100010011000},
		data_w_304 = {18'b010001001001010101, 18'b110110011011111110},
		data_w_305 = {18'b010001001100010010, 18'b111101100100001010},
		data_w_306 = {18'b010001001111001111, 18'b101111111011000110},
		data_w_307 = {18'b010001010010001100, 18'b001101100001000010},
		data_w_308 = {18'b010001010101001000, 18'b010110010110001101},
		data_w_309 = {18'b010001011000000100, 18'b001010011010111000},
		data_w_31 = {18'b000001111011110110, 18'b010100101101110011},
		data_w_310 = {18'b010001011010111111, 18'b101001101111010100},
		data_w_311 = {18'b010001011101111010, 18'b110100010011110101},
		data_w_312 = {18'b010001100000110101, 18'b101010001000101111},
		data_w_313 = {18'b010001100011110000, 18'b001011001110011001},
		data_w_314 = {18'b010001100110101010, 18'b010111100101001010},
		data_w_315 = {18'b010001101001100100, 18'b001111001101011010},
		data_w_316 = {18'b010001101100011101, 18'b110010000111100100},
		data_w_317 = {18'b010001101111010111, 18'b000000010100000001},
		data_w_318 = {18'b010001110010001111, 18'b111001110011010000},
		data_w_319 = {18'b010001110101001000, 18'b011110100101101101},
		data_w_32 = {18'b000001111111110101, 18'b010110111011011100},
		data_w_320 = {18'b010001111000000000, 18'b101110101011110111},
		data_w_321 = {18'b010001111010111000, 18'b101010000110001111},
		data_w_322 = {18'b010001111101110000, 18'b010000110101010101},
		data_w_323 = {18'b010010000000100111, 18'b100010111001101101},
		data_w_324 = {18'b010010000011011110, 18'b100000010011111010},
		data_w_325 = {18'b010010000110010101, 18'b001001000100100000},
		data_w_326 = {18'b010010001001001011, 18'b011101001100000111},
		data_w_327 = {18'b010010001100000001, 18'b011100101011010101},
		data_w_328 = {18'b010010001110110111, 18'b000111100010110011},
		data_w_329 = {18'b010010010001101100, 18'b011101110011001010},
		data_w_33 = {18'b000010000011110100, 18'b010101001011000101},
		data_w_330 = {18'b010010010100100001, 18'b011111011101000101},
		data_w_331 = {18'b010010010111010110, 18'b001100100001010001},
		data_w_332 = {18'b010010011010001010, 18'b100101000000011010},
		data_w_333 = {18'b010010011100111110, 18'b101000111011001110},
		data_w_334 = {18'b010010011111110010, 18'b011000010010011100},
		data_w_335 = {18'b010010100010100101, 18'b110011000110110110},
		data_w_336 = {18'b010010100101011000, 18'b111001011001001100},
		data_w_337 = {18'b010010101000001011, 18'b101011001010010000},
		data_w_338 = {18'b010010101010111110, 18'b001000011010110111},
		data_w_339 = {18'b010010101101110000, 18'b010001001011110101},
		data_w_34 = {18'b000010000111110011, 18'b001111010100111000},
		data_w_340 = {18'b010010110000100010, 18'b000101011110000000},
		data_w_341 = {18'b010010110011010011, 18'b100101010010001110},
		data_w_342 = {18'b010010110110000100, 18'b110000101001011000},
		data_w_343 = {18'b010010111000110101, 18'b100111100100010110},
		data_w_344 = {18'b010010111011100110, 18'b001010000100000001},
		data_w_345 = {18'b010010111110010110, 18'b011000001001010101},
		data_w_346 = {18'b010011000001000110, 18'b010001110101001110},
		data_w_347 = {18'b010011000011110101, 18'b110111001000101000},
		data_w_348 = {18'b010011000110100101, 18'b001000000100100010},
		data_w_349 = {18'b010011001001010100, 18'b000100101001111001},
		data_w_35 = {18'b000010001011110010, 18'b000101010001000101},
		data_w_350 = {18'b010011001100000010, 18'b101100111001101101},
		data_w_351 = {18'b010011001110110001, 18'b000000110101000000},
		data_w_352 = {18'b010011010001011111, 18'b000000011100110011},
		data_w_353 = {18'b010011010100001100, 18'b101011110010001000},
		data_w_354 = {18'b010011010110111010, 18'b000010110110000011},
		data_w_355 = {18'b010011011001100111, 18'b000101101001101000},
		data_w_356 = {18'b010011011100010011, 18'b110100001101111101},
		data_w_357 = {18'b010011011111000000, 18'b001110100100001000},
		data_w_358 = {18'b010011100001101100, 18'b010100101101001111},
		data_w_359 = {18'b010011100100011000, 18'b000110101010011011},
		data_w_36 = {18'b000010001111110000, 18'b110110110111111000},
		data_w_360 = {18'b010011100111000011, 18'b100100011100110101},
		data_w_361 = {18'b010011101001101110, 18'b101110000101100101},
		data_w_362 = {18'b010011101100011001, 18'b100011100101111000},
		data_w_363 = {18'b010011101111000100, 18'b000100111110111000},
		data_w_364 = {18'b010011110001101110, 18'b010010010001110001},
		data_w_365 = {18'b010011110100011000, 18'b001011011111110001},
		data_w_366 = {18'b010011110111000001, 18'b110000101010000110},
		data_w_367 = {18'b010011111001101011, 18'b000001110001111101},
		data_w_368 = {18'b010011111100010011, 18'b111110111000100111},
		data_w_369 = {18'b010011111110111100, 18'b100111111111010100},
		data_w_37 = {18'b000010010011101111, 18'b100100000001100000},
		data_w_370 = {18'b010100000001100100, 18'b111101000111010101},
		data_w_371 = {18'b010100000100001100, 18'b111110010001111100},
		data_w_372 = {18'b010100000110110100, 18'b101011100000011011},
		data_w_373 = {18'b010100001001011100, 18'b000100110100000111},
		data_w_374 = {18'b010100001100000011, 18'b001010001110010010},
		data_w_375 = {18'b010100001110101001, 18'b111011110000010011},
		data_w_376 = {18'b010100010001010000, 18'b011001011011011110},
		data_w_377 = {18'b010100010011110110, 18'b100011010001001010},
		data_w_378 = {18'b010100010110011100, 18'b011001010010101110},
		data_w_379 = {18'b010100011001000001, 18'b111011100001100010},
		data_w_38 = {18'b000010010111101110, 18'b001100100110001100},
		data_w_380 = {18'b010100011011100111, 18'b001001111110111111},
		data_w_381 = {18'b010100011110001100, 18'b000100101100011101},
		data_w_382 = {18'b010100100000110000, 18'b101011101011010111},
		data_w_383 = {18'b010100100011010100, 18'b111110111101001000},
		data_w_384 = {18'b010100100101111000, 18'b111110100011001001},
		data_w_385 = {18'b010100101000011100, 18'b101010011110111000},
		data_w_386 = {18'b010100101011000000, 18'b000010110001110001},
		data_w_387 = {18'b010100101101100011, 18'b000111011101010010},
		data_w_388 = {18'b010100110000000101, 18'b111000100010110111},
		data_w_389 = {18'b010100110010101000, 18'b010110000100000000},
		data_w_39 = {18'b000010011011101100, 18'b110000011110001101},
		data_w_390 = {18'b010100110101001010, 18'b100000000010001101},
		data_w_391 = {18'b010100110111101100, 18'b010110011110111011},
		data_w_392 = {18'b010100111010001101, 18'b111001011011101101},
		data_w_393 = {18'b010100111100101111, 18'b001000111010000011},
		data_w_394 = {18'b010100111111010000, 18'b000100111011011111},
		data_w_395 = {18'b010101000001110000, 18'b101101100001100011},
		data_w_396 = {18'b010101000100010001, 18'b000010101101110001},
		data_w_397 = {18'b010101000110110001, 18'b000100100001101101},
		data_w_398 = {18'b010101001001010000, 18'b110010111110111100},
		data_w_399 = {18'b010101001011110000, 18'b001110000111000001},
		data_w_4 = {18'b000000001111111111, 18'b111110101010101010},
		data_w_40 = {18'b000010011111101011, 18'b001111100001110011},
		data_w_400 = {18'b010101001110001111, 18'b010101111011100010},
		data_w_401 = {18'b010101010000101110, 18'b001010011110000100},
		data_w_402 = {18'b010101010011001100, 18'b101011110000001101},
		data_w_403 = {18'b010101010101101010, 18'b111001110011100100},
		data_w_404 = {18'b010101011000001000, 18'b110100101001110001},
		data_w_405 = {18'b010101011010100110, 18'b011100010100011011},
		data_w_406 = {18'b010101011101000011, 18'b110000110101001010},
		data_w_407 = {18'b010101011111100000, 18'b110010001101101000},
		data_w_408 = {18'b010101100001111101, 18'b100000011111011100},
		data_w_409 = {18'b010101100100011001, 18'b111011101100010010},
		data_w_41 = {18'b000010100011101001, 18'b101001101001010010},
		data_w_410 = {18'b010101100110110110, 18'b000011110101110011},
		data_w_411 = {18'b010101101001010001, 18'b111000111101101011},
		data_w_412 = {18'b010101101011101101, 18'b011011000101100100},
		data_w_413 = {18'b010101101110001000, 18'b101010001111001010},
		data_w_414 = {18'b010101110000100011, 18'b100110011100001001},
		data_w_415 = {18'b010101110010111110, 18'b001111101110001101},
		data_w_416 = {18'b010101110101011000, 18'b100110000111000101},
		data_w_417 = {18'b010101110111110010, 18'b101001101000011101},
		data_w_418 = {18'b010101111010001100, 18'b011010010100000100},
		data_w_419 = {18'b010101111100100101, 18'b111000001011100111},
		data_w_42 = {18'b000010100111100111, 18'b111110101100111011},
		data_w_420 = {18'b010101111110111111, 18'b000011010000110101},
		data_w_421 = {18'b010110000001010111, 18'b111011100101011110},
		data_w_422 = {18'b010110000011110000, 18'b100001001011010001},
		data_w_423 = {18'b010110000110001000, 18'b110100000011111111},
		data_w_424 = {18'b010110001000100000, 18'b110100010001010111},
		data_w_425 = {18'b010110001010111000, 18'b100001110101001010},
		data_w_426 = {18'b010110001101001111, 18'b111100110001001011},
		data_w_427 = {18'b010110001111100111, 18'b000101000111001001},
		data_w_428 = {18'b010110010001111101, 18'b111010111000111000},
		data_w_429 = {18'b010110010100010100, 18'b011110001000001001},
		data_w_43 = {18'b000010101011100110, 18'b001110100101000011},
		data_w_430 = {18'b010110010110101010, 18'b101110110110110000},
		data_w_431 = {18'b010110011001000000, 18'b101101000110011110},
		data_w_432 = {18'b010110011011010110, 18'b011000111001001000},
		data_w_433 = {18'b010110011101101011, 18'b110010010000100010},
		data_w_434 = {18'b010110100000000000, 18'b111001001110011111},
		data_w_435 = {18'b010110100010010101, 18'b101101110100110100},
		data_w_436 = {18'b010110100100101010, 18'b010000000101010101},
		data_w_437 = {18'b010110100110111110, 18'b100000000001111000},
		data_w_438 = {18'b010110101001010010, 18'b011101101100010010},
		data_w_439 = {18'b010110101011100110, 18'b001001000110011001},
		data_w_44 = {18'b000010101111100100, 18'b011001001001111110},
		data_w_440 = {18'b010110101101111001, 18'b100010010010000010},
		data_w_441 = {18'b010110110000001100, 18'b101001010001000101},
		data_w_442 = {18'b010110110010011111, 18'b011110000101010111},
		data_w_443 = {18'b010110110100110010, 18'b000000110000101111},
		data_w_444 = {18'b010110110111000100, 18'b010001010101000101},
		data_w_445 = {18'b010110111001010110, 18'b001111110100010000},
		data_w_446 = {18'b010110111011100111, 18'b111100010000001000},
		data_w_447 = {18'b010110111101111001, 18'b010110101010100100},
		data_w_448 = {18'b010111000000001010, 18'b011111000101011110},
		data_w_449 = {18'b010111000010011011, 18'b010101100010101101},
		data_w_45 = {18'b000010110011100010, 18'b011110010100000010},
		data_w_450 = {18'b010111000100101011, 18'b111010000100001010},
		data_w_451 = {18'b010111000110111100, 18'b001100101011101110},
		data_w_452 = {18'b010111001001001100, 18'b001101011011010011},
		data_w_453 = {18'b010111001011011011, 18'b111100010100110010},
		data_w_454 = {18'b010111001101101011, 18'b011001011010000101},
		data_w_455 = {18'b010111001111111010, 18'b100100101101000110},
		data_w_456 = {18'b010111010010001001, 18'b011110001111101110},
		data_w_457 = {18'b010111010100011000, 18'b000110000011111001},
		data_w_458 = {18'b010111010110100110, 18'b011100001011100000},
		data_w_459 = {18'b010111011000110100, 18'b100000101000011111},
		data_w_46 = {18'b000010110111100000, 18'b011101111011100111},
		data_w_460 = {18'b010111011011000010, 18'b010011011100110001},
		data_w_461 = {18'b010111011101001111, 18'b110100101010010001},
		data_w_462 = {18'b010111011111011101, 18'b000100010010111010},
		data_w_463 = {18'b010111100001101010, 18'b000010011000101000},
		data_w_464 = {18'b010111100011110110, 18'b101110111101010111},
		data_w_465 = {18'b010111100110000011, 18'b001010000011000010},
		data_w_466 = {18'b010111101000001111, 18'b010011101011100111},
		data_w_467 = {18'b010111101010011011, 18'b001011111001000000},
		data_w_468 = {18'b010111101100100110, 18'b110010101101001011},
		data_w_469 = {18'b010111101110110010, 18'b001000001010000100},
		data_w_47 = {18'b000010111011011110, 18'b010111111001000011},
		data_w_470 = {18'b010111110000111101, 18'b001100010001101001},
		data_w_471 = {18'b010111110011000111, 18'b111111000101110110},
		data_w_472 = {18'b010111110101010010, 18'b100000101000100111},
		data_w_473 = {18'b010111110111011100, 18'b110000111011111100},
		data_w_474 = {18'b010111111001100110, 18'b110000000001110000},
		data_w_475 = {18'b010111111011110000, 18'b011101111100000001},
		data_w_476 = {18'b010111111101111001, 18'b111010101100101110},
		data_w_477 = {18'b011000000000000011, 18'b000110010101110011},
		data_w_478 = {18'b011000000010001100, 18'b000000111001010000},
		data_w_479 = {18'b011000000100010100, 18'b101010011001000001},
		data_w_48 = {18'b000010111111011100, 18'b001100000100110000},
		data_w_480 = {18'b011000000110011101, 18'b000010110111000101},
		data_w_481 = {18'b011000001000100101, 18'b001010010101011010},
		data_w_482 = {18'b011000001010101101, 18'b000000110110000000},
		data_w_483 = {18'b011000001100110100, 18'b100110011010110011},
		data_w_484 = {18'b011000001110111011, 18'b111011000101110011},
		data_w_485 = {18'b011000010001000010, 18'b111110111000111111},
		data_w_486 = {18'b011000010011001001, 18'b110001110110010100},
		data_w_487 = {18'b011000010101010000, 18'b010011111111110100},
		data_w_488 = {18'b011000010111010110, 18'b100101010111011011},
		data_w_489 = {18'b011000011001011100, 18'b100101111111001001},
		data_w_49 = {18'b000011000011011001, 18'b111010010111000111},
		data_w_490 = {18'b011000011011100010, 18'b010101111000111110},
		data_w_491 = {18'b011000011101100111, 18'b110101000110111000},
		data_w_492 = {18'b011000011111101101, 18'b000011101010110111},
		data_w_493 = {18'b011000100001110010, 18'b000001100110111010},
		data_w_494 = {18'b011000100011110110, 18'b101110111101000000},
		data_w_495 = {18'b011000100101111011, 18'b001011101111001010},
		data_w_496 = {18'b011000100111111111, 18'b010111111111010101},
		data_w_497 = {18'b011000101010000011, 18'b010011101111100100},
		data_w_498 = {18'b011000101100000110, 18'b111111000001110011},
		data_w_499 = {18'b011000101110001010, 18'b011001111000000100},
		data_w_5 = {18'b000000010011111111, 18'b111101011001010101},
		data_w_50 = {18'b000011000111010111, 18'b100010101000100011},
		data_w_500 = {18'b011000110000001101, 18'b100100010100010111},
		data_w_501 = {18'b011000110010010000, 18'b011110011000101010},
		data_w_502 = {18'b011000110100010011, 18'b001000000110111110},
		data_w_503 = {18'b011000110110010101, 18'b100001100001010010},
		data_w_504 = {18'b011000111000010111, 18'b101010101001100111},
		data_w_505 = {18'b011000111010011001, 18'b100011100001111100},
		data_w_506 = {18'b011000111100011011, 18'b001100001100010001},
		data_w_507 = {18'b011000111110011100, 18'b100100101010100110},
		data_w_508 = {18'b011001000000011101, 18'b101100111110111011},
		data_w_509 = {18'b011001000010011110, 18'b100101001011010001},
		data_w_51 = {18'b000011001011010101, 18'b000100110001100001},
		data_w_510 = {18'b011001000100011111, 18'b001101010001100110},
		data_w_511 = {18'b011001000110011111, 18'b100101010011111011},
		data_w_512 = {18'b011001001000011111, 18'b101101010100010001},
		data_w_513 = {18'b011001001010011111, 18'b100101010100100110},
		data_w_514 = {18'b011001001100011111, 18'b001101010110111011},
		data_w_515 = {18'b011001001110011110, 18'b100101011101010001},
		data_w_516 = {18'b011001010000011101, 18'b101101101001100110},
		data_w_517 = {18'b011001010010011100, 18'b100101111101111011},
		data_w_518 = {18'b011001010100011011, 18'b001110011100010000},
		data_w_519 = {18'b011001010110011001, 18'b100111000110100101},
		data_w_52 = {18'b000011001111010010, 18'b100000101010011110},
		data_w_520 = {18'b011001011000010111, 18'b101111111110111010},
		data_w_521 = {18'b011001011010010101, 18'b101001000111001111},
		data_w_522 = {18'b011001011100010011, 18'b010010100001100011},
		data_w_523 = {18'b011001011110010000, 18'b101100001111110111},
		data_w_524 = {18'b011001100000001101, 18'b110110010100001011},
		data_w_525 = {18'b011001100010001010, 18'b110000110000011101},
		data_w_526 = {18'b011001100100000111, 18'b011011100110101110},
		data_w_527 = {18'b011001100110000011, 18'b110110111000111110},
		data_w_528 = {18'b011001101000000000, 18'b000010101001001101},
		data_w_529 = {18'b011001101001111011, 18'b111110111001011001},
		data_w_53 = {18'b000011010011001111, 18'b110110001011111000},
		data_w_530 = {18'b011001101011110111, 18'b101011101011100100},
		data_w_531 = {18'b011001101101110011, 18'b001001000001101011},
		data_w_532 = {18'b011001101111101110, 18'b010110111101110000},
		data_w_533 = {18'b011001110001101001, 18'b010101100001110000},
		data_w_534 = {18'b011001110011100100, 18'b000100101111101100},
		data_w_535 = {18'b011001110101011110, 18'b100100101001100100},
		data_w_536 = {18'b011001110111011000, 18'b110101010001010110},
		data_w_537 = {18'b011001111001010010, 18'b110110101001000001},
		data_w_538 = {18'b011001111011001100, 18'b101000110010100101},
		data_w_539 = {18'b011001111101000110, 18'b001011110000000001},
		data_w_54 = {18'b000011010111001101, 18'b000101001110001110},
		data_w_540 = {18'b011001111110111111, 18'b011111100011010100},
		data_w_541 = {18'b011010000000111000, 18'b100100001110011110},
		data_w_542 = {18'b011010000010110001, 18'b011001110011011100},
		data_w_543 = {18'b011010000100101010, 18'b000000010100001101},
		data_w_544 = {18'b011010000110100010, 18'b010111110010110010},
		data_w_545 = {18'b011010001000011010, 18'b100000010001000111},
		data_w_546 = {18'b011010001010010010, 18'b011001110001001100},
		data_w_547 = {18'b011010001100001010, 18'b000100010101000000},
		data_w_548 = {18'b011010001110000001, 18'b011111111110100000},
		data_w_549 = {18'b011010001111111000, 18'b101100101111101100},
		data_w_55 = {18'b000011011011001010, 18'b001101101010000001},
		data_w_550 = {18'b011010010001101111, 18'b101010101010100001},
		data_w_551 = {18'b011010010011100110, 18'b011001110000111101},
		data_w_552 = {18'b011010010101011100, 18'b111010000100111111},
		data_w_553 = {18'b011010010111010011, 18'b001011101000100101},
		data_w_554 = {18'b011010011001001001, 18'b001110011101101100},
		data_w_555 = {18'b011010011010111111, 18'b000010100110010011},
		data_w_556 = {18'b011010011100110100, 18'b101000000100010111},
		data_w_557 = {18'b011010011110101001, 18'b111110111001110101},
		data_w_558 = {18'b011010100000011111, 18'b000111001000101100},
		data_w_559 = {18'b011010100010010100, 18'b000000110010110111},
		data_w_56 = {18'b000011011111000111, 18'b001111010111110011},
		data_w_560 = {18'b011010100100001000, 18'b101011111010010110},
		data_w_561 = {18'b011010100101111101, 18'b001000100001000101},
		data_w_562 = {18'b011010100111110001, 18'b010110101001000001},
		data_w_563 = {18'b011010101001100101, 18'b010110010100000111},
		data_w_564 = {18'b011010101011011001, 18'b000111100100010011},
		data_w_565 = {18'b011010101101001100, 18'b101010011011100011},
		data_w_566 = {18'b011010101110111111, 18'b111110111011110011},
		data_w_567 = {18'b011010110000110011, 18'b000101000111000000},
		data_w_568 = {18'b011010110010100101, 18'b111100111111000110},
		data_w_569 = {18'b011010110100011000, 18'b100110100110000001},
		data_w_57 = {18'b000011100011000100, 18'b001010010000000111},
		data_w_570 = {18'b011010110110001011, 18'b000001111101101101},
		data_w_571 = {18'b011010110111111101, 18'b001111001000000111},
		data_w_572 = {18'b011010111001101111, 18'b001110000111001001},
		data_w_573 = {18'b011010111011100000, 18'b111110111100110001},
		data_w_574 = {18'b011010111101010010, 18'b100001101010111001},
		data_w_575 = {18'b011010111111000011, 18'b110110010011011101},
		data_w_576 = {18'b011011000000110100, 18'b111100111000011001},
		data_w_577 = {18'b011011000010100101, 18'b110101011011100111},
		data_w_578 = {18'b011011000100010110, 18'b011111111111000010},
		data_w_579 = {18'b011011000110000110, 18'b111100100100100110},
		data_w_58 = {18'b000011100111000000, 18'b111110001011100001},
		data_w_580 = {18'b011011000111110111, 18'b001011001110001101},
		data_w_581 = {18'b011011001001100111, 18'b001011111101110010},
		data_w_582 = {18'b011011001011010110, 18'b111110110101010000},
		data_w_583 = {18'b011011001101000110, 18'b100011110110100000},
		data_w_584 = {18'b011011001110110101, 18'b111011000011011110},
		data_w_585 = {18'b011011010000100101, 18'b000100011110000010},
		data_w_586 = {18'b011011010010010100, 18'b000000001000001000},
		data_w_587 = {18'b011011010100000010, 18'b101110000011101000},
		data_w_588 = {18'b011011010101110001, 18'b001110010010011101},
		data_w_589 = {18'b011011010111011111, 18'b100000110110100000},
		data_w_59 = {18'b000011101010111101, 18'b101011000010101000},
		data_w_590 = {18'b011011011001001101, 18'b100101110001101010},
		data_w_591 = {18'b011011011010111011, 18'b011101000101110100},
		data_w_592 = {18'b011011011100101001, 18'b000110110100111000},
		data_w_593 = {18'b011011011110010110, 18'b100011000000101110},
		data_w_594 = {18'b011011100000000011, 18'b110001101011001111},
		data_w_595 = {18'b011011100001110000, 18'b110010110110010100},
		data_w_596 = {18'b011011100011011101, 18'b100110100011110101},
		data_w_597 = {18'b011011100101001010, 18'b001100110101101010},
		data_w_598 = {18'b011011100110110110, 18'b100101101101101011},
		data_w_599 = {18'b011011101000100010, 18'b110001001101110000},
		data_w_6 = {18'b000000010111111111, 18'b111011100000000001},
		data_w_60 = {18'b000011101110111010, 18'b010000101110000000},
		data_w_600 = {18'b011011101010001110, 18'b101111010111110001},
		data_w_601 = {18'b011011101011111010, 18'b100000001101100101},
		data_w_602 = {18'b011011101101100110, 18'b000011110001000101},
		data_w_603 = {18'b011011101111010001, 18'b011010000100000111},
		data_w_604 = {18'b011011110000111100, 18'b100011001000100001},
		data_w_605 = {18'b011011110010100111, 18'b011111000000001100},
		data_w_606 = {18'b011011110100010010, 18'b001101101100111110},
		data_w_607 = {18'b011011110101111100, 18'b101111010000101101},
		data_w_608 = {18'b011011110111100111, 18'b000011101101010000},
		data_w_609 = {18'b011011111001010001, 18'b001011000100011110},
		data_w_61 = {18'b000011110010110110, 18'b101111000110010100},
		data_w_610 = {18'b011011111010111011, 18'b000101011000001011},
		data_w_611 = {18'b011011111100100100, 18'b110010101010001110},
		data_w_612 = {18'b011011111110001110, 18'b010010111100011101},
		data_w_613 = {18'b011011111111110111, 18'b100110010000101101},
		data_w_614 = {18'b011100000001100000, 18'b101100101000110100},
		data_w_615 = {18'b011100000011001001, 18'b100110000110100110},
		data_w_616 = {18'b011100000100110010, 18'b010010101011111010},
		data_w_617 = {18'b011100000110011010, 18'b110010011010100010},
		data_w_618 = {18'b011100001000000011, 18'b000101010100010110},
		data_w_619 = {18'b011100001001101011, 18'b001011011011000111},
		data_w_62 = {18'b000011110110110011, 18'b000110000100001100},
		data_w_620 = {18'b011100001011010011, 18'b000100110000101100},
		data_w_621 = {18'b011100001100111010, 18'b110001010110110111},
		data_w_622 = {18'b011100001110100010, 18'b010001001111011110},
		data_w_623 = {18'b011100010000001001, 18'b100100011100010011},
		data_w_624 = {18'b011100010001110000, 18'b101010111111001011},
		data_w_625 = {18'b011100010011010111, 18'b100100111001111000},
		data_w_626 = {18'b011100010100111110, 18'b010010001110001110},
		data_w_627 = {18'b011100010110100100, 18'b110010111101111111},
		data_w_628 = {18'b011100011000001011, 18'b000111001010111111},
		data_w_629 = {18'b011100011001110001, 18'b001110110111000000},
		data_w_63 = {18'b000011111010101111, 18'b010101100000010011},
		data_w_630 = {18'b011100011011010111, 18'b001010000011110101},
		data_w_631 = {18'b011100011100111100, 18'b111000110011001111},
		data_w_632 = {18'b011100011110100010, 18'b011011000111000001},
		data_w_633 = {18'b011100100000000111, 18'b110001000000111101},
		data_w_634 = {18'b011100100001101100, 18'b111010100010110100},
		data_w_635 = {18'b011100100011010001, 18'b110111101110011000},
		data_w_636 = {18'b011100100100110110, 18'b101000100101011010},
		data_w_637 = {18'b011100100110011011, 18'b001101001001101011},
		data_w_638 = {18'b011100100111111111, 18'b100101011100111100},
		data_w_639 = {18'b011100101001100011, 18'b110001100000111110},
		data_w_64 = {18'b000011111110101011, 18'b011101010011010101},
		data_w_640 = {18'b011100101011000111, 18'b110001010111100001},
		data_w_641 = {18'b011100101100101011, 18'b100101000010010101},
		data_w_642 = {18'b011100101110001111, 18'b001100100011001011},
		data_w_643 = {18'b011100101111110010, 18'b100111111011110011},
		data_w_644 = {18'b011100110001010101, 18'b110111001101111011},
		data_w_645 = {18'b011100110010111000, 18'b111010011011010101},
		data_w_646 = {18'b011100110100011011, 18'b110001100101101110},
		data_w_647 = {18'b011100110101111110, 18'b011100101110110111},
		data_w_648 = {18'b011100110111100000, 18'b111011111000011110},
		data_w_649 = {18'b011100111001000011, 18'b001111000100010010},
		data_w_65 = {18'b000100000010100111, 18'b011101010101111111},
		data_w_650 = {18'b011100111010100101, 18'b010110010100000001},
		data_w_651 = {18'b011100111100000111, 18'b010001101001011010},
		data_w_652 = {18'b011100111101101001, 18'b000001000110001010},
		data_w_653 = {18'b011100111111001010, 18'b100100101100000000},
		data_w_654 = {18'b011101000000101011, 18'b111100011100101010},
		data_w_655 = {18'b011101000010001101, 18'b001000011001110101},
		data_w_656 = {18'b011101000011101110, 18'b001000100101001110},
		data_w_657 = {18'b011101000101001110, 18'b111101000000100010},
		data_w_658 = {18'b011101000110101111, 18'b100101101101011111},
		data_w_659 = {18'b011101001000010000, 18'b000010101101110000},
		data_w_66 = {18'b000100000110100011, 18'b010101100001000010},
		data_w_660 = {18'b011101001001110000, 18'b010100000011000100},
		data_w_661 = {18'b011101001011010000, 18'b011001101111000101},
		data_w_662 = {18'b011101001100110000, 18'b010011110011100000},
		data_w_663 = {18'b011101001110010000, 18'b000010010010000000},
		data_w_664 = {18'b011101001111101111, 18'b100101001100010011},
		data_w_665 = {18'b011101010001001110, 18'b111100100100000010},
		data_w_666 = {18'b011101010010101110, 18'b001000011010111010},
		data_w_667 = {18'b011101010100001101, 18'b001000110010100101},
		data_w_668 = {18'b011101010101101011, 18'b111101101100101110},
		data_w_669 = {18'b011101010111001010, 18'b100111001011000000},
		data_w_67 = {18'b000100001010011111, 18'b000101101101001011},
		data_w_670 = {18'b011101011000101001, 18'b000101001111000101},
		data_w_671 = {18'b011101011010000111, 18'b010111111010101001},
		data_w_672 = {18'b011101011011100101, 18'b011111001111010011},
		data_w_673 = {18'b011101011101000011, 18'b011011001110101111},
		data_w_674 = {18'b011101011110100001, 18'b001011111010100111},
		data_w_675 = {18'b011101011111111110, 18'b110001010100100011},
		data_w_676 = {18'b011101100001011100, 18'b001011011110001100},
		data_w_677 = {18'b011101100010111001, 18'b011010011001001101},
		data_w_678 = {18'b011101100100010110, 18'b011110000111001101},
		data_w_679 = {18'b011101100101110011, 18'b010110101001110101},
		data_w_68 = {18'b000100001110011010, 18'b101101110011001111},
		data_w_680 = {18'b011101100111010000, 18'b000100000010101110},
		data_w_681 = {18'b011101101000101100, 18'b100110010011011111},
		data_w_682 = {18'b011101101010001000, 18'b111101011101110001},
		data_w_683 = {18'b011101101011100101, 18'b001001100011001100},
		data_w_684 = {18'b011101101101000001, 18'b001010100101010110},
		data_w_685 = {18'b011101101110011101, 18'b000000100101111000},
		data_w_686 = {18'b011101101111111000, 18'b101011100110011000},
		data_w_687 = {18'b011101110001010100, 18'b001011101000011110},
		data_w_688 = {18'b011101110010101111, 18'b100000101101110000},
		data_w_689 = {18'b011101110100001010, 18'b101010110111110100},
		data_w_69 = {18'b000100010010010110, 18'b001101101011111111},
		data_w_690 = {18'b011101110101100101, 18'b101010001000010010},
		data_w_691 = {18'b011101110111000000, 18'b011110100000101110},
		data_w_692 = {18'b011101111000011011, 18'b001000000010101111},
		data_w_693 = {18'b011101111001110101, 18'b100110101111111011},
		data_w_694 = {18'b011101111011001111, 18'b111010101001110110},
		data_w_695 = {18'b011101111100101010, 18'b000011110010000111},
		data_w_696 = {18'b011101111110000100, 18'b000010001010010010},
		data_w_697 = {18'b011101111111011101, 18'b110101110011111100},
		data_w_698 = {18'b011110000000110111, 18'b011110110000101010},
		data_w_699 = {18'b011110000010010000, 18'b111101000010000000},
		data_w_7 = {18'b000000011011111111, 18'b111000110110101101},
		data_w_70 = {18'b000100010110010001, 18'b100101010000010000},
		data_w_700 = {18'b011110000011101010, 18'b010000101001100010},
		data_w_701 = {18'b011110000101000011, 18'b011001101000110100},
		data_w_702 = {18'b011110000110011100, 18'b011000000001011011},
		data_w_703 = {18'b011110000111110101, 18'b001011110100111001},
		data_w_704 = {18'b011110001001001101, 18'b110101000100110010},
		data_w_705 = {18'b011110001010100110, 18'b010011110010101001},
		data_w_706 = {18'b011110001011111110, 18'b101000000000000001},
		data_w_707 = {18'b011110001101010110, 18'b110001101110011100},
		data_w_708 = {18'b011110001110101110, 18'b110000111111011110},
		data_w_709 = {18'b011110010000000110, 18'b100101110100101001},
		data_w_71 = {18'b000100011010001100, 18'b110100011000111000},
		data_w_710 = {18'b011110010001011110, 18'b010000001111011110},
		data_w_711 = {18'b011110010010110101, 18'b110000010001011111},
		data_w_712 = {18'b011110010100001101, 18'b000101111100001111},
		data_w_713 = {18'b011110010101100100, 18'b010001010001001110},
		data_w_714 = {18'b011110010110111011, 18'b010010010001111110},
		data_w_715 = {18'b011110011000010010, 18'b001001000000000001},
		data_w_716 = {18'b011110011001101000, 18'b110101011100110101},
		data_w_717 = {18'b011110011010111111, 18'b010111101001111101},
		data_w_718 = {18'b011110011100010101, 18'b101111101000111001},
		data_w_719 = {18'b011110011101101011, 18'b111101011011001001},
		data_w_72 = {18'b000100011110000111, 18'b111010111110110000},
		data_w_720 = {18'b011110011111000010, 18'b000001000010001101},
		data_w_721 = {18'b011110100000010111, 18'b111010011111100100},
		data_w_722 = {18'b011110100001101101, 18'b101001110100101111},
		data_w_723 = {18'b011110100011000011, 18'b001111000011001100},
		data_w_724 = {18'b011110100100011000, 18'b101010001100011011},
		data_w_725 = {18'b011110100101101101, 18'b111011010001111011},
		data_w_726 = {18'b011110100111000011, 18'b000010010101001010},
		data_w_727 = {18'b011110101000010111, 18'b111111010111100111},
		data_w_728 = {18'b011110101001101100, 18'b110010011010110000},
		data_w_729 = {18'b011110101011000001, 18'b011011100000000100},
		data_w_73 = {18'b000100100010000010, 18'b111000111010101111},
		data_w_730 = {18'b011110101100010101, 18'b111010101001000000},
		data_w_731 = {18'b011110101101101010, 18'b001111110111000010},
		data_w_732 = {18'b011110101110111110, 18'b011011001011100111},
		data_w_733 = {18'b011110110000010010, 18'b011100101000001101},
		data_w_734 = {18'b011110110001100110, 18'b010100001110010000},
		data_w_735 = {18'b011110110010111010, 18'b000001111111001110},
		data_w_736 = {18'b011110110100001101, 18'b100101111100100100},
		data_w_737 = {18'b011110110101100001, 18'b000000000111101100},
		data_w_738 = {18'b011110110110110100, 18'b010000100010000101},
		data_w_739 = {18'b011110111000000111, 18'b010111001101001010},
		data_w_74 = {18'b000100100101111101, 18'b101110000101110001},
		data_w_740 = {18'b011110111001011010, 18'b010100001010010110},
		data_w_741 = {18'b011110111010101101, 18'b000111011011000101},
		data_w_742 = {18'b011110111011111111, 18'b110001000000110011},
		data_w_743 = {18'b011110111101010010, 18'b010000111100111011},
		data_w_744 = {18'b011110111110100100, 18'b100111010000111000},
		data_w_745 = {18'b011110111111110110, 18'b110011111110000100},
		data_w_746 = {18'b011111000001001000, 18'b110111000101111011},
		data_w_747 = {18'b011111000010011010, 18'b110000101001110110},
		data_w_748 = {18'b011111000011101100, 18'b100000101011001111},
		data_w_749 = {18'b011111000100111110, 18'b000111001011100001},
		data_w_75 = {18'b000100101001111000, 18'b011010011000110010},
		data_w_750 = {18'b011111000110001111, 18'b100100001100000110},
		data_w_751 = {18'b011111000111100000, 18'b110111101110010110},
		data_w_752 = {18'b011111001000110010, 18'b000001110011101011},
		data_w_753 = {18'b011111001010000011, 18'b000010011101011111},
		data_w_754 = {18'b011111001011010011, 18'b111001101101001010},
		data_w_755 = {18'b011111001100100100, 18'b100111100100000101},
		data_w_756 = {18'b011111001101110101, 18'b001100000011101000},
		data_w_757 = {18'b011111001111000101, 18'b100111001101001100},
		data_w_758 = {18'b011111010000010101, 18'b111001000010001001},
		data_w_759 = {18'b011111010001100110, 18'b000001100011110110},
		data_w_76 = {18'b000100101101110010, 18'b111101101100101111},
		data_w_760 = {18'b011111010010110110, 18'b000000110011101100},
		data_w_761 = {18'b011111010100000101, 18'b110110110011000010},
		data_w_762 = {18'b011111010101010101, 18'b100011100011001110},
		data_w_763 = {18'b011111010110100101, 18'b000111000101101010},
		data_w_764 = {18'b011111010111110100, 18'b100001011011101010},
		data_w_765 = {18'b011111011001000011, 18'b110010100110100110},
		data_w_766 = {18'b011111011010010010, 18'b111010100111110100},
		data_w_767 = {18'b011111011011100001, 18'b111001100000101011},
		data_w_768 = {18'b011111011100110000, 18'b101111010010100000},
		data_w_769 = {18'b011111011101111111, 18'b011011111110101010},
		data_w_77 = {18'b000100110001101101, 18'b010111111010101000},
		data_w_770 = {18'b011111011111001101, 18'b111111100110011110},
		data_w_771 = {18'b011111100000011100, 18'b011010001011010001},
		data_w_772 = {18'b011111100001101010, 18'b101011101110011001},
		data_w_773 = {18'b011111100010111000, 18'b110100010001001011},
		data_w_774 = {18'b011111100100000110, 18'b110011110100111100},
		data_w_775 = {18'b011111100101010100, 18'b101010011011000000},
		data_w_776 = {18'b011111100110100010, 18'b011000000100101100},
		data_w_777 = {18'b011111100111101111, 18'b111100110011010100},
		data_w_778 = {18'b011111101000111101, 18'b011000101000001100},
		data_w_779 = {18'b011111101010001010, 18'b101011100100101001},
		data_w_78 = {18'b000100110101100111, 18'b101000111011011110},
		data_w_780 = {18'b011111101011010111, 18'b110101101001111100},
		data_w_781 = {18'b011111101100100100, 18'b110110111001011011},
		data_w_782 = {18'b011111101101110001, 18'b101111010100011001},
		data_w_783 = {18'b011111101110111110, 18'b011110111100001000},
		data_w_784 = {18'b011111110000001011, 18'b000101110001111011},
		data_w_785 = {18'b011111110001010111, 18'b100011110111000101},
		data_w_786 = {18'b011111110010100011, 18'b111001001100111000},
		data_w_787 = {18'b011111110011110000, 18'b000101110100100111},
		data_w_788 = {18'b011111110100111100, 18'b001001101111100100},
		data_w_789 = {18'b011111110110001000, 18'b000100111111000001},
		data_w_79 = {18'b000100111001100001, 18'b110000101000010011},
		data_w_790 = {18'b011111110111010011, 18'b110111100100001111},
		data_w_791 = {18'b011111111000011111, 18'b100001100000100000},
		data_w_792 = {18'b011111111001101011, 18'b000010110101000100},
		data_w_793 = {18'b011111111010110110, 18'b011011100011001111},
		data_w_794 = {18'b011111111100000001, 18'b101011101100001111},
		data_w_795 = {18'b011111111101001100, 18'b110011010001010110},
		data_w_796 = {18'b011111111110010111, 18'b110010010011110100},
		data_w_797 = {18'b011111111111100010, 18'b101000110100111010},
		data_w_798 = {18'b100000000000101101, 18'b010110110101111000},
		data_w_799 = {18'b100000000001110111, 18'b111100010111111101},
		data_w_8 = {18'b000000011111111111, 18'b110101010101011011},
		data_w_80 = {18'b000100111101011011, 18'b101110111010001100},
		data_w_800 = {18'b100000000011000010, 18'b011001011100011010},
		data_w_801 = {18'b100000000100001100, 18'b101110000100011110},
		data_w_802 = {18'b100000000101010110, 18'b111010010001011000},
		data_w_803 = {18'b100000000110100000, 18'b111110000100010111},
		data_w_804 = {18'b100000000111101010, 18'b111001011110101011},
		data_w_805 = {18'b100000001000110100, 18'b101100100001100010},
		data_w_806 = {18'b100000001001111110, 18'b010111001110001011},
		data_w_807 = {18'b100000001011000111, 18'b111001100101110101},
		data_w_808 = {18'b100000001100010001, 18'b010011101001101100},
		data_w_809 = {18'b100000001101011010, 18'b100101011011000000},
		data_w_81 = {18'b000101000001010101, 18'b100011101010001110},
		data_w_810 = {18'b100000001110100011, 18'b101110111010111110},
		data_w_811 = {18'b100000001111101100, 18'b110000001010110100},
		data_w_812 = {18'b100000010000110101, 18'b101001001011101111},
		data_w_813 = {18'b100000010001111110, 18'b011001111110111101},
		data_w_814 = {18'b100000010011000111, 18'b000010100101101010},
		data_w_815 = {18'b100000010100001111, 18'b100011000001000100},
		data_w_816 = {18'b100000010101010111, 18'b111011010010010111},
		data_w_817 = {18'b100000010110100000, 18'b001011011010110000},
		data_w_818 = {18'b100000010111101000, 18'b010011011011011010},
		data_w_819 = {18'b100000011000110000, 18'b010011010101100011},
		data_w_82 = {18'b000101000101001111, 18'b001110110001100000},
		data_w_820 = {18'b100000011001111000, 18'b001011001010010110},
		data_w_821 = {18'b100000011010111111, 18'b111010111010111110},
		data_w_822 = {18'b100000011100000111, 18'b100010101000101000},
		data_w_823 = {18'b100000011101001111, 18'b000010010100011110},
		data_w_824 = {18'b100000011110010110, 18'b011001111111101100},
		data_w_825 = {18'b100000011111011101, 18'b101001101011011101},
		data_w_826 = {18'b100000100000100100, 18'b110001011000111100},
		data_w_827 = {18'b100000100001101011, 18'b110001001001010100},
		data_w_828 = {18'b100000100010110010, 18'b101000111101101110},
		data_w_829 = {18'b100000100011111001, 18'b011000110111010101},
		data_w_83 = {18'b000101001001001000, 18'b110000001001001100},
		data_w_830 = {18'b100000100101000000, 18'b000000110111010011},
		data_w_831 = {18'b100000100110000110, 18'b100000111110110010},
		data_w_832 = {18'b100000100111001100, 18'b111001001110111101},
		data_w_833 = {18'b100000101000010011, 18'b001001101000111011},
		data_w_834 = {18'b100000101001011001, 18'b010010001101110111},
		data_w_835 = {18'b100000101010011111, 18'b010010111110111010},
		data_w_836 = {18'b100000101011100101, 18'b001011111101001101},
		data_w_837 = {18'b100000101100101010, 18'b111101001001111000},
		data_w_838 = {18'b100000101101110000, 18'b100110100110000101},
		data_w_839 = {18'b100000101110110110, 18'b001000010010111011},
		data_w_84 = {18'b000101001101000010, 18'b000111101010011101},
		data_w_840 = {18'b100000101111111011, 18'b100010010001100100},
		data_w_841 = {18'b100000110001000000, 18'b110100100011000110},
		data_w_842 = {18'b100000110010000101, 18'b111111001000101011},
		data_w_843 = {18'b100000110011001011, 18'b000010000011011001},
		data_w_844 = {18'b100000110100001111, 18'b111101010100011000},
		data_w_845 = {18'b100000110101010100, 18'b110000111100110001},
		data_w_846 = {18'b100000110110011001, 18'b011100111101101001},
		data_w_847 = {18'b100000110111011110, 18'b000001011000001000},
		data_w_848 = {18'b100000111000100010, 18'b011110001101010100},
		data_w_849 = {18'b100000111001100110, 18'b110011011110010101},
		data_w_85 = {18'b000101010000111011, 18'b010101001110011111},
		data_w_850 = {18'b100000111010101011, 18'b000001001100010001},
		data_w_851 = {18'b100000111011101111, 18'b000111011000001110},
		data_w_852 = {18'b100000111100110011, 18'b000110000011010010},
		data_w_853 = {18'b100000111101110110, 18'b111101001110100100},
		data_w_854 = {18'b100000111110111010, 18'b101100111011001000},
		data_w_855 = {18'b100000111111111110, 18'b010101001010000110},
		data_w_856 = {18'b100001000001000001, 18'b110101111100100001},
		data_w_857 = {18'b100001000010000101, 18'b001111010011100000},
		data_w_858 = {18'b100001000011001000, 18'b100001010000000111},
		data_w_859 = {18'b100001000100001011, 18'b101011110011011100},
		data_w_86 = {18'b000101010100110100, 18'b011000101110100001},
		data_w_860 = {18'b100001000101001110, 18'b101110111110100011},
		data_w_861 = {18'b100001000110010001, 18'b101010110010100000},
		data_w_862 = {18'b100001000111010100, 18'b011111010000011001},
		data_w_863 = {18'b100001001000010111, 18'b001100011001010000},
		data_w_864 = {18'b100001001001011001, 18'b110010001110001100},
		data_w_865 = {18'b100001001010011100, 18'b010000110000001110},
		data_w_866 = {18'b100001001011011110, 18'b101000000000011100},
		data_w_867 = {18'b100001001100100000, 18'b110111111111111000},
		data_w_868 = {18'b100001001101100011, 18'b000000101111100101},
		data_w_869 = {18'b100001001110100101, 18'b000010010000101000},
		data_w_87 = {18'b000101011000101101, 18'b010010000011110001},
		data_w_870 = {18'b100001001111100110, 18'b111100100100000011},
		data_w_871 = {18'b100001010000101000, 18'b101111101010111010},
		data_w_872 = {18'b100001010001101010, 18'b011011100110001101},
		data_w_873 = {18'b100001010010101100, 18'b000000010111000001},
		data_w_874 = {18'b100001010011101101, 18'b011101111110011000},
		data_w_875 = {18'b100001010100101110, 18'b110100011101010011},
		data_w_876 = {18'b100001010101110000, 18'b000011110100110101},
		data_w_877 = {18'b100001010110110001, 18'b001100000110000000},
		data_w_878 = {18'b100001010111110010, 18'b001101010001110101},
		data_w_879 = {18'b100001011000110011, 18'b000111011001010110},
		data_w_88 = {18'b000101011100100110, 18'b000001000111100011},
		data_w_880 = {18'b100001011001110011, 18'b111010011101100101},
		data_w_881 = {18'b100001011010110100, 18'b100110011111100001},
		data_w_882 = {18'b100001011011110101, 18'b001011100000001101},
		data_w_883 = {18'b100001011100110101, 18'b101001100000101010},
		data_w_884 = {18'b100001011101110110, 18'b000000100001111000},
		data_w_885 = {18'b100001011110110110, 18'b010000100100110111},
		data_w_886 = {18'b100001011111110110, 18'b011001101010101000},
		data_w_887 = {18'b100001100000110110, 18'b011011110100001011},
		data_w_888 = {18'b100001100001110110, 18'b010111000010100001},
		data_w_889 = {18'b100001100010110110, 18'b001011010110101000},
		data_w_89 = {18'b000101100000011110, 18'b100101110011001010},
		data_w_890 = {18'b100001100011110101, 18'b111000110001100010},
		data_w_891 = {18'b100001100100110101, 18'b011111010100001101},
		data_w_892 = {18'b100001100101110100, 18'b111110111111101000},
		data_w_893 = {18'b100001100110110100, 18'b010111110100110100},
		data_w_894 = {18'b100001100111110011, 18'b101001110100101111},
		data_w_895 = {18'b100001101000110010, 18'b110101000000011000},
		data_w_896 = {18'b100001101001110001, 18'b111001011000101101},
		data_w_897 = {18'b100001101010110000, 18'b110110111110101110},
		data_w_898 = {18'b100001101011101111, 18'b101101110011011001},
		data_w_899 = {18'b100001101100101110, 18'b011101110111101101},
		data_w_9 = {18'b000000100011111111, 18'b110000110100001011},
		data_w_90 = {18'b000101100100010110, 18'b111111111111111011},
		data_w_900 = {18'b100001101101101101, 18'b000111001100100110},
		data_w_901 = {18'b100001101110101011, 18'b101001110011000100},
		data_w_902 = {18'b100001101111101010, 18'b000101101100000011},
		data_w_903 = {18'b100001110000101000, 18'b011010111000100011},
		data_w_904 = {18'b100001110001100110, 18'b101001011001011111},
		data_w_905 = {18'b100001110010100100, 18'b110001001111110110},
		data_w_906 = {18'b100001110011100010, 18'b110010011100100101},
		data_w_907 = {18'b100001110100100000, 18'b101101000000101001},
		data_w_908 = {18'b100001110101011110, 18'b100000111100111110},
		data_w_909 = {18'b100001110110011100, 18'b001110010010100010},
		data_w_91 = {18'b000101101000001111, 18'b001111100111001100},
		data_w_910 = {18'b100001110111011001, 18'b110101000010010000},
		data_w_911 = {18'b100001111000010111, 18'b010101001101000110},
		data_w_912 = {18'b100001111001010100, 18'b101110110011111111},
		data_w_913 = {18'b100001111010010010, 18'b000001110111111001},
		data_w_914 = {18'b100001111011001111, 18'b001110011001101101},
		data_w_915 = {18'b100001111100001100, 18'b010100011010011001},
		data_w_916 = {18'b100001111101001001, 18'b010011111010111001},
		data_w_917 = {18'b100001111110000110, 18'b001100111100000111},
		data_w_918 = {18'b100001111111000010, 18'b111111011110111110},
		data_w_919 = {18'b100001111111111111, 18'b101011100100011011},
		data_w_92 = {18'b000101101100000111, 18'b010100100010011000},
		data_w_920 = {18'b100010000000111100, 18'b010001001101011000},
		data_w_921 = {18'b100010000001111000, 18'b110000011010110000},
		data_w_922 = {18'b100010000010110101, 18'b001001001101011110},
		data_w_923 = {18'b100010000011110001, 18'b011011100110011100},
		data_w_924 = {18'b100010000100101101, 18'b100111100110100100},
		data_w_925 = {18'b100010000101101001, 18'b101101001110110010},
		data_w_926 = {18'b100010000110100101, 18'b101100011111111111},
		data_w_927 = {18'b100010000111100001, 18'b100101011011000110},
		data_w_928 = {18'b100010001000011101, 18'b011000000000111111},
		data_w_929 = {18'b100010001001011001, 18'b000100010010100101},
		data_w_93 = {18'b000101101111111111, 18'b001110101010111000},
		data_w_930 = {18'b100010001010010100, 18'b101010010000110010},
		data_w_931 = {18'b100010001011010000, 18'b001001111100011110},
		data_w_932 = {18'b100010001100001011, 18'b100011010110100011},
		data_w_933 = {18'b100010001101000110, 18'b110110011111111010},
		data_w_934 = {18'b100010001110000010, 18'b000011011001011100},
		data_w_935 = {18'b100010001110111101, 18'b001010000100000001},
		data_w_936 = {18'b100010001111111000, 18'b001010100000100100},
		data_w_937 = {18'b100010010000110011, 18'b000100101111111011},
		data_w_938 = {18'b100010010001101101, 18'b111000110011000000},
		data_w_939 = {18'b100010010010101000, 18'b100110101010101010},
		data_w_94 = {18'b000101110011110110, 18'b111101111010001010},
		data_w_940 = {18'b100010010011100011, 18'b001110010111110010},
		data_w_941 = {18'b100010010100011101, 18'b101111111011010000},
		data_w_942 = {18'b100010010101011000, 18'b001011010101111011},
		data_w_943 = {18'b100010010110010010, 18'b100000101000101100},
		data_w_944 = {18'b100010010111001100, 18'b101111110100011001},
		data_w_945 = {18'b100010011000000110, 18'b111000111001111010},
		data_w_946 = {18'b100010011001000000, 18'b111011111010000110},
		data_w_947 = {18'b100010011001111010, 18'b111000110101110101},
		data_w_948 = {18'b100010011010110100, 18'b101111101101111101},
		data_w_949 = {18'b100010011011101110, 18'b100000100011010110},
		data_w_95 = {18'b000101110111101110, 18'b100010001001101011},
		data_w_950 = {18'b100010011100101000, 18'b001011010110110101},
		data_w_951 = {18'b100010011101100001, 18'b110000001001010001},
		data_w_952 = {18'b100010011110011011, 18'b001110111011100001},
		data_w_953 = {18'b100010011111010100, 18'b100111101110011100},
		data_w_954 = {18'b100010100000001101, 18'b111010100010110110},
		data_w_955 = {18'b100010100001000111, 18'b000111011001100111},
		data_w_956 = {18'b100010100010000000, 18'b001110010011100011},
		data_w_957 = {18'b100010100010111001, 18'b001111010001100001},
		data_w_958 = {18'b100010100011110010, 18'b001010010100010110},
		data_w_959 = {18'b100010100100101010, 18'b111111011100111000},
		data_w_96 = {18'b000101111011100101, 18'b111011010010111100},
		data_w_960 = {18'b100010100101100011, 18'b101110101011111100},
		data_w_961 = {18'b100010100110011100, 18'b011000000010010111},
		data_w_962 = {18'b100010100111010100, 18'b111011100000111110},
		data_w_963 = {18'b100010101000001101, 18'b011001001000100110},
		data_w_964 = {18'b100010101001000101, 18'b110000111010000100},
		data_w_965 = {18'b100010101001111110, 18'b000010110110001100},
		data_w_966 = {18'b100010101010110110, 18'b001110111101110011},
		data_w_967 = {18'b100010101011101110, 18'b010101010001101101},
		data_w_968 = {18'b100010101100100110, 18'b010101110010101110},
		data_w_969 = {18'b100010101101011110, 18'b010000100001101011},
		data_w_97 = {18'b000101111111011101, 18'b001001001111100000},
		data_w_970 = {18'b100010101110010110, 18'b000101011111010111},
		data_w_971 = {18'b100010101111001101, 18'b110100101100100111},
		data_w_972 = {18'b100010110000000101, 18'b011110001010001101},
		data_w_973 = {18'b100010110000111101, 18'b000001111000111110},
		data_w_974 = {18'b100010110001110100, 18'b011111111001101100},
		data_w_975 = {18'b100010110010101011, 18'b111000001101001100},
		data_w_976 = {18'b100010110011100011, 18'b001010110100010000},
		data_w_977 = {18'b100010110100011010, 18'b010111101111101011},
		data_w_978 = {18'b100010110101010001, 18'b011111000000010000},
		data_w_979 = {18'b100010110110001000, 18'b100000100110110010},
		data_w_98 = {18'b000110000011010100, 18'b001011111000111001},
		data_w_980 = {18'b100010110110111111, 18'b011100100100000100},
		data_w_981 = {18'b100010110111110110, 18'b010010111000111000},
		data_w_982 = {18'b100010111000101101, 18'b000011100110000000},
		data_w_983 = {18'b100010111001100011, 18'b101110101100001111},
		data_w_984 = {18'b100010111010011010, 18'b010100001100010110},
		data_w_985 = {18'b100010111011010000, 18'b110100000111001000},
		data_w_986 = {18'b100010111100000111, 18'b001110011101010111},
		data_w_987 = {18'b100010111100111101, 18'b100011001111110100},
		data_w_988 = {18'b100010111101110011, 18'b110010011111010001},
		data_w_989 = {18'b100010111110101001, 18'b111100001100011111},
		data_w_99 = {18'b000110000111001011, 18'b000011001000101111},
		data_w_990 = {18'b100010111111100000, 18'b000000011000010001},
		data_w_991 = {18'b100011000000010101, 18'b111111000011010110},
		data_w_992 = {18'b100011000001001011, 18'b111000001110100000},
		data_w_993 = {18'b100011000010000001, 18'b101011111010100000},
		data_w_994 = {18'b100011000010110111, 18'b011010001000000110},
		data_w_995 = {18'b100011000011101101, 18'b000010111000000101},
		data_w_996 = {18'b100011000100100010, 18'b100110001011001011},
		data_w_997 = {18'b100011000101011000, 18'b000100000010001010},
		data_w_998 = {18'b100011000110001101, 18'b011100011101110011},
		data_w_999 = {18'b100011000111000010, 18'b101111011110110100};
endmodule //ip_atan_altfp_atan_lut_vu6

//synthesis_resources = lpm_add_sub 15 lpm_clshift 2 lpm_mult 8 lpm_mux 11 reg 3254 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ip_atan_altfp_atan_eqd
	( 
	aclr,
	clk_en,
	clock,
	data,
	result) ;
	input   aclr;
	input   clk_en;
	input   clock;
	input   [31:0]  data;
	output   [31:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clk_en;
	tri0   clock;
	tri0   [31:0]  data;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [5:0]   wire_ccsat_leading;
	wire  [35:0]   wire_cdc_cc;
	wire  [35:0]   wire_cdlut_cc;
	wire  [35:0]   wire_cdma_cc;
	wire  [35:0]   wire_invcore_quotient;
	wire  [35:0]   wire_invtwo_quotient;
	wire  [35:0]   wire_clut_data;
	reg	[35:0]	a_fixedpointff;
	reg	[9:0]	a_shiftff;
	reg	[35:0]	atantermff_0;
	reg	[35:0]	atantermff_1;
	reg	[7:0]	exponent_adjustff;
	reg	[7:0]	exponent_outff;
	reg	[7:0]	exponentinff_0;
	reg	[7:0]	exponentinff_1;
	reg	[7:0]	exponentinff_2;
	reg	[7:0]	exponentinff_3;
	reg	[7:0]	exponentinff_4;
	reg	[7:0]	exponentinff_5;
	reg	[7:0]	exponentinff_6;
	reg	[7:0]	exponentinff_7;
	reg	[7:0]	exponentinff_8;
	reg	[7:0]	exponentinff_9;
	reg	[7:0]	exponentoffset;
	reg	[7:0]	exponentoffsetff0;
	reg	[7:0]	exponentoffsetff1;
	reg	[7:0]	exponentoffsetff10;
	reg	[7:0]	exponentoffsetff11;
	reg	[7:0]	exponentoffsetff12;
	reg	[7:0]	exponentoffsetff13;
	reg	[7:0]	exponentoffsetff14;
	reg	[7:0]	exponentoffsetff15;
	reg	[7:0]	exponentoffsetff16;
	reg	[7:0]	exponentoffsetff17;
	reg	[7:0]	exponentoffsetff18;
	reg	[7:0]	exponentoffsetff19;
	reg	[7:0]	exponentoffsetff2;
	reg	[7:0]	exponentoffsetff20;
	reg	[7:0]	exponentoffsetff21;
	reg	[7:0]	exponentoffsetff22;
	reg	[7:0]	exponentoffsetff23;
	reg	[7:0]	exponentoffsetff24;
	reg	[7:0]	exponentoffsetff25;
	reg	[7:0]	exponentoffsetff26;
	reg	[7:0]	exponentoffsetff27;
	reg	[7:0]	exponentoffsetff28;
	reg	[7:0]	exponentoffsetff29;
	reg	[7:0]	exponentoffsetff3;
	reg	[7:0]	exponentoffsetff30;
	reg	[7:0]	exponentoffsetff31;
	reg	[7:0]	exponentoffsetff32;
	reg	[7:0]	exponentoffsetff4;
	reg	[7:0]	exponentoffsetff5;
	reg	[7:0]	exponentoffsetff6;
	reg	[7:0]	exponentoffsetff7;
	reg	[7:0]	exponentoffsetff8;
	reg	[7:0]	exponentoffsetff9;
	reg	[9:0]	exponenttopff_0;
	reg	[9:0]	exponenttopff_1;
	reg	[9:0]	exponenttopff_2;
	reg	[9:0]	exponenttopff_3;
	reg	[9:0]	exponenttopff_4;
	reg	[9:0]	exponenttopff_5;
	reg	[9:0]	exponenttopff_6;
	reg	[9:0]	exponenttopff_7;
	reg	[9:0]	exponenttopff_8;
	reg	[9:0]	forward_shiftff;
	reg	[9:0]	inverse_shiftff;
	reg	[35:0]	large_atanff;
	reg	[35:0]	large_mantissaff;
	reg	large_overflowff;
	reg	[22:0]	mantissa_roundff;
	reg	[32:0]	pathselectff;
	reg	[33:0]	signff;
	reg	[5:0]	small_countff;
	reg	[35:0]	small_mantissaff;
	reg	small_overflowff;
	wire  [35:0]   wire_atantermff0_add_result;
	wire  [7:0]   wire_exponent_outff_add_result;
	wire  [7:0]   wire_exponent_outff_sub_result;
	wire  [9:0]   wire_exponenttopff1_sub_result;
	wire  [9:0]   wire_exponenttopff2_add_result;
	wire  [9:0]   wire_exponenttopff2_sub_result;
	wire  [9:0]   wire_forward_shiftff_sub_result;
	wire  [9:0]   wire_inverse_shiftff_sub_result;
	wire  [35:0]   wire_large_atanff_sub_result;
	wire  [22:0]   wire_mantissa_roundff_add_result;
	wire  [8:0]   wire_pathcheck_sub_result;
	wire  [35:0]   wire_casr_result;
	wire  [35:0]   wire_cssat_result;
	wire  [36:0]   wire_cmone_result;
	wire  [35:0]   wire_cmtwo_result;
	wire  [35:0]  a_fixedpoint_w;
	wire  [35:0]  a_fixedpointbus_w;
	wire  [35:0]  a_mantissanode_w;
	wire  [36:0]  ab_fixedpoint_w;
	wire  [35:0]  ab_plusone_w;
	wire  [35:0]  addterm_w;
	wire  [9:0]  b_address_w;
	wire  [35:0]  b_fixedpoint_w;
	wire  [35:0]  c_fixedpoint_w;
	wire  [9:0]  const_forward_shiftff_w;
	wire  [9:0]  const_inverse_shiftff_w;
	wire  [8:0]  const_pathcheck2_w;
	wire  [8:0]  const_pathcheck_w;
	wire  [35:0]  datab_w;
	wire  [35:0]  delinputnumber_w;
	wire  [35:0]  dellutterm_w;
	wire  [35:0]  denominator_w;
	wire  [7:0]  exponent_adjust_w;
	wire  [7:0]  exponent_outff_sub_w;
	wire  [9:0]  exponentinff_addbit_w;
	wire  [7:0]  exponentoffset_0_w;
	wire  [7:0]  exponentoffset_127_w;
	wire  [9:0]  exponentoffset_addbit_w;
	wire  [9:0]  exponentoffsetff_addbit_w;
	wire  [35:0]  inputnumber_w;
	wire  [7:0]  large_exponent_adjust_w;
	wire  [35:0]  large_mantissa_w;
	wire  [23:0]  large_overflowbus_w;
	wire  [35:0]  lutterm_w;
	wire  [22:0]  mantissain_w;
	wire  [35:0]  mux_mantissa_w;
	wire  mux_overflow_w;
	wire  [35:0]  numerator_w;
	wire  offsetbit_w;
	wire  [8:0]  pathcheck_w;
	wire  [35:0]  pi_over_two_w;
	wire  [22:0]  roundbit_extend_w;
	wire  roundbit_w;
	wire  [5:0]  small_count_w;
	wire  [7:0]  small_exponent_adjust_w;
	wire  [35:0]  small_mantissa_w;
	wire  [23:0]  small_overflowbus_w;
	wire  [35:0]  topquotient_w;
	wire  [35:0]  topquotientnumber_w;
	wire  [6:0]  value_x0000000_v_w;
	wire  [1:0]  value_x00_v_w;
	wire  [35:0]  zerovec_w;

	ip_atan_altfp_atan_clz36_dt7   ccsat
	( 
	.leading(wire_ccsat_leading),
	.mantissa(atantermff_0));
	ip_atan_altfp_atan_del_8m9   cdc
	( 
	.aa(c_fixedpoint_w),
	.aclr(aclr),
	.cc(wire_cdc_cc),
	.clk_en(clk_en),
	.clock(clock));
	ip_atan_altfp_atan_del_bm9   cdlut
	( 
	.aa(lutterm_w),
	.aclr(aclr),
	.cc(wire_cdlut_cc),
	.clk_en(clk_en),
	.clock(clock));
	ip_atan_altfp_atan_del_5m9   cdma
	( 
	.aa(inputnumber_w),
	.aclr(aclr),
	.cc(wire_cdma_cc),
	.clk_en(clk_en),
	.clock(clock));
	ip_atan_altfp_atan_invcore_gt9   invcore
	( 
	.aclr(aclr),
	.clk_en(clk_en),
	.clock(clock),
	.divisor(inputnumber_w),
	.quotient(wire_invcore_quotient));
	ip_atan_altfp_atan_invcore_gt9   invtwo
	( 
	.aclr(aclr),
	.clk_en(clk_en),
	.clock(clock),
	.divisor(ab_plusone_w),
	.quotient(wire_invtwo_quotient));
	ip_atan_altfp_atan_lut_vu6   clut
	( 
	.add(b_address_w),
	.data(wire_clut_data));
	// synopsys translate_off
	initial
		a_fixedpointff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) a_fixedpointff <= 36'b0;
		else if  (clk_en == 1'b1)   a_fixedpointff <= a_fixedpointbus_w;
	// synopsys translate_off
	initial
		a_shiftff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) a_shiftff <= 10'b0;
		else if  (clk_en == 1'b1)   a_shiftff <= {{4{1'b0}}, ((forward_shiftff[5:0] & {6{(~ pathselectff[9])}}) | (inverse_shiftff[5:0] & {6{pathselectff[9]}}))};
	// synopsys translate_off
	initial
		atantermff_0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) atantermff_0 <= 36'b0;
		else if  (clk_en == 1'b1)   atantermff_0 <= wire_atantermff0_add_result;
	// synopsys translate_off
	initial
		atantermff_1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) atantermff_1 <= 36'b0;
		else if  (clk_en == 1'b1)   atantermff_1 <= atantermff_0;
	// synopsys translate_off
	initial
		exponent_adjustff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponent_adjustff <= 8'b0;
		else if  (clk_en == 1'b1)   exponent_adjustff <= exponent_adjust_w;
	// synopsys translate_off
	initial
		exponent_outff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponent_outff <= 8'b0;
		else if  (clk_en == 1'b1)   exponent_outff <= wire_exponent_outff_add_result;
	// synopsys translate_off
	initial
		exponentinff_0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentinff_0 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentinff_0 <= data[30:23];
	// synopsys translate_off
	initial
		exponentinff_1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentinff_1 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentinff_1 <= exponentinff_0;
	// synopsys translate_off
	initial
		exponentinff_2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentinff_2 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentinff_2 <= exponentinff_1;
	// synopsys translate_off
	initial
		exponentinff_3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentinff_3 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentinff_3 <= exponentinff_2;
	// synopsys translate_off
	initial
		exponentinff_4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentinff_4 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentinff_4 <= exponentinff_3;
	// synopsys translate_off
	initial
		exponentinff_5 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentinff_5 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentinff_5 <= exponentinff_4;
	// synopsys translate_off
	initial
		exponentinff_6 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentinff_6 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentinff_6 <= exponentinff_5;
	// synopsys translate_off
	initial
		exponentinff_7 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentinff_7 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentinff_7 <= exponentinff_6;
	// synopsys translate_off
	initial
		exponentinff_8 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentinff_8 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentinff_8 <= exponentinff_7;
	// synopsys translate_off
	initial
		exponentinff_9 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentinff_9 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentinff_9 <= exponentinff_8;
	// synopsys translate_off
	initial
		exponentoffset = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffset <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffset <= ((exponentoffset_0_w & {8{(~ offsetbit_w)}}) | (exponentoffset_127_w & {8{offsetbit_w}}));
	// synopsys translate_off
	initial
		exponentoffsetff0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff0 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff0 <= exponentoffset;
	// synopsys translate_off
	initial
		exponentoffsetff1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff1 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff1 <= exponentoffsetff0;
	// synopsys translate_off
	initial
		exponentoffsetff10 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff10 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff10 <= exponentoffsetff9;
	// synopsys translate_off
	initial
		exponentoffsetff11 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff11 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff11 <= exponentoffsetff10;
	// synopsys translate_off
	initial
		exponentoffsetff12 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff12 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff12 <= exponentoffsetff11;
	// synopsys translate_off
	initial
		exponentoffsetff13 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff13 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff13 <= exponentoffsetff12;
	// synopsys translate_off
	initial
		exponentoffsetff14 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff14 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff14 <= exponentoffsetff13;
	// synopsys translate_off
	initial
		exponentoffsetff15 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff15 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff15 <= exponentoffsetff14;
	// synopsys translate_off
	initial
		exponentoffsetff16 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff16 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff16 <= exponentoffsetff15;
	// synopsys translate_off
	initial
		exponentoffsetff17 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff17 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff17 <= exponentoffsetff16;
	// synopsys translate_off
	initial
		exponentoffsetff18 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff18 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff18 <= exponentoffsetff17;
	// synopsys translate_off
	initial
		exponentoffsetff19 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff19 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff19 <= exponentoffsetff18;
	// synopsys translate_off
	initial
		exponentoffsetff2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff2 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff2 <= exponentoffsetff1;
	// synopsys translate_off
	initial
		exponentoffsetff20 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff20 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff20 <= exponentoffsetff19;
	// synopsys translate_off
	initial
		exponentoffsetff21 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff21 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff21 <= exponentoffsetff20;
	// synopsys translate_off
	initial
		exponentoffsetff22 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff22 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff22 <= exponentoffsetff21;
	// synopsys translate_off
	initial
		exponentoffsetff23 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff23 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff23 <= exponentoffsetff22;
	// synopsys translate_off
	initial
		exponentoffsetff24 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff24 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff24 <= exponentoffsetff23;
	// synopsys translate_off
	initial
		exponentoffsetff25 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff25 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff25 <= exponentoffsetff24;
	// synopsys translate_off
	initial
		exponentoffsetff26 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff26 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff26 <= exponentoffsetff25;
	// synopsys translate_off
	initial
		exponentoffsetff27 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff27 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff27 <= exponentoffsetff26;
	// synopsys translate_off
	initial
		exponentoffsetff28 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff28 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff28 <= exponentoffsetff27;
	// synopsys translate_off
	initial
		exponentoffsetff29 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff29 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff29 <= exponentoffsetff28;
	// synopsys translate_off
	initial
		exponentoffsetff3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff3 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff3 <= exponentoffsetff2;
	// synopsys translate_off
	initial
		exponentoffsetff30 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff30 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff30 <= exponentoffsetff29;
	// synopsys translate_off
	initial
		exponentoffsetff31 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff31 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff31 <= exponentoffsetff30;
	// synopsys translate_off
	initial
		exponentoffsetff32 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff32 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff32 <= exponentoffsetff31;
	// synopsys translate_off
	initial
		exponentoffsetff4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff4 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff4 <= exponentoffsetff3;
	// synopsys translate_off
	initial
		exponentoffsetff5 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff5 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff5 <= exponentoffsetff4;
	// synopsys translate_off
	initial
		exponentoffsetff6 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff6 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff6 <= exponentoffsetff5;
	// synopsys translate_off
	initial
		exponentoffsetff7 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff7 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff7 <= exponentoffsetff6;
	// synopsys translate_off
	initial
		exponentoffsetff8 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff8 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff8 <= exponentoffsetff7;
	// synopsys translate_off
	initial
		exponentoffsetff9 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoffsetff9 <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoffsetff9 <= exponentoffsetff8;
	// synopsys translate_off
	initial
		exponenttopff_0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponenttopff_0 <= 10'b0;
		else if  (clk_en == 1'b1)   exponenttopff_0 <= wire_exponenttopff1_sub_result;
	// synopsys translate_off
	initial
		exponenttopff_1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponenttopff_1 <= 10'b0;
		else if  (clk_en == 1'b1)   exponenttopff_1 <= wire_exponenttopff2_add_result;
	// synopsys translate_off
	initial
		exponenttopff_2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponenttopff_2 <= 10'b0;
		else if  (clk_en == 1'b1)   exponenttopff_2 <= wire_exponenttopff2_sub_result;
	// synopsys translate_off
	initial
		exponenttopff_3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponenttopff_3 <= 10'b0;
		else if  (clk_en == 1'b1)   exponenttopff_3 <= exponenttopff_2;
	// synopsys translate_off
	initial
		exponenttopff_4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponenttopff_4 <= 10'b0;
		else if  (clk_en == 1'b1)   exponenttopff_4 <= exponenttopff_3;
	// synopsys translate_off
	initial
		exponenttopff_5 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponenttopff_5 <= 10'b0;
		else if  (clk_en == 1'b1)   exponenttopff_5 <= exponenttopff_4;
	// synopsys translate_off
	initial
		exponenttopff_6 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponenttopff_6 <= 10'b0;
		else if  (clk_en == 1'b1)   exponenttopff_6 <= exponenttopff_5;
	// synopsys translate_off
	initial
		exponenttopff_7 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponenttopff_7 <= 10'b0;
		else if  (clk_en == 1'b1)   exponenttopff_7 <= exponenttopff_6;
	// synopsys translate_off
	initial
		exponenttopff_8 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponenttopff_8 <= 10'b0;
		else if  (clk_en == 1'b1)   exponenttopff_8 <= exponenttopff_7;
	// synopsys translate_off
	initial
		forward_shiftff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) forward_shiftff <= 10'b0;
		else if  (clk_en == 1'b1)   forward_shiftff <= wire_forward_shiftff_sub_result;
	// synopsys translate_off
	initial
		inverse_shiftff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) inverse_shiftff <= 10'b0;
		else if  (clk_en == 1'b1)   inverse_shiftff <= wire_inverse_shiftff_sub_result;
	// synopsys translate_off
	initial
		large_atanff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) large_atanff <= 36'b0;
		else if  (clk_en == 1'b1)   large_atanff <= wire_large_atanff_sub_result;
	// synopsys translate_off
	initial
		large_mantissaff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) large_mantissaff <= 36'b0;
		else if  (clk_en == 1'b1)   large_mantissaff <= large_mantissa_w;
	// synopsys translate_off
	initial
		large_overflowff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) large_overflowff <= 1'b0;
		else if  (clk_en == 1'b1)   large_overflowff <= large_overflowbus_w[23];
	// synopsys translate_off
	initial
		mantissa_roundff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) mantissa_roundff <= 23'b0;
		else if  (clk_en == 1'b1)   mantissa_roundff <= wire_mantissa_roundff_add_result;
	// synopsys translate_off
	initial
		pathselectff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) pathselectff <= 33'b0;
		else if  (clk_en == 1'b1)   pathselectff <= {pathselectff[31:0], pathcheck_w[8]};
	// synopsys translate_off
	initial
		signff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) signff <= 34'b0;
		else if  (clk_en == 1'b1)   signff <= {signff[32:0], data[31]};
	// synopsys translate_off
	initial
		small_countff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) small_countff <= 6'b0;
		else if  (clk_en == 1'b1)   small_countff <= small_count_w;
	// synopsys translate_off
	initial
		small_mantissaff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) small_mantissaff <= 36'b0;
		else if  (clk_en == 1'b1)   small_mantissaff <= small_mantissa_w;
	// synopsys translate_off
	initial
		small_overflowff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) small_overflowff <= 1'b0;
		else if  (clk_en == 1'b1)   small_overflowff <= small_overflowbus_w[23];
	lpm_add_sub   atantermff0_add
	( 
	.cout(),
	.dataa(dellutterm_w),
	.datab(datab_w),
	.overflow(),
	.result(wire_atantermff0_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.cin(),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		atantermff0_add.lpm_direction = "ADD",
		atantermff0_add.lpm_representation = "UNSIGNED",
		atantermff0_add.lpm_width = 36,
		atantermff0_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   exponent_outff_add
	( 
	.cout(),
	.dataa(exponent_outff_sub_w),
	.datab({{7{1'b0}}, mux_overflow_w}),
	.overflow(),
	.result(wire_exponent_outff_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.cin(),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		exponent_outff_add.lpm_direction = "ADD",
		exponent_outff_add.lpm_representation = "UNSIGNED",
		exponent_outff_add.lpm_width = 8,
		exponent_outff_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   exponent_outff_sub
	( 
	.cout(),
	.dataa(exponentoffsetff32),
	.datab(exponent_adjustff),
	.overflow(),
	.result(wire_exponent_outff_sub_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.cin(),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		exponent_outff_sub.lpm_direction = "SUB",
		exponent_outff_sub.lpm_representation = "UNSIGNED",
		exponent_outff_sub.lpm_width = 8,
		exponent_outff_sub.lpm_type = "lpm_add_sub";
	lpm_add_sub   exponenttopff1_sub
	( 
	.cout(),
	.dataa(exponentoffset_addbit_w),
	.datab(exponentinff_addbit_w),
	.overflow(),
	.result(wire_exponenttopff1_sub_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.cin(),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		exponenttopff1_sub.lpm_direction = "SUB",
		exponenttopff1_sub.lpm_representation = "UNSIGNED",
		exponenttopff1_sub.lpm_width = 10,
		exponenttopff1_sub.lpm_type = "lpm_add_sub";
	lpm_add_sub   exponenttopff2_add
	( 
	.cout(),
	.dataa(exponenttopff_0),
	.datab(exponentoffsetff_addbit_w),
	.overflow(),
	.result(wire_exponenttopff2_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.cin(),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		exponenttopff2_add.lpm_direction = "ADD",
		exponenttopff2_add.lpm_representation = "UNSIGNED",
		exponenttopff2_add.lpm_width = 10,
		exponenttopff2_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   exponenttopff2_sub
	( 
	.cout(),
	.dataa(exponenttopff_1),
	.datab(10'b0000000001),
	.overflow(),
	.result(wire_exponenttopff2_sub_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.cin(),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		exponenttopff2_sub.lpm_direction = "SUB",
		exponenttopff2_sub.lpm_representation = "UNSIGNED",
		exponenttopff2_sub.lpm_width = 10,
		exponenttopff2_sub.lpm_type = "lpm_add_sub";
	lpm_add_sub   forward_shiftff_sub
	( 
	.cout(),
	.dataa(const_forward_shiftff_w),
	.datab({{2{1'b0}}, exponentinff_9}),
	.overflow(),
	.result(wire_forward_shiftff_sub_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.cin(),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		forward_shiftff_sub.lpm_direction = "SUB",
		forward_shiftff_sub.lpm_representation = "UNSIGNED",
		forward_shiftff_sub.lpm_width = 10,
		forward_shiftff_sub.lpm_type = "lpm_add_sub";
	lpm_add_sub   inverse_shiftff_sub
	( 
	.cout(),
	.dataa(const_inverse_shiftff_w),
	.datab(exponenttopff_8),
	.overflow(),
	.result(wire_inverse_shiftff_sub_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.cin(),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		inverse_shiftff_sub.lpm_direction = "SUB",
		inverse_shiftff_sub.lpm_representation = "UNSIGNED",
		inverse_shiftff_sub.lpm_width = 10,
		inverse_shiftff_sub.lpm_type = "lpm_add_sub";
	lpm_add_sub   large_atanff_sub
	( 
	.cout(),
	.dataa(pi_over_two_w),
	.datab(atantermff_0),
	.overflow(),
	.result(wire_large_atanff_sub_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.cin(),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		large_atanff_sub.lpm_direction = "SUB",
		large_atanff_sub.lpm_representation = "UNSIGNED",
		large_atanff_sub.lpm_width = 36,
		large_atanff_sub.lpm_type = "lpm_add_sub";
	lpm_add_sub   mantissa_roundff_add
	( 
	.cout(),
	.dataa(mux_mantissa_w[34:12]),
	.datab(roundbit_extend_w),
	.overflow(),
	.result(wire_mantissa_roundff_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.cin(),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		mantissa_roundff_add.lpm_direction = "ADD",
		mantissa_roundff_add.lpm_representation = "UNSIGNED",
		mantissa_roundff_add.lpm_width = 23,
		mantissa_roundff_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   pathcheck_sub
	( 
	.cout(),
	.dataa(const_pathcheck_w),
	.datab(const_pathcheck2_w),
	.overflow(),
	.result(wire_pathcheck_sub_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.cin(),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		pathcheck_sub.lpm_direction = "SUB",
		pathcheck_sub.lpm_representation = "UNSIGNED",
		pathcheck_sub.lpm_width = 9,
		pathcheck_sub.lpm_type = "lpm_add_sub";
	lpm_clshift   casr
	( 
	.data(a_mantissanode_w),
	.direction(1'b1),
	.distance(a_shiftff[5:0]),
	.overflow(),
	.result(wire_casr_result),
	.underflow()
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		casr.lpm_width = 36,
		casr.lpm_widthdist = 6,
		casr.lpm_type = "lpm_clshift";
	lpm_clshift   cssat
	( 
	.data(atantermff_1),
	.direction(1'b0),
	.distance(small_countff),
	.overflow(),
	.result(wire_cssat_result),
	.underflow()
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		cssat.lpm_width = 36,
		cssat.lpm_widthdist = 6,
		cssat.lpm_type = "lpm_clshift";
	lpm_mult   cmone
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.dataa(a_fixedpoint_w),
	.datab(b_fixedpoint_w),
	.result(wire_cmone_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.sum({1{1'b0}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		cmone.lpm_pipeline = 3,
		cmone.lpm_representation = "UNSIGNED",
		cmone.lpm_widtha = 36,
		cmone.lpm_widthb = 36,
		cmone.lpm_widthp = 37,
		cmone.lpm_type = "lpm_mult";
	lpm_mult   cmtwo
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.dataa(numerator_w),
	.datab(denominator_w),
	.result(wire_cmtwo_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.sum({1{1'b0}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		cmtwo.lpm_pipeline = 3,
		cmtwo.lpm_representation = "UNSIGNED",
		cmtwo.lpm_widtha = 36,
		cmtwo.lpm_widthb = 36,
		cmtwo.lpm_widthp = 36,
		cmtwo.lpm_type = "lpm_mult";
	assign
		a_fixedpoint_w = a_fixedpointff,
		a_fixedpointbus_w = wire_casr_result,
		a_mantissanode_w = ((delinputnumber_w & {36{(~ pathselectff[10])}}) | (topquotientnumber_w & {36{pathselectff[10]}})),
		ab_fixedpoint_w = wire_cmone_result,
		ab_plusone_w = {1'b1, ab_fixedpoint_w[34:0]},
		addterm_w = wire_cmtwo_result,
		b_address_w = a_fixedpoint_w[35:26],
		b_fixedpoint_w = {a_fixedpointff[35:26], zerovec_w[25:0]},
		c_fixedpoint_w = {a_fixedpointff[25:0], zerovec_w[9:0]},
		const_forward_shiftff_w = 10'b0001111111,
		const_inverse_shiftff_w = 10'b0001111111,
		const_pathcheck2_w = {1'b0, exponentinff_0},
		const_pathcheck_w = 9'b001111110,
		datab_w = {zerovec_w[8:0], addterm_w[35:9]},
		delinputnumber_w = wire_cdma_cc,
		dellutterm_w = wire_cdlut_cc,
		denominator_w = wire_invtwo_quotient,
		exponent_adjust_w = {((small_exponent_adjust_w[7] & (~ pathselectff[31])) | (large_exponent_adjust_w[7] & pathselectff[31])), ((small_exponent_adjust_w[6] & (~ pathselectff[31])) | (large_exponent_adjust_w[6] & pathselectff[31])), ((small_exponent_adjust_w[5] & (~ pathselectff[31])) | (large_exponent_adjust_w[5] & pathselectff[31])), ((small_exponent_adjust_w[4] & (~ pathselectff[31])) | (large_exponent_adjust_w[4] & pathselectff[31])), ((small_exponent_adjust_w[3] & (~ pathselectff[31])) | (large_exponent_adjust_w[3] & pathselectff[31])), ((small_exponent_adjust_w[2] & (~ pathselectff[31])) | (large_exponent_adjust_w[2] & pathselectff[31])), ((small_exponent_adjust_w[1] & (~ pathselectff[31])) | (large_exponent_adjust_w[1] & pathselectff[31])), ((small_exponent_adjust_w[0] & (~ pathselectff[31])) | (large_exponent_adjust_w[0] & pathselectff[31]))},
		exponent_outff_sub_w = wire_exponent_outff_sub_result,
		exponentinff_addbit_w = {{2{1'b0}}, exponentinff_0},
		exponentoffset_0_w = {8{1'b0}},
		exponentoffset_127_w = 8'b01111111,
		exponentoffset_addbit_w = {{2{1'b0}}, exponentoffset},
		exponentoffsetff_addbit_w = {{2{1'b0}}, exponentoffsetff0},
		inputnumber_w = {1'b1, mantissain_w, {12{1'b0}}},
		large_exponent_adjust_w = {value_x0000000_v_w, (~ large_atanff[35])},
		large_mantissa_w = {((large_atanff[34] & (~ large_atanff[35])) | (large_atanff[35] & large_atanff[35])), ((large_atanff[33] & (~ large_atanff[35])) | (large_atanff[34] & large_atanff[35])), ((large_atanff[32] & (~ large_atanff[35])) | (large_atanff[33] & large_atanff[35])), ((large_atanff[31] & (~ large_atanff[35])) | (large_atanff[32] & large_atanff[35])), ((large_atanff[30] & (~ large_atanff[35])) | (large_atanff[31] & large_atanff[35])), ((large_atanff[29] & (~ large_atanff[35])) | (large_atanff[30] & large_atanff[35])), ((large_atanff[28] & (~ large_atanff[35])) | (large_atanff[29] & large_atanff[35])), ((large_atanff[27] & (~ large_atanff[35])) | (large_atanff[28] & large_atanff[35])), ((large_atanff[26] & (~ large_atanff[35])) | (large_atanff[27] & large_atanff[35])), ((large_atanff[25] & (~ large_atanff[35])) | (large_atanff[26] & large_atanff[35])), ((large_atanff[24] & (~ large_atanff[35])) | (large_atanff[25] & large_atanff[35])), ((large_atanff[23] & (~ large_atanff[35])) | (large_atanff[24] & large_atanff[35])), ((large_atanff[22] & (~ large_atanff[35])) | (large_atanff[23] & large_atanff[35])), ((large_atanff[21] & (~ large_atanff[35])) | (large_atanff[22] & large_atanff[35])), ((large_atanff[20] & (~ large_atanff[35])) | (large_atanff[21] & large_atanff[35])), ((large_atanff[19] & (~ large_atanff[35])) | (large_atanff[20] & large_atanff[35])), ((large_atanff[18] & (~ large_atanff[35])) | (large_atanff[19] & large_atanff[35])), ((large_atanff[17] & (~ large_atanff[35])) | (large_atanff[18] & large_atanff[35])), ((large_atanff[16] & (~ large_atanff[35])) | (large_atanff[17] & large_atanff[35])), ((large_atanff[15] & (~ large_atanff[35])) | (large_atanff[16] & large_atanff[35])), ((large_atanff[14] & (~ large_atanff[35])) | (large_atanff[15] & large_atanff[35])), ((large_atanff[13] & (~ large_atanff[35])) | (large_atanff[14] & large_atanff[35])), ((large_atanff[12] & (~ large_atanff[35])) | (large_atanff[13] & large_atanff[35])), ((large_atanff[11] & (~ large_atanff[35])) | (large_atanff[12] & large_atanff[35]
)), ((large_atanff[10] & (~ large_atanff[35])) | (large_atanff[11] & large_atanff[35])), ((large_atanff[9] & (~ large_atanff[35])) | (large_atanff[10] & large_atanff[35])), ((large_atanff[8] & (~ large_atanff[35])) | (large_atanff[9] & large_atanff[35])), ((large_atanff[7] & (~ large_atanff[35])) | (large_atanff[8] & large_atanff[35])), ((large_atanff[6] & (~ large_atanff[35])) | (large_atanff[7] & large_atanff[35])), ((large_atanff[5] & (~ large_atanff[35])) | (large_atanff[6] & large_atanff[35])), ((large_atanff[4] & (~ large_atanff[35])) | (large_atanff[5] & large_atanff[35])), ((large_atanff[3] & (~ large_atanff[35])) | (large_atanff[4] & large_atanff[35])), ((large_atanff[2] & (~ large_atanff[35])) | (large_atanff[3] & large_atanff[35])), ((large_atanff[1] & (~ large_atanff[35])) | (large_atanff[2] & large_atanff[35])), ((large_atanff[0] & (~ large_atanff[35])) | (large_atanff[1] & large_atanff[35])), 1'b0},
		large_overflowbus_w = {(large_overflowbus_w[22] & large_mantissa_w[33]), (large_overflowbus_w[21] & large_mantissa_w[32]), (large_overflowbus_w[20] & large_mantissa_w[31]), (large_overflowbus_w[19] & large_mantissa_w[30]), (large_overflowbus_w[18] & large_mantissa_w[29]), (large_overflowbus_w[17] & large_mantissa_w[28]), (large_overflowbus_w[16] & large_mantissa_w[27]), (large_overflowbus_w[15] & large_mantissa_w[26]), (large_overflowbus_w[14] & large_mantissa_w[25]), (large_overflowbus_w[13] & large_mantissa_w[24]), (large_overflowbus_w[12] & large_mantissa_w[23]), (large_overflowbus_w[11] & large_mantissa_w[22]), (large_overflowbus_w[10] & large_mantissa_w[21]), (large_overflowbus_w[9] & large_mantissa_w[20]), (large_overflowbus_w[8] & large_mantissa_w[19]), (large_overflowbus_w[7] & large_mantissa_w[18]), (large_overflowbus_w[6] & large_mantissa_w[17]), (large_overflowbus_w[5] & large_mantissa_w[16]), (large_overflowbus_w[4] & large_mantissa_w[15]), (large_overflowbus_w[3] & large_mantissa_w[14]), (large_overflowbus_w[2] & large_mantissa_w[13]), (large_overflowbus_w[1] & large_mantissa_w[12]), (large_overflowbus_w[0] & large_mantissa_w[11]), large_mantissa_w[11]},
		lutterm_w = wire_clut_data,
		mantissain_w = data[22:0],
		mux_mantissa_w = ((small_mantissaff & {36{(~ pathselectff[32])}}) | (large_mantissaff & {36{pathselectff[32]}})),
		mux_overflow_w = ((small_overflowff & (~ pathselectff[32])) | (large_overflowff & pathselectff[32])),
		numerator_w = wire_cdc_cc,
		offsetbit_w = (((((((data[30] | data[29]) | data[28]) | data[27]) | data[26]) | data[25]) | data[24]) | data[23]),
		pathcheck_w = wire_pathcheck_sub_result,
		pi_over_two_w = 36'b110010010000111111011010101000100010,
		result = {signff[33], exponent_outff, mantissa_roundff},
		roundbit_extend_w = {{22{1'b0}}, roundbit_w},
		roundbit_w = (mux_mantissa_w[11] | (((((((((mux_mantissa_w[10] & mux_mantissa_w[9]) & mux_mantissa_w[8]) & mux_mantissa_w[7]) & mux_mantissa_w[6]) & mux_mantissa_w[5]) & mux_mantissa_w[4]) & mux_mantissa_w[3]) & mux_mantissa_w[2]) & mux_mantissa_w[1])),
		small_count_w = wire_ccsat_leading,
		small_exponent_adjust_w = {value_x00_v_w, small_countff},
		small_mantissa_w = wire_cssat_result,
		small_overflowbus_w = {(small_overflowbus_w[22] & small_mantissa_w[33]), (small_overflowbus_w[21] & small_mantissa_w[32]), (small_overflowbus_w[20] & small_mantissa_w[31]), (small_overflowbus_w[19] & small_mantissa_w[30]), (small_overflowbus_w[18] & small_mantissa_w[29]), (small_overflowbus_w[17] & small_mantissa_w[28]), (small_overflowbus_w[16] & small_mantissa_w[27]), (small_overflowbus_w[15] & small_mantissa_w[26]), (small_overflowbus_w[14] & small_mantissa_w[25]), (small_overflowbus_w[13] & small_mantissa_w[24]), (small_overflowbus_w[12] & small_mantissa_w[23]), (small_overflowbus_w[11] & small_mantissa_w[22]), (small_overflowbus_w[10] & small_mantissa_w[21]), (small_overflowbus_w[9] & small_mantissa_w[20]), (small_overflowbus_w[8] & small_mantissa_w[19]), (small_overflowbus_w[7] & small_mantissa_w[18]), (small_overflowbus_w[6] & small_mantissa_w[17]), (small_overflowbus_w[5] & small_mantissa_w[16]), (small_overflowbus_w[4] & small_mantissa_w[15]), (small_overflowbus_w[3] & small_mantissa_w[14]), (small_overflowbus_w[2] & small_mantissa_w[13]), (small_overflowbus_w[1] & small_mantissa_w[12]), (small_overflowbus_w[0] & small_mantissa_w[11]), small_mantissa_w[11]},
		topquotient_w = wire_invcore_quotient,
		topquotientnumber_w = {topquotient_w[34:0], 1'b0},
		value_x0000000_v_w = {7{1'b0}},
		value_x00_v_w = {2{1'b0}},
		zerovec_w = {36{1'b0}};
endmodule //ip_atan_altfp_atan_eqd
//VALID FILE


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module ip_atan (
	aclr,
	clk_en,
	clock,
	data,
	result);

	input	  aclr;
	input	  clk_en;
	input	  clock;
	input	[31:0]  data;
	output	[31:0]  result;

	wire [31:0] sub_wire0;
	wire [31:0] result = sub_wire0[31:0];

	ip_atan_altfp_atan_eqd	ip_atan_altfp_atan_eqd_component (
				.aclr (aclr),
				.clk_en (clk_en),
				.clock (clock),
				.data (data),
				.result (sub_wire0));

endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: PRIVATE: FPM_FORMAT NUMERIC "0"
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Cyclone III"
// Retrieval info: PRIVATE: SYNTH_WRAPPER_GEN_POSTFIX STRING "0"
// Retrieval info: LIBRARY: altera_mf altera_mf.altera_mf_components.all
// Retrieval info: CONSTANT: INTENDED_DEVICE_FAMILY STRING "Cyclone III"
// Retrieval info: CONSTANT: PIPELINE NUMERIC "34"
// Retrieval info: CONSTANT: ROUNDING STRING "TO_NEAREST"
// Retrieval info: CONSTANT: WIDTH_EXP NUMERIC "8"
// Retrieval info: CONSTANT: WIDTH_MAN NUMERIC "23"
// Retrieval info: USED_PORT: aclr 0 0 0 0 INPUT NODEFVAL "aclr"
// Retrieval info: USED_PORT: clk_en 0 0 0 0 INPUT NODEFVAL "clk_en"
// Retrieval info: USED_PORT: clock 0 0 0 0 INPUT NODEFVAL "clock"
// Retrieval info: USED_PORT: data 0 0 32 0 INPUT NODEFVAL "data[31..0]"
// Retrieval info: USED_PORT: result 0 0 32 0 OUTPUT NODEFVAL "result[31..0]"
// Retrieval info: CONNECT: @aclr 0 0 0 0 aclr 0 0 0 0
// Retrieval info: CONNECT: @clk_en 0 0 0 0 clk_en 0 0 0 0
// Retrieval info: CONNECT: @clock 0 0 0 0 clock 0 0 0 0
// Retrieval info: CONNECT: @data 0 0 32 0 data 0 0 32 0
// Retrieval info: CONNECT: result 0 0 32 0 @result 0 0 32 0
// Retrieval info: GEN_FILE: TYPE_NORMAL ip_atan.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL ip_atan.inc FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL ip_atan.cmp FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL ip_atan.bsf FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL ip_atan_inst.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL ip_atan_bb.v TRUE
// Retrieval info: LIB_FILE: lpm
